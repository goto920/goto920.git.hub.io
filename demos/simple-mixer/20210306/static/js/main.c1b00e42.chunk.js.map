{"version":3,"sources":["MyFilter.js","MyPitchShifter.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["noop","MyFilter","pipe","callback","sourceSound","historyBufferSize","_sourcePosition","outputBufferPosition","_position","source","i","length","this","push","outSamples","numFramesReq","numFramesExtracted","set","slice","splice","numFrames","samples","Float32Array","extractSource","inputBuffer","putSamples","SimpleFilter","MyPitchShifter","context","numOfInputFrames","bufferSize","record","console","log","recordedSamples","_soundtouch","SoundTouch","_filter","_onEnd","_node","createScriptProcessor","onaudioprocess","bind","_totalInputFrames","_recordedBuffer","_nVirtualOutputFrames","_playingAt","inSamples","sampleRate","nInputFrames","moreInput","nframes","tempo","pitch","rate","createProcessedBuffer","func","disconnect","outputBuffer","createBuffer","left","getChannelData","right","e","nOutputFrames","process","stop","leftIn","rightIn","putSource","framesExtracted","extract","nc","numberOfChannels","channel","input","filename","blob","Blob","toWav","type","saveAs","version","packageJSON","subversion","window","AudioContext","webkitAudioContext","OfflineAudioContext","webkitOfflineAudioContext","App","props","audioCtx","inputAudio","masterGainNode","sliderTimer","startedAt","state","isPlaying","timeA","playingAt","timeB","loop","loopDelay","startButtonStr","gains","masterGain","playSpeed","playPitch","shifter","loadFiles","handlePlay","handleGainSlider","handleTimeSlider","playAB","playABOffline","close","PlayButton","icon","Tooltip","title","IconButton","color","onClick","target","name","style","sort","a","b","sliders","map","value","index","className","id","min","max","onChange","multiple","accept","toFixed","data","duration","setState","aria-label","setSpeed","setPitch","href","rel","event","files","reader","FileReader","onload","decodeAudioData","result","audioBuffer","gainNode","error","err","onerror","readAsArrayBuffer","delay","exportFile","resume","totalInputFrames","Math","pow","createGain","gain","createBufferSource","buffer","connect","node","destination","currentTime","start","timer","setInterval","onEnd","clearInterval","onended","parseFloat","suspend","parseInt","speed","channels","startRendering","oncomplete","renderedBuffer","totalVirtualOutputFrames","exportToFile","Date","now","Component","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","URL","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.c1b00e42.chunk.js","sourcesContent":["/*\n   Written by goto at kmgoto.jp (Mar. 2021)\n   Copyright of my code is not claimed.\n\n   Based on soundtouchjs/src/PitchShifter.js, SimpleFilter.js\n\n   Modified for real time playback.\n\n   PitchShifter ---> MyPitchShifter (minimum code)\n                     includes ScriptProcessorNode\n\n   MyFilter extends SimpleFilter\n\n   Pitch modification and slow down work.\n   Real time fast playback is impossible by nature.\n\n */\n\nimport {SimpleFilter} from 'soundtouchjs'; \n\nconst noop = function () {return;}\n\nexport default class MyFilter extends SimpleFilter {\n  constructor(pipe, callback = noop){\n    super(null, pipe, callback); // sourceSound, callback are not used\n    this.callback = callback;\n    this.sourceSound = [];\n    this.historyBufferSize = 22050;\n    this._sourcePosition = 0;\n    this.outputBufferPosition = 0;\n    this._position = 0;\n  }\n\n/* new method to put samples from e.inputBuffer in onaudioprocess */\n  putSource(source){ \n    for (let i = 0; i < source.length; i++) \n       this.sourceSound.push(source[i]);\n  } // LR interleaved\n\n/* new method replaces getWebAudioNode.extract() */\n  extractSource(outSamples, numFramesReq, frameOffset = 0){\n   \n    let numFramesExtracted = 0;\n    if (this.sourceSound.length < numFramesReq*2) {\n      numFramesExtracted = 0;\n    } else { \n      outSamples.set(this.sourceSound.slice(0,numFramesReq*2));\n      this.sourceSound.splice(0,numFramesReq*2);\n      numFramesExtracted = numFramesReq;\n    }\n    return numFramesExtracted;\n  }\n\n/* Override */\n  fillInputBuffer(numFrames = 0){// samples are LRLR \n    const samples = new Float32Array(numFrames * 2);\n    const numFramesExtracted = this.extractSource(samples,numFrames);\n    if (numFramesExtracted > 0)\n      this.inputBuffer.putSamples(samples,0,numFramesExtracted);\n  } \n\n/* inherited (called when input is end. Not used)\n  onEnd() { this.callback(); }\n*/\n\n\n};\n","/*\n   Written by goto at kmgoto.jp (Mar. 2021)\n   Copyright of my code is not claimed.\n\n   Based on soundtouchjs/src/PitchShifter.js, SimpleFilter.js\n\n   Modified for real time playback.\n\n   PitchShifter ---> MyPitchShifter (minimum code)\n                     includes ScriptProcessorNode\n\n   MyFilter extends SimpleFilter\n\n   Pitch modification and slow down work.\n   Real time fast playback is impossible by nature.\n\n */\n\nimport * as SoundTouch from 'soundtouchjs';\nimport MyFilter from './MyFilter';\nimport {saveAs} from 'file-saver';\nimport * as toWav from 'audiobuffer-to-wav';\n\nconst noop = function() {return;}\n\nexport default class MyPitchShifter {\n  constructor(context, numOfInputFrames, bufferSize, record = false){\n\n    console.log('new MyPitchShifter instance');\n    this.context = context;\n    this.bufferSize = bufferSize;\n    this.record = record;\n    this.recordedSamples = [[],[]];\n\n    this._soundtouch = new SoundTouch.SoundTouch();\n    this._filter = new MyFilter(this._soundtouch, noop); \n    this._onEnd = noop;\n\n    this._node = context.createScriptProcessor(bufferSize,2,2);\n    this._node.onaudioprocess = this.onaudioprocess.bind(this);\n    this._totalInputFrames = numOfInputFrames;\n    this._recordedBuffer = null;\n    this._nVirtualOutputFrames = 0;\n    this._playingAt = 0;\n\n    this.outSamples = new Float32Array(bufferSize*2);\n    this.inSamples  = new Float32Array(bufferSize*2);\n    this.sampleRate = context.sampleRate; \n    this.nInputFrames = 0;\n    this.moreInput = true;\n\n  }\n\n  set totalInputFrames(nframes){ this._totalInputFrames = nframes;}\n  get totalInputFrames(){ return this._totalInputFrames;}\n\n  get totalVirtualOutputFrames(){ return this._nVirtualOutputFrames;}\n\n  get playingAt(){\n    this._playingAt = this._nVirtualOutputFrames/this.sampleRate;\n    return this._playingAt;\n  }\n\n  get node(){ return this._node; }\n  set tempo(tempo){ this._soundtouch.tempo = tempo; }\n  get tempo(){ return this._soundtouch.tempo; }\n  set pitch(pitch){ this._soundtouch.pitch = pitch; }\n  get rate(){ return this._soundtouch.rate; }\n\n  get recordedBuffer(){ \n    if (this._recordedBuffer === null) this.createProcessedBuffer();\n    return this._recordedBuffer; \n  }\n\n  set onEnd(func){ this._onEnd = func; }\n\n  stop(){ \n    console.log('shifter stop');\n    this._node.onaudioprocess = null; \n    this._node.disconnect();\n    this._onEnd(); \n  }\n\n\n  createProcessedBuffer(){\n\n    if (!this.record) return;\n\n    const outputBuffer = this.context.createBuffer(\n      this.recordedSamples.length, // channels\n      this.recordedSamples[0].length, // sample length\n      this.sampleRate\n    );\n\n    const left = outputBuffer.getChannelData(0);\n    const right = outputBuffer.getChannelData(1);\n    left.set(this.recordedSamples[0]);\n    right.set(this.recordedSamples[1]);\n    // Typedarray.set(array[, offset])\n\n    this._recordedBuffer = outputBuffer;\n    // console.log('this._recordedBuffer len = ', this._recordedBuffer.length);\n\n  } // end createProcessedBuffer()\n\n  onaudioprocess(e){\n\n   /* // through for test\n\n    if (this._nVirtualOutputFrames <= this._totalInputFrames){\n      this.bypass(e.inputBuffer,e.outputBuffer); // through for test\n      this._nVirtualOutputFrames += e.outputBuffer.length;\n    } else this.stop();\n   */\n\n    if (this._nVirtualOutputFrames <= this._totalInputFrames){\n      const nOutputFrames = this.process(e.inputBuffer,e.outputBuffer);\n      this._nVirtualOutputFrames += nOutputFrames*this._soundtouch.tempo;\n    } else this.stop();\n\n    this.nInputFrames += e.inputBuffer.length; \n\n  }\n\n  process(inputBuffer,outputBuffer) { // using soundtouchjs \n    // input part\n\n    const leftIn = inputBuffer.getChannelData(0);\n    const rightIn = inputBuffer.getChannelData(1);\n    const inSamples = this.inSamples; // LR Interleave\n    const left = outputBuffer.getChannelData(0);\n    const right = outputBuffer.getChannelData(1);\n\n    for (let i = 0; i < inputBuffer.length; i++) {\n        inSamples[2*i] = leftIn[i]; \n        inSamples[2*i + 1] = rightIn[i]; \n    }\n    this._filter.putSource(inSamples);\n\n   // Output  node.onaudioprocess in function getWebAudioNode\n   // context, filter, sourcePositionCallback\n    const outSamples = this.outSamples;\n    const framesExtracted = this._filter.extract(outSamples, this.bufferSize);\n\n    for (let i=0; i < framesExtracted; i++) {\n      left[i]  = outSamples[i * 2]; \n      right[i] = outSamples[i * 2 + 1];\n      if (this.record) {\n        this.recordedSamples[0].push(left[i]);\n        this.recordedSamples[1].push(right[i]);\n      }\n    } \n\n    return framesExtracted;\n\n  } // End process\n\n // just copy inputBuffer to outputBuffer for test \n  bypass(inputBuffer, outputBuffer){ \n    const nc = outputBuffer.numberOfChannels;\n    for (let channel=0; channel < nc; channel++){\n      const input = inputBuffer.getChannelData(channel);\n      const output = outputBuffer.getChannelData(channel);\n      output.set(inputBuffer.getChannelData(channel)); \n\n      if (this.record) \n        for (let i = 0; i < outputBuffer.length; i++) \n          this.recordedSamples[channel].push(input[i]);\n    }\n\n  } // End bypass()\n\n  exportToFile (filename){\n    if (!this.record) return;\n\n    console.log ('exportToFile: ', filename,\n      'length: ', this.recordedSamples[0].length);\n\n    if (this._recordedBuffer === null) this.createProcessedBuffer();\n\n    const blob = new Blob([toWav(this._recordedBuffer)], \n       {type: 'audio/vnd.wav'});\n    saveAs(blob, filename);\n\n    return;\n  } // end exportToFile()\n\n};\n","import React, { Component }  from 'react';\nimport './App.css';\nimport packageJSON from '../package.json';\nimport { IconButton, Tooltip } from '@material-ui/core';\n\n// import SaverNode from './SaverNode';\nimport MyPitchShifter from './MyPitchShifter';\n\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport PauseCircleOutlineOutlinedIcon\n        from '@material-ui/icons/PauseCircleOutlineOutlined';\nimport StopOutlinedIcon from '@material-ui/icons/StopOutlined';\nimport LoopOutlinedIcon from '@material-ui/icons/LoopOutlined';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\n\nconst version = packageJSON.subversion;\n\nwindow.AudioContext = window.AudioContext || window.webkitAudioContext;\nwindow.OfflineAudioContext = window.OfflineAudioContext \n || window.webkitOfflineAudioContext;\n\nclass App extends Component {\n  constructor (props) {\n    super();\n    this.audioCtx = new AudioContext();\n    // this.offlineAudioCtx = null;\n    this.inputAudio = [];\n    this.masterGainNode = null;\n    this.sliderTimer = null;\n    this.startedAt = 0;\n \n    this.state = {\n      isPlaying: false,\n      timeA: 0,\n      playingAt: 0,\n      timeB: 0, \n      loop: false,\n      loopDelay: 2,\n      startButtonStr: 'load files first!',\n      gains: [],\n      masterGain: 75,\n      playSpeed: 1.0,\n      playPitch: 0.0\n    };\n\n    this.shifter = null;\n\n    this.loadFiles = this.loadFiles.bind(this);\n    this.handlePlay = this.handlePlay.bind(this);\n    this.handleGainSlider = this.handleGainSlider.bind(this);\n    this.handleTimeSlider = this.handleTimeSlider.bind(this);\n    this.playAB = this.playAB.bind(this);\n    this.playABOffline = this.playABOffline.bind(this);\n  }   \n\n  componentWillUnmount () { // before closing app\n    if (this.audioCtx !== null) this.audioCtx.close();\n  }\n\n\n  render(){\n\n    const PlayButton = () => {\n       let icon;\n       switch(this.state.startButtonStr){\n         case 'load files first!':\n           // alert('Load file(s) first!');\n           icon = \n             <Tooltip title='Load file first'>\n             <span><IconButton>\n             <PlayCircleOutlineIcon color='disabled' />\n             </IconButton></span></Tooltip>;\n         break;\n         case 'Play': \n           icon = <Tooltip title='play A to B'><IconButton  \n             onClick={() => this.handlePlay({target: {name: 'startPause'}})} >\n             <PlayCircleOutlineIcon color='primary' />\n             </IconButton></Tooltip>;\n         break;\n         case 'Resume':\n           icon = <IconButton  \n             onClick={() => this.handlePlay({target: {name: 'startPause'}})} >\n             <PlayCircleOutlineIcon style={{color: '#00aa00' }} />\n             </IconButton>;\n         break;\n         case 'Pause': \n           icon = <IconButton  \n             onClick={() => this.handlePlay({target: {name: 'startPause'}})} >\n             <PauseCircleOutlineOutlinedIcon color='primary' />\n             </IconButton>;\n         break;\n         default:\n           icon = 'undefined';\n       }\n       return (<span>{icon}</span>);\n    };\n\n    this.inputAudio.sort((a,b) => a.name - b.name);\n\n    const sliders = this.state.gains.map((value, index) => {\n      return (\n      <div className='slider' key={index}>\n      <center>\n      {this.inputAudio[index].name} ({this.state.gains[index]})<br />\n      0 <input type='range' id={index} name='gainSlider' \n      min='0' max='100' value={this.state.gains[index]} \n      onChange={this.handleGainSlider} /> 100\n      </center>\n      </div>\n      );\n    });\n\n    return (\n     <div className=\"App\">\n     KG's Simple Mixer (Select stem files and play)<hr />\n     <span className=\"selectFile\">\n     <input type=\"file\" name=\"loadFiles\" multiple=\"multiple\"\n        accept=\"audio/*\" onChange={this.loadFiles} /><br />\n     </span>\n     <div className='text-divider'>Time</div>\n     PlayingAt: {this.state.playingAt.toFixed(2)}&nbsp;&nbsp; \n     Duration: {this.inputAudio[0] ? \n                this.inputAudio[0].data.duration.toFixed(2) : 0.00}\n     <center>\n     <div className='slider'>\n     <input type='range' name='timeSlider'\n       min='0' max= {this.inputAudio[0] ? \n              this.inputAudio[0].data.duration : 0}\n       value={this.state.playingAt}\n       onChange={this.handleTimeSlider}\n     />\n     </div>\n     A: {this.state.timeA.toFixed(2)} -- B: {this.state.timeB.toFixed(2)}\n     </center>\n\n     <div className='text-divider'>Player Controls</div>\n     <PlayButton />\n     <Tooltip title='stop and rewined to A'>\n     <IconButton  \n       onClick={() => this.handlePlay({target: {name: 'stop'}})} >\n       <StopOutlinedIcon \n     color={this.inputAudio.length ? 'primary' : 'disabled'} />\n     </IconButton>\n     </Tooltip>\n     <Tooltip title='toggle loop AB'>\n     <IconButton  \n       onClick={() => {this.setState({loop: !this.state.loop});}} >\n       <LoopOutlinedIcon \n       color={this.state.loop ? 'secondary' : 'primary'} />\n     </IconButton>\n     </Tooltip>\n     <span className='tiny-button'>\n     <Tooltip title='play and click or stop, move slider, and click'>\n     <button name='setA' \n        onClick={()=> this.setState({timeA: this.state.playingAt})}>\n        set A\n     </button>\n     </Tooltip>\n      &nbsp;&nbsp;&nbsp;\n     <Tooltip title='play and click or stop, move slider, and click'>\n     <button name='setB' \n        onClick={()=> this.setState({timeB: this.state.playingAt})}>\n        set B\n     </button>\n     </Tooltip>\n      &nbsp;&nbsp;&nbsp;\n     <Tooltip title='reset AB'>\n     <button name='reset' \n        onClick={()=> this.setState({timeA: 0, timeB: this.inputAudio[0].data.duration})}>reset\n     </button>\n     </Tooltip>\n     </span>\n     <Tooltip title='Export after playback' aria-label='export'>\n     <IconButton  \n       onClick={() => this.handlePlay({target: {name: 'export'}})} >\n       <GetAppIcon \n       color={this.state.isPlaying ? 'disabled' : 'primary'} />\n     </IconButton>\n     </Tooltip>\n     <div className='text-divider'>Pitch ({(100*this.state.playSpeed).toFixed(0)} %) (50 -- 200, Realtime &lt; 100) </div>\n     10% <IconButton \n         onClick={() => this.setSpeed({target: {name: 'sub10'}})} > \n     <RemoveIcon color='primary'/> </IconButton>\n     <IconButton\n         onClick={() => this.setSpeed({target: {name: 'add10'}})} > \n     <AddIcon color='primary'/> </IconButton>\n     &nbsp;&nbsp;&nbsp;\n     1% <IconButton\n        onClick={() => this.setSpeed({target: {name: 'sub1'}})} > \n     <RemoveIcon color='primary'/> </IconButton>\n     <IconButton\n        onClick={() => this.setSpeed({target: {name: 'add1'}})} > \n     <AddIcon color='primary'/> </IconButton>\n\n     <div className='text-divider'>Pitch ({this.state.playPitch.toFixed(1)}) (-12 -- +12)</div>\n     b/# <IconButton\n        onClick={() => this.setPitch({target: {name: 'sub1'}})} > \n     <RemoveIcon color='primary'/> </IconButton>\n     <IconButton\n        onClick={() => this.setPitch({target: {name: 'add1'}})} > \n     <AddIcon color='primary'/> </IconButton>\n     &nbsp;&nbsp;&nbsp;\n     10 cents <IconButton\n        onClick={() => this.setPitch({target: {name: 'sub10c'}})} > \n     <RemoveIcon color='primary'/> </IconButton>\n     <IconButton\n        onClick={() => this.setPitch({target: {name: 'add10c'}})} > \n     <AddIcon color='primary'/> </IconButton>\n\n     <div className='slider' key='master'>\n       <div className='text-divider'>Master Gain ({this.state.masterGain})</div>\n       <center>\n       0 <input type='range' id='master' name='gainSlider' \n          min='0' max='150' value={this.state.masterGain} \n           onChange={this.handleGainSlider} /> 150\n       </center>\n     </div>\n     <div className='text-divider'>Channel Gain</div>\n     {sliders}\n     <hr />\n     Version: {version} &nbsp;&nbsp;\n     <a href=\"https://goto920.github.io/demos/simple-mixer\"\n     target='_blank' rel='noreferrer'>Guide/update</a><br />\n     Speed/pitch control by &nbsp; \n     <a href=\"https://github.com/cutterbl/SoundTouchJS\"\n     target='_blank' rel='noreferrer'>soundtouch-js</a><br />\n     </div>\n    );\n  }\n\n  loadFiles(event){\n\n    if (event.target.name !== 'loadFiles') return;\n    if (event.target.files.length.length === 0) return;\n    const files = event.target.files; \n\n    if (this.audioCtx !== null) this.audioCtx.close();\n\n    this.audioCtx = new window.AudioContext();\n    this.setState({gains: [], isPlaying: false});\n    this.inputAudio = []; // clear\n    const gains = [];\n\n    for (let i=0; i < files.length; i++){\n      const reader = new FileReader();\n\n      reader.onload = function (e){\n       this.audioCtx.decodeAudioData(reader.result,\n         function (audioBuffer) {\n           this.inputAudio.push({\n              name: files[i].name,\n              data: audioBuffer,\n              source: null,\n              gainNode: null,\n            });\n\n           gains.push(100);\n           if (i => files.length -1){\n\n\n             this.setState({\n               startButtonStr: 'Play',\n               timeA: 0,\n               playingAt: 0,\n               timeB: this.inputAudio[0].data.duration, // test timeB: 10,\n               gains: gains,\n             });\n           } // end if\n\n         }.bind(this),\n         function (error) { console.log (\"decode error: \" + error.err) }\n       )\n      }.bind(this)\n\n      reader.onerror = function (e){ console.log(\"File read \", reader.error);}\n      reader.readAsArrayBuffer(files[i]);\n    } // end for\n\n  } // end loadFiles()\n\n  playAB(delay, timeA, timeB, exportFile=false){\n\n    console.log('playAB', \n    delay, timeA, timeB, 'export: ', exportFile);\n\n    if (this.state.isPlaying) return;\n\n    if (this.audioCtx.state === 'suspended' ) this.audioCtx.resume();\n    this.setState({isPlaying : true});\n\n    const totalInputFrames \n       = (timeB - timeA)*this.inputAudio[0].data.sampleRate;\n    const shifter \n       = new MyPitchShifter(this.audioCtx, totalInputFrames, 4096,exportFile);\n\n    if (this.state.playSpeed > 1.0) {\n      shifter.tempo = 1.0;\n      this.setState({playSpeed: shifter.tempo});\n    } else shifter.tempo = this.state.playSpeed;\n\n    shifter.pitch = Math.pow(2.0,this.state.playPitch/12.0);\n\n    this.shifter = shifter;\n\n    const masterGainNode = this.audioCtx.createGain();\n      masterGainNode.gain.value = this.state.masterGain/100.0;\n    this.masterGainNode = masterGainNode;\n\n    for (let i=0; i < this.inputAudio.length; i++){\n      const source = this.audioCtx.createBufferSource();\n      source.buffer = this.inputAudio[i].data;\n        this.inputAudio[i].source = source;\n      const gainNode = this.audioCtx.createGain();\n        gainNode.gain.value = this.state.gains[i]/100.0;\n        this.inputAudio[i].gainNode = gainNode;\n      source.connect(gainNode);\n      gainNode.connect(shifter.node);\n    }\n  \n    shifter.node.connect(masterGainNode);\n    masterGainNode.connect(this.audioCtx.destination);\n\n\n    this.startedAt = this.audioCtx.currentTime + delay;\n    for (let i=0; i < this.inputAudio.length; i++){\n      this.inputAudio[i].source.start(this.startedAt, timeA, timeB - timeA);\n    }\n    this.setState({playingAt: timeA});\n\n    const timer = setInterval(\n    () => this.setState({playingAt: timeA + shifter.playingAt}) , 1000);\n\n    shifter.onEnd = function () { // callback from MyPitchShifter\n\n      console.log('MyPitchShifter.onEnd');\n      this.setState({playingAt: timeA + shifter.playingAt});\n      clearInterval(timer);\n\n      for (let i=0; i < this.inputAudio.length; i++)\n        this.inputAudio[i].gainNode.disconnect();\n\n      shifter.node.disconnect(); \n      this.shifter = null;\n\n      this.setState({\n        playingAt: this.state.timeA,\n        isPlaying: false\n      });\n\n      if (this.state.loop) this.playAB(2, timeA, timeB);\n        else this.setState({ startButtonStr: 'Play' }); \n\n    }.bind(this);\n\n    /* When stop button is pressed */\n    this.inputAudio[0].source.onended = function (e) { \n      shifter.stop();\n    }\n\n  } // END playAB\n\n  handleTimeSlider(event){\n    if(event.target.name !== 'timeSlider') return;\n    this.setState({playingAt: parseFloat(event.target.value)});\n  }\n\n  handlePlay(event){\n\n    console.log('handlePlay name/button', event.target.name, this.state.startButtonStr);\n\n    if (event.target.name === 'startPause') {\n\n      switch(this.state.startButtonStr){\n\n        case 'Pause':\n          console.log('Pause');\n          if(this.audioCtx) this.audioCtx.suspend();\n          this.setState ({\n            startButtonStr: 'Resume',\n            isPlaying: false \n          });\n        break;\n\n        case 'Resume': \n          console.log('Resume');\n          this.startedAt = this.audioCtx.currentTime;\n          if (this.audioCtx.state === 'suspended') this.audioCtx.resume();\n          this.setState ({\n            startButtonStr: 'Pause', \n            isPlaying: true\n          });\n        break;\n\n        case 'Play':\n          console.log('Play');\n          if (this.inputAudio.length === 0) break;\n          this.playAB (0, this.state.timeA, this.state.timeB);\n          this.setState ({startButtonStr: 'Pause'})\n        break;\n\n        default:\n          console.log('default', this.state.startButtonStr);\n      }\n\n      return;\n    }\n\n    if (event.target.name === 'stop') {\n      if (this.inputAudio.length === 0) return;\n\n      for (let i=0; i < this.inputAudio.length; i++)\n        if (this.inputAudio[i].source) this.inputAudio[i].source.stop();\n\n      this.setState ({loop: false, startButtonStr: 'Play', playingAt: \n         this.state.timeA})\n      return;\n    }    \n\n    if (event.target.name === 'export'){\n      if (this.inputAudio.length === 0) return;\n      // this.playAB (0, this.state.timeA, this.state.timeB, true);\n      this.playABOffline (0, this.state.timeA, this.state.timeB, true);\n      return;\n    }\n\n  } // end handlePlay()\n\n  handleGainSlider(event){\n    if (event.target.name !== 'gainSlider') return;\n    // console.log ('slider id= ', event.target.id);\n\n    if (event.target.id === 'master'){\n      this.setState({masterGain: parseFloat(event.target.value)});\n      if (this.masterGainNode)\n        this.masterGainNode.gain.value = parseFloat(event.target.value/100.0);\n      return;\n    }\n\n    const index = parseInt(event.target.id);\n\n    const gains = this.state.gains;\n    gains[index] = parseInt(event.target.value);\n    this.setState({gains: gains});\n    if (this.inputAudio[index].gainNode !== null)\n      this.inputAudio[index].gainNode.gain.value \n           = parseFloat(event.target.value/100.0); \n\n  } // End handleGainSlider()\n\n  setSpeed(e){\n    let speed = this.state.playSpeed;\n    switch(e.target.name){\n      case 'sub10': speed -=0.1; break;\n      case 'add10': speed +=0.1; break;\n      case 'sub1': speed -=0.01; break;\n      case 'add1': speed +=0.01; break;\n      default:\n    }\n    if (speed < 0.5) speed = 0.5;\n    else if (speed > 2.0) speed = 2.0;\n\n    if (this.shifter) {\n      this.shifter.tempo = speed;\n      // console.log(\"Tempo set: \", this.shifter.tempo);\n    }\n\n    this.setState({playSpeed: speed});\n  } // End set speed\n\n  setPitch(e){\n    let pitch = this.state.playPitch;\n    switch(e.target.name){\n      case 'sub1': pitch -=1; break;\n      case 'add1': pitch +=1; break;\n      case 'sub10c': pitch -=0.1; break;\n      case 'add10c': pitch +=0.1; break;\n      default:\n    }\n\n    if (pitch < -12) pitch = -12.0;\n    else if (pitch > 12) pitch = 12.0\n\n    if (this.shifter){\n      this.shifter.pitch = Math.pow(2.0,pitch/12.0);\n      // console.log(\"Rate set: \", this.shifter.rate); \n    }\n\n    this.setState({playPitch: pitch});\n  } // End setPitch\n\n  playABOffline(delay, timeA, timeB, exportFile=false){\n    console.log('playAB Offline', \n    delay, timeA, timeB, 'export: ', exportFile);\n\n    if (this.state.isPlaying) return;\n    \n    this.setState({isPlaying : true});\n    this.shifter = null;\n\n    const sampleRate = this.inputAudio[0].data.sampleRate;\n    const channels = this.inputAudio[0].data.numberOfChannels;\n    const nInputFrames = (timeB - timeA)*sampleRate;\n    const nOutputFrames = Math.max(nInputFrames, \n          nInputFrames/this.state.playSpeed);\n    const audioCtx \n     = new window.OfflineAudioContext(\n        channels, // typically 2\n        nOutputFrames + 1.0*sampleRate, // length in frames (add 1 sec)\n        sampleRate\n       ); // Offline\n\n    const totalInputFrames \n       = (timeB - timeA)*this.inputAudio[0].data.sampleRate;\n    const shifter \n      = new MyPitchShifter(audioCtx, totalInputFrames, 4096, true); \n      // recording true\n    shifter.tempo = this.state.playSpeed;\n    shifter.pitch = Math.pow(2.0,this.state.playPitch/12.0);\n\n    for (let i=0; i < this.inputAudio.length; i++){\n      const source = audioCtx.createBufferSource();\n      source.buffer = this.inputAudio[i].data;\n        this.inputAudio[i].source = source;\n      const gainNode = audioCtx.createGain();\n        gainNode.gain.value = this.state.gains[i]/100.0;\n        this.inputAudio[i].gainNode = gainNode;\n      source.connect(gainNode);\n      gainNode.connect(shifter.node);\n    }\n\n    shifter.node.connect(audioCtx.destination);\n    this.startedAt = audioCtx.currentTime + delay;\n    for (let i=0; i < this.inputAudio.length; i++){\n      this.inputAudio[i].source.start(this.startedAt, timeA, timeB - timeA);\n    }\n    audioCtx.startRendering();\n\n    this.setState({playingAt: timeA});\n\n    shifter.onEnd = function () { // callback from MyPitchShifter\n      console.log('MyPitchShifter.onEnd');\n    \n      for (let i=0; i < this.inputAudio.length; i++)\n        this.inputAudio[i].gainNode.disconnect();\n     /*\n      console.log('playingAt ', shifter.playingAt);\n      shifter.exportToFile('mix_' + Date.now() + '.wav');\n\n      this.setState({\n         playingAt: this.state.timeA,\n         isPlaying: false,\n         startButtonStr: 'Play'\n      }); \n     */\n\n    }.bind(this);\n\n    audioCtx.oncomplete = function(e) {\n      console.log('Offline render complete (data is useless) = ', \n          e.renderedBuffer.length);\n      console.log('shifter I/O', \n      shifter.totalInputFrames,\n      shifter.totalVirtualOutputFrames);\n\n      this.setState({\n        playingAt: timeA + shifter.playingAt,\n        isPlaying: false\n      });\n\n      shifter.exportToFile('mix_' + Date.now() + '.wav');\n    }.bind(this);\n\n  } // END playAB Offline\n\n}; // end class\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\n/*\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n*/\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\n// serviceWorkerRegistration.unregister();\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}