{"version":3,"sources":["MyFilter.js","MyPitchShifter.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["noop","MyFilter","pipe","callback","sourceSound","historyBufferSize","_sourcePosition","outputBufferPosition","_position","source","i","length","this","push","outSamples","numFramesReq","numFramesExtracted","set","slice","splice","numFrames","samples","Float32Array","extractSource","inputBuffer","putSamples","SimpleFilter","MyPitchShifter","context","numOfInputFrames","bufferSize","record","console","log","recordedSamples","_soundtouch","SoundTouch","_filter","_onEnd","_onUpdate","_node","createScriptProcessor","onaudioprocess","bind","_totalInputFrames","_recordedBuffer","_nVirtualOutputFrames","_playingAt","inSamples","sampleRate","nInputFrames","nframes","tempo","pitch","rate","createProcessedBuffer","func","disconnect","outputBuffer","createBuffer","left","getChannelData","right","e","nOutputFrames","process","stop","leftIn","rightIn","putSource","framesExtracted","extract","nc","numberOfChannels","channel","input","filename","blob","Blob","toWav","type","saveAs","version","packageJSON","subversion","defaultLang","m","messages","en","window","navigator","language","ja","AudioContext","webkitAudioContext","OfflineAudioContext","webkitOfflineAudioContext","App","props","audioCtx","inputAudio","mixedSource","masterGainNode","state","isPlaying","timeA","playingAt","timeB","loop","loopDelay","startButtonStr","gains","masterGain","playSpeed","playPitch","shifter","loadFiles","handlePlay","handleGainSlider","handleTimeSlider","playAB","switchLanguage","close","PlayButton","icon","Tooltip","title","alert","IconButton","onClick","target","name","color","playButton","style","sort","a","b","sliders","map","value","index","className","id","min","max","onChange","title1","title2","switchLang","fileReader","multiple","accept","timeTitle","timeSliderPosition","toFixed","data","duration","timeSlider","setA","setState","setB","resetAB","playerTitle","stopButton","loopButton","exportButton","aria-label","playMixButton","speedTitle1","speedTitle2","setSpeed","pitchTitle","setPitch","masterGainTitle","trackGainTitle","href","url","rel","guide","credit","event","files","reader","FileReader","onload","decodeAudioData","result","audioBuffer","gainNode","error","err","onerror","readAsArrayBuffer","delay","offline","exporter","resume","channels","Math","pow","createGain","gain","createBufferSource","buffer","connect","node","destination","startedAt","currentTime","start","startRendering","count","onUpdate","onEnd","exportToFile","Date","now","recordedBuffer","onended","oncomplete","renderedBuffer","parseFloat","suspend","parseInt","speed","Component","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onSuccess","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","URL","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.f7174ae4.chunk.js","sourcesContent":["/*\n   Written by goto at kmgoto.jp (Mar. 2021)\n   Copyright of my code is not claimed.\n\n   Based on soundtouchjs/src/PitchShifter.js, SimpleFilter.js\n\n   Modified for use as intermediate ScriptProcessorNode.\n   Note: Output does not work for OfflineAudioContext.\n\n   1) PitchShifter ---> MyPitchShifter (minimum code)\n                     includes ScriptProcessorNode\n\n   2) MyFilter extends SimpleFilter\n\n   Pitch modification and slow down/speed up work.\n   Slow down only for real-time playback.\n   fast playback is impossible by nature.\n\n */\n\nimport {SimpleFilter} from 'soundtouchjs'; \n\nconst noop = function () {return;}\n\nexport default class MyFilter extends SimpleFilter {\n  constructor(pipe, callback = noop){\n    super(null, pipe, callback); // sourceSound, callback are not used\n    this.callback = callback;\n    this.sourceSound = [];\n    this.historyBufferSize = 22050;\n    this._sourcePosition = 0;\n    this.outputBufferPosition = 0;\n    this._position = 0;\n  }\n\n/* new method to put samples from e.inputBuffer in onaudioprocess */\n  putSource(source){ \n    for (let i = 0; i < source.length; i++) \n       this.sourceSound.push(source[i]);\n  } // LR interleaved\n\n/* new method replaces getWebAudioNode.extract() */\n  extractSource(outSamples, numFramesReq, frameOffset = 0){\n   \n    let numFramesExtracted = 0;\n    if (this.sourceSound.length < numFramesReq*2) {\n      numFramesExtracted = 0;\n    } else { \n      outSamples.set(this.sourceSound.slice(0,numFramesReq*2));\n      this.sourceSound.splice(0,numFramesReq*2);\n      numFramesExtracted = numFramesReq;\n    }\n    return numFramesExtracted;\n  }\n\n/* Override */\n  fillInputBuffer(numFrames = 0){// samples are LRLR \n    const samples = new Float32Array(numFrames * 2);\n    const numFramesExtracted = this.extractSource(samples,numFrames);\n    if (numFramesExtracted > 0)\n      this.inputBuffer.putSamples(samples,0,numFramesExtracted);\n  } \n\n/* inherited (called when input is end. Not used)\n  onEnd() { this.callback(); }\n*/\n\n\n};\n","/*\n   Written by goto at kmgoto.jp (Mar. 2021)\n   Copyright of my code is not claimed.\n\n   Based on soundtouchjs/src/PitchShifter.js, SimpleFilter.js\n\n   Modified for use as intermediate ScriptProcessorNode.\n   Note: Output does not work for OfflineAudioContext.\n\n   1) PitchShifter ---> MyPitchShifter (minimum code)\n                     includes ScriptProcessorNode\n\n   2) MyFilter extends SimpleFilter\n\n   Pitch modification and slow down/speed up work.\n   Slow down only for real-time playback.\n   fast playback is impossible by nature.\n\n */\n\nimport * as SoundTouch from 'soundtouchjs';\nimport MyFilter from './MyFilter';\nimport {saveAs} from 'file-saver';\nimport * as toWav from 'audiobuffer-to-wav';\n\nconst noop = function() {return;}\n\nexport default class MyPitchShifter {\n  constructor(context, numOfInputFrames, bufferSize, record = false){\n\n    console.log('new MyPitchShifter instance');\n    this.context = context;\n    this.bufferSize = bufferSize;\n    this.record = record;\n    this.recordedSamples = [[],[]];\n\n    this._soundtouch = new SoundTouch.SoundTouch();\n    this._filter = new MyFilter(this._soundtouch, noop); \n    this._onEnd = noop;\n    this._onUpdate = noop;\n\n    this._node = context.createScriptProcessor(bufferSize,2,2);\n    this._node.onaudioprocess = this.onaudioprocess.bind(this);\n    this._totalInputFrames = numOfInputFrames;\n    this._recordedBuffer = null;\n    this._nVirtualOutputFrames = 0;\n    this._playingAt = 0;\n\n    this.outSamples = new Float32Array(bufferSize*2);\n    this.inSamples  = new Float32Array(bufferSize*2);\n    this.sampleRate = context.sampleRate; \n    this.nInputFrames = 0;\n    // this.moreInput = true;\n\n  }\n\n  set totalInputFrames(nframes){ this._totalInputFrames = nframes;}\n  get totalInputFrames(){ return this._totalInputFrames;}\n\n  get totalVirtualOutputFrames(){ return this._nVirtualOutputFrames;}\n\n  get playingAt(){\n    this._playingAt = this._nVirtualOutputFrames/this.sampleRate;\n    return this._playingAt;\n  }\n\n  get node(){ return this._node; }\n  set tempo(tempo){ this._soundtouch.tempo = tempo; }\n  get tempo(){ return this._soundtouch.tempo; }\n  set pitch(pitch){ this._soundtouch.pitch = pitch; }\n  get rate(){ return this._soundtouch.rate; }\n\n  get recordedBuffer(){ \n    if (this._recordedBuffer === null) this.createProcessedBuffer();\n    return this._recordedBuffer; \n  }\n\n  set onEnd(func){ this._onEnd = func; }\n  set onUpdate(func){ this._onUpdate = func; }\n\n  stop(){ \n    console.log('shifter stop');\n    this._node.onaudioprocess = null; \n    this._node.disconnect();\n    this._onEnd(); \n  }\n\n\n  createProcessedBuffer(){\n\n    if (!this.record) return;\n\n    const outputBuffer = this.context.createBuffer(\n      this.recordedSamples.length, // channels\n      this.recordedSamples[0].length, // sample length\n      this.sampleRate\n    );\n\n    const left = outputBuffer.getChannelData(0);\n    const right = outputBuffer.getChannelData(1);\n    left.set(this.recordedSamples[0]);\n    right.set(this.recordedSamples[1]);\n    // Typedarray.set(array[, offset])\n\n    this._recordedBuffer = outputBuffer;\n    // console.log('this._recordedBuffer len = ', this._recordedBuffer.length);\n\n  } // end createProcessedBuffer()\n\n  onaudioprocess(e){\n\n   /* // pass through for test\n    if (this._nVirtualOutputFrames <= this._totalInputFrames){\n      this.bypass(e.inputBuffer,e.outputBuffer); // through for test\n      this._nVirtualOutputFrames += e.outputBuffer.length;\n    } else this.stop();\n   */\n\n    if (this._nVirtualOutputFrames <= this._totalInputFrames){\n      const nOutputFrames = this.process(e.inputBuffer,e.outputBuffer);\n      this._nVirtualOutputFrames += nOutputFrames*this._soundtouch.tempo;\n      this._onUpdate();\n    } else this.stop();\n\n    this.nInputFrames += e.inputBuffer.length; \n\n  }\n\n  process(inputBuffer,outputBuffer) { // using soundtouchjs \n    // input part\n\n    const leftIn = inputBuffer.getChannelData(0);\n    const rightIn = inputBuffer.getChannelData(1);\n    const inSamples = this.inSamples; // LR Interleave\n    const left = outputBuffer.getChannelData(0);\n    const right = outputBuffer.getChannelData(1);\n\n    for (let i = 0; i < inputBuffer.length; i++) {\n        inSamples[2*i] = leftIn[i]; \n        inSamples[2*i + 1] = rightIn[i]; \n    }\n    this._filter.putSource(inSamples);\n\n   // Output  node.onaudioprocess in function getWebAudioNode\n   // context, filter, sourcePositionCallback\n    const outSamples = this.outSamples;\n    const framesExtracted = this._filter.extract(outSamples, this.bufferSize);\n\n    for (let i=0; i < framesExtracted; i++) {\n      left[i]  = outSamples[i * 2]; \n      right[i] = outSamples[i * 2 + 1];\n      if (this.record) {\n        this.recordedSamples[0].push(left[i]);\n        this.recordedSamples[1].push(right[i]);\n      }\n    } \n\n    return framesExtracted;\n\n  } // End process\n\n // just copy inputBuffer to outputBuffer for test \n  bypass(inputBuffer, outputBuffer){ \n    const nc = outputBuffer.numberOfChannels;\n    for (let channel=0; channel < nc; channel++){\n      const input = inputBuffer.getChannelData(channel);\n      const output = outputBuffer.getChannelData(channel);\n      output.set(inputBuffer.getChannelData(channel)); \n\n      if (this.record) \n        for (let i = 0; i < outputBuffer.length; i++) \n          this.recordedSamples[channel].push(input[i]);\n    }\n\n  } // End bypass()\n\n  exportToFile (filename){\n    if (!this.record) return;\n\n    console.log ('exportToFile: ', filename,\n      'length: ', this.recordedSamples[0].length);\n\n    if (this._recordedBuffer === null) this.createProcessedBuffer();\n\n    const blob = new Blob([toWav(this._recordedBuffer)], \n       {type: 'audio/vnd.wav'});\n    saveAs(blob, filename);\n\n    return;\n  } // end exportToFile()\n\n};\n","/*\n   Written by goto at kmgoto.jp (Mar. 2021)\n   Copyright of my code is not claimed.\n\n   Based on soundtouchjs/src/PitchShifter.js, SimpleFilter.js\n\n   Modified for use as intermediate ScriptProcessorNode.\n   Note: Output does not work for OfflineAudioContext.\n\n   1) PitchShifter ---> MyPitchShifter (minimum code)\n                     includes ScriptProcessorNode\n\n   2) MyFilter extends SimpleFilter\n\n   Pitch modification and slow down/speed up work.\n   Slow down only for real-time playback.\n   fast playback is impossible by nature.\n\n */\n\nimport React, { Component }  from 'react';\nimport './App.css';\nimport MyPitchShifter from './MyPitchShifter'; // soundtouchJS\nimport packageJSON from '../package.json';\nimport messages from './messages.json'; // English/Japanese messages\n\n// material-ui Icons, Tooltip\nimport { IconButton, Tooltip } from '@material-ui/core';\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport PauseCircleOutlineOutlinedIcon\n        from '@material-ui/icons/PauseCircleOutlineOutlined';\nimport StopOutlinedIcon from '@material-ui/icons/StopOutlined';\nimport LoopOutlinedIcon from '@material-ui/icons/LoopOutlined';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport PlayCircleFilledWhiteIcon \n   from '@material-ui/icons/PlayCircleFilledWhite';\n\n// get subversion string \nconst version = packageJSON.subversion;\n// switch languages\n\nlet defaultLang = 'en';\nlet m = messages.en;\nif (window.navigator.language.slice(0,2) === 'ja') {\n  defaultLang = 'ja'; \n  m = messages.ja;\n}\n\nwindow.AudioContext = window.AudioContext || window.webkitAudioContext;\nwindow.OfflineAudioContext = window.OfflineAudioContext \n || window.webkitOfflineAudioContext;\n\nclass App extends Component {\n  constructor (props) {\n    super();\n    this.audioCtx = new AudioContext();\n    this.inputAudio = [];\n    this.mixedSource = null;\n    this.masterGainNode = null;\n \n    this.state = {\n      language: defaultLang,\n      isPlaying: false,\n      timeA: 0,\n      playingAt: 0,\n      timeB: 0, \n      loop: false,\n      loopDelay: 2,\n      startButtonStr: 'load files first!',\n      gains: [],\n      masterGain: 75,\n      playSpeed: 1.0,\n      playPitch: 0.0\n    };\n\n    this.shifter = null;\n\n    this.loadFiles = this.loadFiles.bind(this);\n    this.handlePlay = this.handlePlay.bind(this);\n    this.handleGainSlider = this.handleGainSlider.bind(this);\n    this.handleTimeSlider = this.handleTimeSlider.bind(this);\n    this.playAB = this.playAB.bind(this);\n    this.switchLanguage = this.switchLanguage.bind(this);\n  }   \n\n  componentWillUnmount () { // before closing app\n    if (this.audioCtx !== null) this.audioCtx.close();\n  }\n\n\n  render(){\n\n    const PlayButton = () => {\n       let icon;\n       switch(this.state.startButtonStr){\n         case 'load files first!':\n           icon = \n             <Tooltip title={m.alert}>\n             <span><IconButton\n             onClick={() => this.handlePlay({target: {name: 'startPause'}})} >\n             <PlayCircleOutlineIcon color='disabled'/>\n             </IconButton></span></Tooltip>;\n         break;\n         case 'Play': \n           icon = <Tooltip title={m.playButton}><IconButton  \n             onClick={() => this.handlePlay({target: {name: 'startPause'}})} >\n             <PlayCircleOutlineIcon color='primary' />\n             </IconButton></Tooltip>;\n         break;\n         case 'Resume':\n           icon = <IconButton  \n             onClick={() => this.handlePlay({target: {name: 'startPause'}})} >\n             <PlayCircleOutlineIcon style={{color: '#00aa00' }} />\n             </IconButton>;\n         break;\n         case 'Pause': \n           icon = <IconButton  \n             onClick={() => this.handlePlay({target: {name: 'startPause'}})} >\n             <PauseCircleOutlineOutlinedIcon color='primary' />\n             </IconButton>;\n         break;\n         default:\n           icon = 'undefined';\n       }\n       return (<span>{icon}</span>);\n    };\n\n    this.inputAudio.sort((a,b) => a.name - b.name);\n\n    const sliders = this.state.gains.map((value, index) => {\n      return (\n      <div className='slider' key={index}>\n      <center>\n      {this.inputAudio[index].name} ({this.state.gains[index]})<br />\n      0 <input type='range' id={index} name='gainSlider' \n      min='0' max='100' value={this.state.gains[index]} \n      onChange={this.handleGainSlider} /> 100\n      </center>\n      </div>\n      );\n    });\n\n    return (\n     <div className=\"App\">\n     {m.title1}<br />{m.title2} &emsp;\n     <span className='small-button'>\n     <Tooltip title={m.switchLang}>\n      <button onClick = {this.switchLanguage}>\n      {this.state.language === 'ja' ? 'EN' : 'JP' }</button>\n     </Tooltip>\n     </span>\n     <hr />\n     <span className=\"selectFile\">\n     <Tooltip title={m.fileReader}>\n     <input type=\"file\" name=\"loadFiles\" multiple=\"multiple\"\n        accept=\"audio/*\" onChange={this.loadFiles} />\n     </Tooltip>\n     <br />\n     </span><br/>\n     <div className='text-divider'>{m.timeTitle}&nbsp;\n      ({m.timeSliderPosition}:&nbsp; \n       <font color='green'>{this.state.playingAt.toFixed(2)}</font>)\n     </div>\n     <center>\n     A: {this.state.timeA.toFixed(2)} -- B: {this.state.timeB.toFixed(2)}\n     &emsp; song length: {this.inputAudio[0] ? \n          this.inputAudio[0].data.duration.toFixed(2) : 0.00}\n     <br />\n     <div className='slider'>\n     <Tooltip title={m.timeSlider}>\n     <input type='range' name='timeSlider'\n       min='0' max= {this.inputAudio[0] ? \n              this.inputAudio[0].data.duration : 0}\n       value={this.state.playingAt}\n       onChange={this.handleTimeSlider}\n     />\n     </Tooltip>\n     </div>\n     <span className='tiny-button'>\n     <Tooltip title={m.setA}>\n     <button name='setA' \n        onClick={()=> this.setState({timeA: this.state.playingAt})}>\n        set A\n     </button>\n     </Tooltip>\n      &emsp;\n     <Tooltip title={m.setB}>\n     <button name='setB' \n        onClick={()=> this.setState({timeB: this.state.playingAt})}>\n        set B\n     </button>\n     </Tooltip>\n      &emsp;\n     <Tooltip title={m.resetAB}>\n     <button name='reset' \n        onClick={()=> this.setState({timeA: 0, timeB: this.inputAudio[0].data.duration})}>reset\n     </button>\n     </Tooltip>\n     </span>\n     </center>\n\n     <div className='text-divider'>{m.playerTitle}</div>\n     <center>\n     <PlayButton />\n     <Tooltip title={m.stopButton}>\n     <IconButton  \n       onClick={() => this.handlePlay({target: {name: 'stop'}})} >\n       <StopOutlinedIcon \n     color={this.inputAudio.length ? 'primary' : 'disabled'} />\n     </IconButton>\n     </Tooltip>\n     <Tooltip title={m.loopButton}>\n     <IconButton  \n       onClick={() => {this.setState({loop: !this.state.loop});}} >\n       <LoopOutlinedIcon \n       color={this.state.loop ? 'secondary' : 'primary'} />\n     </IconButton>\n     </Tooltip>\n\n     <Tooltip title={m.exportButton} aria-label='exportFile'>\n     <IconButton  \n       onClick={() => this.handlePlay({target: {name: 'exportFile'}})} >\n       <GetAppIcon \n       color={!this.inputAudio.length || this.state.isPlaying ? 'disabled' : 'primary'} />\n     </IconButton>\n     </Tooltip>\n     <Tooltip title={m.playMixButton} aria-label='playMix'>\n     <IconButton  \n       onClick={() => this.handlePlay({target: {name: 'playMix'}})} >\n       <PlayCircleFilledWhiteIcon\n       color={!this.inputAudio.length || this.state.isPlaying ? 'disabled' : 'primary'} />\n     </IconButton>\n     </Tooltip>\n     </center>\n\n\n     <div className='text-divider'>{m.speedTitle1} (\n<font color= 'green'>{(100*this.state.playSpeed).toFixed(0)}%)</font>\n&nbsp; {m.speedTitle2}\n</div>\n<center>\n     &plusmn; 10% <IconButton \n         onClick={() => this.setSpeed({target: {name: 'sub10'}})} > \n     <RemoveIcon color='primary'/> </IconButton>\n     <IconButton\n         onClick={() => this.setSpeed({target: {name: 'add10'}})} > \n     <AddIcon color='primary'/> </IconButton>\n     &nbsp;&nbsp;&nbsp;\n     &plusmn; 1% <IconButton\n        onClick={() => this.setSpeed({target: {name: 'sub1'}})} > \n     <RemoveIcon color='primary'/> </IconButton>\n     <IconButton\n        onClick={() => this.setSpeed({target: {name: 'add1'}})} > \n     <AddIcon color='primary'/> </IconButton>\n</center>\n\n     <div className='text-divider'>{m.pitchTitle}&nbsp; \n (<font color='green'>{this.state.playPitch.toFixed(1)}</font>) (-12 -- +12)</div>\n<center>\n     b/# <IconButton\n        onClick={() => this.setPitch({target: {name: 'sub1'}})} > \n     <RemoveIcon color='primary'/> </IconButton>\n     <IconButton\n        onClick={() => this.setPitch({target: {name: 'add1'}})} > \n     <AddIcon color='primary'/> </IconButton>\n     &nbsp;&nbsp;&nbsp;\n     &plusmn; 10 cents <IconButton\n        onClick={() => this.setPitch({target: {name: 'sub10c'}})} > \n     <RemoveIcon color='primary'/> </IconButton>\n     <IconButton\n        onClick={() => this.setPitch({target: {name: 'add10c'}})} > \n     <AddIcon color='primary'/> </IconButton>\n</center>\n\n     <div className='slider' key='master'>\n       <div className='text-divider'>{m.masterGainTitle}&nbsp;\n       ({this.state.masterGain})</div>\n       <center>\n       0 <input type='range' id='master' name='gainSlider' \n          min='0' max='150' value={this.state.masterGain} \n           onChange={this.handleGainSlider} /> 150\n       </center>\n     </div>\n     <div className='text-divider'>{m.trackGainTitle}</div>\n     {sliders}\n     <hr />\n     {m.version}: {version} &nbsp;&nbsp;\n     <a href={m.url}\n     target='_blank' rel='noreferrer'>{m.guide}</a><br />\n     {m.credit}&nbsp; \n     <a href=\"https://github.com/cutterbl/SoundTouchJS\"\n     target='_blank' rel='noreferrer'>SoundTouchJs</a><br />\n     <hr />\n     </div>\n    );\n  }\n\n  loadFiles(event){\n\n    if (event.target.name !== 'loadFiles') return;\n    if (event.target.files.length.length === 0) return;\n    const files = event.target.files; \n\n    if (this.audioCtx !== null) this.audioCtx.close();\n\n    this.audioCtx = new window.AudioContext();\n    this.setState({gains: [], isPlaying: false});\n    this.inputAudio = []; // clear\n    const gains = [];\n\n    for (let i=0; i < files.length; i++){\n      const reader = new FileReader();\n\n      reader.onload = function (e){\n       this.audioCtx.decodeAudioData(reader.result,\n         function (audioBuffer) {\n           this.inputAudio.push({\n              name: files[i].name,\n              data: audioBuffer,\n              source: null,\n              gainNode: null,\n            });\n\n           gains.push(100);\n           if (i => files.length -1){\n\n\n             this.setState({\n               startButtonStr: 'Play',\n               timeA: 0,\n               playingAt: 0,\n               timeB: this.inputAudio[0].data.duration, // test timeB: 10,\n               gains: gains,\n             });\n           } // end if\n\n         }.bind(this),\n         function (error) { console.log (\"decode error: \" + error.err) }\n       )\n      }.bind(this)\n\n      reader.onerror = function (e){ console.log(\"File read \", reader.error);}\n      reader.readAsArrayBuffer(files[i]);\n    } // end for\n\n  } // end loadFiles()\n\n  playAB(delay, timeA, timeB, offline = false, exporter=null){\n\n    console.log('playAB', 'delay, timeA, timeB, offline, exporter = ', \n    delay, timeA, timeB, offline, exporter);\n\n    if (this.state.isPlaying) return;\n    if (this.audioCtx.state === 'suspended' ) this.audioCtx.resume();\n\n    this.setState({isPlaying : true});\n    this.shifter = null;\n\n    const sampleRate = this.inputAudio[0].data.sampleRate;\n    const channels = this.inputAudio[0].data.numberOfChannels;\n    const nInputFrames = (timeB - timeA)*sampleRate;\n    const nOutputFrames = Math.max(nInputFrames, \n                      nInputFrames/this.state.playSpeed);\n  \n    let context;\n    if (offline) {\n      context = new window.OfflineAudioContext (\n        channels, // typically 2\n        nOutputFrames + 1.0*sampleRate, // length in frames (add 1 sec)\n        sampleRate\n       ); // Offline\n    } else context = this.audioCtx;\n\n    const shifter = new MyPitchShifter(\n       context, nInputFrames, 4096, offline);\n\n    if (!offline) this.shifter = shifter; // to allow change while playing\n\n    if (!offline && this.state.playSpeed > 1.0) {\n      shifter.tempo = 1.0;\n      this.setState({playSpeed: shifter.tempo});\n    } else shifter.tempo = this.state.playSpeed;\n\n    shifter.pitch = Math.pow(2.0,this.state.playPitch/12.0);\n\n    if (!offline) {\n      const masterGainNode = context.createGain();\n      masterGainNode.gain.value = this.state.masterGain/100.0;\n      this.masterGainNode = masterGainNode;\n    }\n\n    for (let i=0; i < this.inputAudio.length; i++){\n      const source = context.createBufferSource();\n      source.buffer = this.inputAudio[i].data;\n        this.inputAudio[i].source = source;\n      const gainNode = context.createGain();\n        gainNode.gain.value = this.state.gains[i]/100.0;\n        this.inputAudio[i].gainNode = gainNode;\n      source.connect(gainNode);\n      gainNode.connect(shifter.node);\n    }\n\n    if (offline)   \n      shifter.node.connect(context.destination);\n    else {\n      const masterGainNode = context.createGain();\n      masterGainNode.gain.value = this.state.masterGain/100.0;\n      shifter.node.connect(masterGainNode);\n      masterGainNode.connect(context.destination);\n    }\n\n    const startedAt = context.currentTime + delay;\n    for (let i=0; i < this.inputAudio.length; i++){\n      this.inputAudio[i].source.start(startedAt, timeA, timeB - timeA);\n    }\n\n    if (offline) context.startRendering();\n\n    this.setState({playingAt: timeA});\n\n    if (!offline) {\n      let count = 0;\n      shifter.onUpdate = function() {\n        if (count++ % 5 === 0)\n        this.setState({playingAt: timeA + shifter.playingAt});\n      }.bind(this);\n    }\n\n    shifter.onEnd = function () { // callback from MyPitchShifter\n      console.log('MyPitchShifter.onEnd');\n\n      for (let i=0; i < this.inputAudio.length; i++)\n            this.inputAudio[i].gainNode.disconnect();\n\n      if (exporter === 'exportFile' ) {\n         shifter.exportToFile('mix_' + Date.now() + '.wav');\n      } else if (exporter === 'playMix'){\n         console.log ('playing mix');\n         const context = this.audioCtx;\n         const source = context.createBufferSource();\n           this.mixedSource = source;\n           source.buffer = shifter.recordedBuffer;\n         const masterGainNode = context.createGain();\n           this.masterGainNode = masterGainNode;\n           masterGainNode.gain.value = 1.0;\n         source.connect(this.masterGainNode);\n         masterGainNode.connect(context.destination);\n         source.start();\n         source.onended = function(e) {\n           this.mixedSource = null;\n           this.setState({isPlaying: false});\n         }.bind(this)\n      }\n \n      this.shifter = null;\n\n      this.setState({\n        playingAt: this.state.timeA, // maybe modified during playback\n        isPlaying: false\n      });\n\n      if (!offline && this.state.loop) \n             this.playAB(2, this.state.timeA, this.state.timeB);\n        else this.setState({ startButtonStr: 'Pause' });\n\n    }.bind(this);\n\n    if (!offline) /* When stop button is pressed */\n      this.inputAudio[0].source.onended = function (e) { \n        shifter.stop(); \n        this.setState({isPlaying: false});\n      }\n\n    if (offline)\n      context.oncomplete = function(e) {\n        console.log( \n         'Offline render complete (data is useless though) length = ',\n          e.renderedBuffer.length);\n      }\n\n  } // END playAB\n\n  handleTimeSlider(event){\n    if(event.target.name !== 'timeSlider') return;\n    this.setState({playingAt: parseFloat(event.target.value)});\n  }\n\n  handlePlay(event){\n\n    console.log('handlePlay name/button', \n       event.target.name, this.state.startButtonStr);\n\n    if (this.inputAudio.length === 0) alert(m.alert);\n\n    if (event.target.name === 'startPause') {\n\n      switch(this.state.startButtonStr){\n\n        case 'Pause':\n          console.log('Pause');\n          if(this.audioCtx) this.audioCtx.suspend();\n          this.setState ({\n            startButtonStr: 'Resume',\n            isPlaying: false \n          });\n        break;\n\n        case 'Resume': \n          console.log('Resume');\n          if (this.audioCtx.state === 'suspended') this.audioCtx.resume();\n          this.setState ({\n            startButtonStr: 'Pause', \n            isPlaying: true\n          });\n        break;\n\n        case 'Play':\n          console.log('Play');\n          if (this.inputAudio.length === 0) break;\n          this.playAB (0, this.state.timeA, this.state.timeB);\n          this.setState ({startButtonStr: 'Pause'})\n        break;\n\n        default:\n          console.log('default', this.state.startButtonStr);\n      }\n\n      return;\n    }\n\n    if (event.target.name === 'stop') {\n      if (this.inputAudio.length === 0 && this.mixedSource === null) return;\n\n      for (let i=0; i < this.inputAudio.length; i++)\n        if (this.inputAudio[i].source) this.inputAudio[i].source.stop();\n\n      if (this.mixedSource) this.mixedSource.stop();\n\n      this.setState ({loop: false, startButtonStr: 'Play', playingAt: \n         this.state.timeA})\n      return;\n    }    \n\n    if (event.target.name === 'exportFile' \n       || event.target.name === 'playMix'){\n      if (this.inputAudio.length === 0 || this.state.isPlaying) return;\n      this.playAB (0, this.state.timeA, this.state.timeB, true, \n         event.target.name);\n      return;\n    }\n\n  } // end handlePlay()\n\n  handleGainSlider(event){\n    if (event.target.name !== 'gainSlider') return;\n    // console.log ('slider id= ', event.target.id);\n// \n    if (event.target.id === 'master'){\n      this.setState({masterGain: parseFloat(event.target.value)});\n      if (this.masterGainNode)\n        this.masterGainNode.gain.value = parseFloat(event.target.value/100.0);\n      return;\n    }\n\n    const index = parseInt(event.target.id);\n\n    const gains = this.state.gains;\n    gains[index] = parseInt(event.target.value);\n    this.setState({gains: gains});\n    if (this.inputAudio[index].gainNode !== null)\n      this.inputAudio[index].gainNode.gain.value \n           = parseFloat(event.target.value/100.0); \n\n  } // End handleGainSlider()\n\n  setSpeed(e){\n    let speed = this.state.playSpeed;\n    switch(e.target.name){\n      case 'sub10': speed -=0.1; break;\n      case 'add10': speed +=0.1; break;\n      case 'sub1': speed -=0.01; break;\n      case 'add1': speed +=0.01; break;\n      default:\n    }\n    if (speed < 0.5) speed = 0.5;\n    else if (speed > 2.0) speed = 2.0;\n\n    if (this.shifter) {\n      this.shifter.tempo = speed;\n      // console.log(\"Tempo set: \", this.shifter.tempo);\n    }\n\n    this.setState({playSpeed: speed});\n  } // End set speed\n\n  setPitch(e){\n    let pitch = this.state.playPitch;\n    switch(e.target.name){\n      case 'sub1': pitch -=1; break;\n      case 'add1': pitch +=1; break;\n      case 'sub10c': pitch -=0.1; break;\n      case 'add10c': pitch +=0.1; break;\n      default:\n    }\n\n    if (pitch < -12) pitch = -12.0;\n    else if (pitch > 12) pitch = 12.0\n\n    if (this.shifter){\n      this.shifter.pitch = Math.pow(2.0,pitch/12.0);\n      // console.log(\"Rate set: \", this.shifter.rate); \n    }\n\n    this.setState({playPitch: pitch});\n  } // End setPitch\n\n  switchLanguage(e) {\n\n    if (this.state.language === 'ja') {\n      m = messages.en; \n      this.setState({language: 'en'});\n    } else {\n      m = messages.ja; \n      this.setState({language: 'ja'});\n    }\n  }\n\n}; // end class\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\n/*\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n*/\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\n// serviceWorkerRegistration.unregister();\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}