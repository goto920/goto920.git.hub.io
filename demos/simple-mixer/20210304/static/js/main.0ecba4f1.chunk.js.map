{"version":3,"sources":["SaverNode.js","MyFilter.js","MyPitchShifter.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["SaverNode","audioCtx","sampleRate","console","log","this","outputSamples","processed","_record","_node","createScriptProcessor","value","inputBuffer","outputBuffer","nc","numberOfChannels","channel","inPCM","getChannelData","i","length","push","filename","createBuffer","left","right","set","blob","Blob","toWav","type","saveAs","noop","MyFilter","pipe","callback","sourceSound","historyBufferSize","_sourcePosition","outputBufferPosition","_position","source","outSamples","numFramesReq","numFramesExtracted","slice","splice","numFrames","samples","Float32Array","extractSource","putSamples","SimpleFilter","MyPitchShifter","context","bufferSize","onaudioprocess","e","moreInput","processedFrames","_totalInputFrames","moreOutput","nOutputFrames","process","_onEnd","_soundtouch","SoundTouch","_filter","bind","inSamples","nframes","tempo","pitch","rate","func","leftIn","rightIn","putSource","framesExtracted","extract","version","packageJSON","subversion","window","AudioContext","webkitAudioContext","App","props","inputAudio","masterGainNode","sliderTimer","startedAt","state","isPlaying","timeA","playingAt","timeB","loop","loopDelay","startButtonStr","gains","masterGain","playSpeed","playPitch","shifter","loadFiles","handlePlay","handleGainSlider","handleTimeSlider","playAB","close","PlayButton","icon","Tooltip","title","IconButton","color","onClick","target","name","style","sort","a","b","sliders","map","index","className","id","min","max","onChange","multiple","accept","toFixed","data","duration","setState","aria-label","setSpeed","setPitch","href","rel","event","files","reader","FileReader","onload","decodeAudioData","result","audioBuffer","gainNode","error","err","onerror","readAsArrayBuffer","delay","exportFile","resume","Math","pow","saver","record","createGain","gain","createBufferSource","buffer","connect","node","destination","totalInputFrames","currentTime","start","count","getProcessedTime","onEnd","disconnect","Date","now","parseFloat","stop","suspend","parseInt","speed","Component","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","URL","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.0ecba4f1.chunk.js","sourcesContent":["import {saveAs} from 'file-saver';\nimport * as toWav from 'audiobuffer-to-wav';\n\nclass SaverNode {\n\n  constructor(audioCtx, sampleRate){\n    // super();\n    console.log('SaverNode new instance');\n    this.audioCtx = audioCtx;\n    this.sampleRate = sampleRate;\n    this.outputSamples = [[],[]];\n\n    this.processed = 0;\n    this._record = false; // add _ for setter/getter value\n    this._node = this.audioCtx.createScriptProcessor(4096,2,2);\n    // Chrome requirs output\n\n    // this.process = this.process.bind(this);\n    // this.exportFile = this.exportFile.bind(this);\n    // this.getProcessedTime = this.getProcessedTime.bind(this);\n  } // End constructor\n\n  reset() {this.processed = 0; }\n\n  get node(){\n    return this._node;\n  }\n\n  get record(){\n    return this._record;\n  }\n\n  set record(value){\n    this._record = value;\n  }\n\n  getProcessedTime() {\n    return (this.processed/this.sampleRate); \n  } // End getCurrentTime\n\n  getProcessedSample() {\n    return this.processed;\n  } // End getCurrentTime\n\n  process(inputBuffer, outputBuffer){ // no output\n    const nc = inputBuffer.numberOfChannels;\n\n    if (this._record){\n      for (let channel = 0; channel < nc; channel++){\n        const inPCM = inputBuffer.getChannelData(channel);\n        for(let i=0; i < inPCM.length; i++)\n          this.outputSamples[channel].push(inPCM[i]);\n      }\n    }\n\n    this.processed += inputBuffer.getChannelData(0).length;\n\n    return;\n  } // end process\n\n  exportFile(filename){\n\n    if (!this._record) return;\n    console.log ('exportFile: ', filename);\n    console.log('length: ', this.outputSamples[0].length);\n\n    let outputBuffer = this.audioCtx.createBuffer(\n      this.outputSamples.length, // channels\n      this.outputSamples[0].length, // sample length\n      this.sampleRate\n    );\n\n    const left = outputBuffer.getChannelData(0);\n    const right = outputBuffer.getChannelData(1);\n\n    left.set(this.outputSamples[0]);\n    right.set(this.outputSamples[1]);\n    // TypedArray.prototype.set()\n    // typedarray.set(array[, offset])\n\n    const blob = new Blob([toWav(outputBuffer)], {type: 'audio/vnd.wav'});\n    saveAs(blob, filename);\n\n    return;\n  } // end export\n\n} // end class\n\nexport default SaverNode;\n","/*\n   Written by goto at kmgoto.jp (Mar. 2021)\n   Copyright of my code is not claimed.\n\n   Based on soundtouchjs/src/PitchShifter.js, SimpleFilter.js\n\n   Modified for real time playback.\n\n   PitchShifter ---> MyPitchShifter (minimum code)\n                     includes ScriptProcessorNode\n\n   MyFilter extends SimpleFilter\n\n   Pitch modification and slow down work.\n   Real time fast playback is impossible by nature.\n\n */\n\nimport {SimpleFilter} from 'soundtouchjs'; \n\nconst noop = function () {return;}\n\nexport default class MyFilter extends SimpleFilter {\n  constructor(pipe, callback = noop){\n    super(null, pipe, callback); // sourceSound, callback are not used\n    this.callback = callback;\n    this.sourceSound = [];\n    this.historyBufferSize = 22050;\n    this._sourcePosition = 0;\n    this.outputBufferPosition = 0;\n    this._position = 0;\n  }\n\n/* new method to put samples from e.inputBuffer in onaudioprocess */\n  putSource(source){ \n    for (let i = 0; i < source.length; i++) \n       this.sourceSound.push(source[i]);\n  } // LR interleaved\n\n/* new method replaces getWebAudioNode.extract() */\n  extractSource(outSamples, numFramesReq, frameOffset = 0){\n   \n    let numFramesExtracted = 0;\n    if (this.sourceSound.length < numFramesReq*2) {\n      numFramesExtracted = 0;\n    } else { \n      outSamples.set(this.sourceSound.slice(0,numFramesReq*2));\n      this.sourceSound.splice(0,numFramesReq*2);\n      numFramesExtracted = numFramesReq;\n    }\n    return numFramesExtracted;\n  }\n\n/* Override */\n  fillInputBuffer(numFrames = 0){// samples are LRLR \n    const samples = new Float32Array(numFrames * 2);\n    const numFramesExtracted = this.extractSource(samples,numFrames);\n    if (numFramesExtracted > 0)\n      this.inputBuffer.putSamples(samples,0,numFramesExtracted);\n  } \n\n/* inherited (called when input is end. Not used)\n  onEnd() { this.callback(); }\n*/\n\n\n};\n","/*\n   Written by goto at kmgoto.jp (Mar. 2021)\n   Copyright of my code is not claimed.\n\n   Based on soundtouchjs/src/PitchShifter.js, SimpleFilter.js\n\n   Modified for real time playback.\n\n   PitchShifter ---> MyPitchShifter (minimum code)\n                     includes ScriptProcessorNode\n\n   MyFilter extends SimpleFilter\n\n   Pitch modification and slow down work.\n   Real time fast playback is impossible by nature.\n\n */\n\nimport * as SoundTouch from 'soundtouchjs';\nimport MyFilter from './MyFilter';\n\nconst noop = function() {return;}\n\nexport default class MyPitchShifter {\n  constructor(context,bufferSize){\n    this.context = context;\n    this.bufferSize = bufferSize;\n\n    this._soundtouch = new SoundTouch.SoundTouch();\n    this._filter = new MyFilter(this._soundtouch, noop); \n    this._onEnd = noop;\n\n    this._node = context.createScriptProcessor(bufferSize,2,2);\n    this._node.onaudioprocess = this.onaudioprocess.bind(this);\n\n    this.outSamples = new Float32Array(bufferSize*2);\n    this.inSamples  = new Float32Array(bufferSize*2);\n    this.sampleRate = context.sampleRate; \n    this._totalInputFrames = 0;\n    this.processedFrames = 0;\n    this.moreInput = true;\n    this.moreOutput = true;\n  }\n\n  set totalInputFrames(nframes){ this._totalInputFrames = nframes;}\n  get node(){ return this._node; }\n  set tempo(tempo){ this._soundtouch.tempo = tempo; }\n  get tempo(){ return this._soundtouch.tempo; }\n  set pitch(pitch){ this._soundtouch.pitch = pitch; }\n  get rate(){ return this._soundtouch.rate; }\n\n  set onEnd(func){\n    this._onEnd = func;\n  }\n\n  onaudioprocess = function(e){\n    // this.bypass(e.inputBuffer,e.outputBuffer); // through for test\n\n    if (this.moreInput \n        && this.processedFrames > this._totalInputFrames){\n      console.log ('onaudioprocess: End of input');\n      this.moreInput = false;\n    }\n\n    if (this.moreOutput){\n      const nOutputFrames = this.process(e.inputBuffer,e.outputBuffer);\n      if (!this.moreInput && nOutputFrames === 0) {\n        console.log ('onaudioprocess: End of output');\n        this.moreOutput = false;\n        this._onEnd(); // callback\n      }\n    }\n\n    if (this.moreInput) this.processedFrames += e.inputBuffer.length;\n\n  }\n\n  process(inputBuffer,outputBuffer) { // using soundtouchjs \n    // input part\n\n    const leftIn = inputBuffer.getChannelData(0);\n    const rightIn = inputBuffer.getChannelData(1);\n    const inSamples = this.inSamples; // LR Interleave\n    const left = outputBuffer.getChannelData(0);\n    const right = outputBuffer.getChannelData(1);\n\n    if (this.moreInput) {\n      for (let i = 0; i < inputBuffer.length; i++) {\n        inSamples[2*i] = leftIn[i]; \n        inSamples[2*i + 1] = rightIn[i]; \n      }\n      this._filter.putSource(inSamples);\n    }\n\n   // Output  node.onaudioprocess in function getWebAudioNode\n   // context, filter, sourcePositionCallback\n    const outSamples = this.outSamples;\n    const framesExtracted \n      = this._filter.extract(outSamples, this.bufferSize);\n\n    for (let i=0; i < framesExtracted; i++) {\n       left[i] = outSamples[i * 2]; right[i] = outSamples[i * 2 + 1];} \n\n    return framesExtracted;\n\n  } // End process\n\n // just copy inputBuffer to outputBuffer for test \n  bypass(inputBuffer, outputBuffer){ \n    const nc = outputBuffer.numberOfChannels;\n\n    for (let channel=0; channel < nc; channel++){\n      const out = outputBuffer.getChannelData(channel);\n      out.set(inputBuffer.getChannelData(channel)); \n  //    out.push(inputBuffer.getChannelData(channel)); // test (double)\n    }\n  }\n\n};\n","import React, { Component }  from 'react';\nimport './App.css';\nimport packageJSON from '../package.json';\nimport { IconButton, Tooltip } from '@material-ui/core';\n\nimport SaverNode from './SaverNode';\nimport MyPitchShifter from './MyPitchShifter';\n\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport PauseCircleOutlineOutlinedIcon\n        from '@material-ui/icons/PauseCircleOutlineOutlined';\nimport StopOutlinedIcon from '@material-ui/icons/StopOutlined';\nimport LoopOutlinedIcon from '@material-ui/icons/LoopOutlined';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\n\nconst version = packageJSON.subversion;\n\nwindow.AudioContext = window.AudioContext || window.webkitAudioContext;\n\nclass App extends Component {\n  constructor (props) {\n    super();\n    this.audioCtx = new AudioContext();\n    this.inputAudio = [];\n    this.masterGainNode = null;\n    this.sliderTimer = null;\n    this.startedAt = 0;\n \n    this.state = {\n      isPlaying: false,\n      timeA: 0,\n      playingAt: 0,\n      timeB: 0, \n      loop: false,\n      loopDelay: 2,\n      startButtonStr: 'load files first!',\n      gains: [],\n      masterGain: 75,\n      playSpeed: 1.0,\n      playPitch: 0.0\n    };\n\n    this.shifter = null;\n\n    this.loadFiles = this.loadFiles.bind(this);\n    this.handlePlay = this.handlePlay.bind(this);\n    this.handleGainSlider = this.handleGainSlider.bind(this);\n    this.handleTimeSlider = this.handleTimeSlider.bind(this);\n    this.playAB = this.playAB.bind(this);\n  }   \n\n  componentWillUnmount () { // before closing app\n    if (this.audioCtx !== null) this.audioCtx.close();\n  }\n\n\n  render(){\n\n    const PlayButton = () => {\n       let icon;\n       switch(this.state.startButtonStr){\n         case 'load files first!':\n           icon = \n             <Tooltip title='Load file first'>\n             <span><IconButton>\n             <PlayCircleOutlineIcon color='disabled' />\n             </IconButton></span></Tooltip>;\n         break;\n         case 'Play': \n           icon = <Tooltip title='play A to B'><IconButton  \n             onClick={() => this.handlePlay({target: {name: 'startPause'}})} >\n             <PlayCircleOutlineIcon color='primary' />\n             </IconButton></Tooltip>;\n         break;\n         case 'Resume':\n           icon = <IconButton  \n             onClick={() => this.handlePlay({target: {name: 'startPause'}})} >\n             <PlayCircleOutlineIcon style={{color: '#00aa00' }} />\n             </IconButton>;\n         break;\n         case 'Pause': \n           icon = <IconButton  \n             onClick={() => this.handlePlay({target: {name: 'startPause'}})} >\n             <PauseCircleOutlineOutlinedIcon color='primary' />\n             </IconButton>;\n         break;\n         default:\n           icon = 'undefined';\n       }\n       return (<span>{icon}</span>);\n    };\n\n    this.inputAudio.sort((a,b) => a.name - b.name);\n\n    const sliders = this.state.gains.map((value, index) => {\n      return (\n      <div className='slider' key={index}>\n      <center>\n      {this.inputAudio[index].name} ({this.state.gains[index]})<br />\n      0 <input type='range' id={index} name='gainSlider' \n      min='0' max='100' value={this.state.gains[index]} \n      onChange={this.handleGainSlider} /> 100\n      </center>\n      </div>\n      );\n    });\n\n    return (\n     <div className=\"App\">\n     KG's Simple Mixer (Select stem files and play)<hr />\n     <span className=\"selectFile\">\n     <input type=\"file\" name=\"loadFiles\" multiple=\"multiple\"\n        accept=\"audio/*\" onChange={this.loadFiles} /><br />\n     </span>\n     <div className='text-divider'>Time</div>\n     PlayingAt: {this.state.playingAt.toFixed(2)}&nbsp;&nbsp; \n     Duration: {this.inputAudio[0] ? \n                this.inputAudio[0].data.duration.toFixed(2) : 0.00}\n     <center>\n     <div className='slider'>\n     <input type='range' name='timeSlider'\n       min='0' max= {this.inputAudio[0] ? \n              this.inputAudio[0].data.duration : 0}\n       value={this.state.playingAt}\n       onChange={this.handleTimeSlider}\n     />\n     </div>\n     A: {this.state.timeA.toFixed(2)} -- B: {this.state.timeB.toFixed(2)}\n     </center>\n\n     <div className='text-divider'>Player Controls</div>\n     <PlayButton />\n     <Tooltip title='stop and rewined to A'>\n     <IconButton  \n       onClick={() => this.handlePlay({target: {name: 'stop'}})} >\n       <StopOutlinedIcon \n     color={this.inputAudio.length ? 'primary' : 'disabled'} />\n     </IconButton>\n     </Tooltip>\n     <Tooltip title='toggle loop AB'>\n     <IconButton  \n       onClick={() => {this.setState({loop: !this.state.loop});}} >\n       <LoopOutlinedIcon \n       color={this.state.loop ? 'secondary' : 'primary'} />\n     </IconButton>\n     </Tooltip>\n     <span className='tiny-button'>\n     <Tooltip title='play and click or stop, move slider, and click'>\n     <button name='setA' \n        onClick={()=> this.setState({timeA: this.state.playingAt})}>\n        set A\n     </button>\n     </Tooltip>\n      &nbsp;&nbsp;&nbsp;\n     <Tooltip title='play and click or stop, move slider, and click'>\n     <button name='setB' \n        onClick={()=> this.setState({timeB: this.state.playingAt})}>\n        set B\n     </button>\n     </Tooltip>\n      &nbsp;&nbsp;&nbsp;\n     <Tooltip title='reset AB'>\n     <button name='reset' \n        onClick={()=> this.setState({timeA: 0, timeB: this.inputAudio[0].data.duration})}>reset\n     </button>\n     </Tooltip>\n     </span>\n     <Tooltip title='Export after playback' aria-label='export'>\n     <IconButton  \n       onClick={() => this.handlePlay({target: {name: 'export'}})} >\n       <GetAppIcon \n       color={this.state.isPlaying ? 'disabled' : 'primary'} />\n     </IconButton>\n     </Tooltip>\n     <div className='text-divider'>Slow Down ({(100*this.state.playSpeed).toFixed(0)} %) (50 -- 100) </div>\n     10% <IconButton \n         onClick={() => this.setSpeed({target: {name: 'sub10'}})} > \n     <RemoveIcon color='primary'/> </IconButton>\n     <IconButton\n         onClick={() => this.setSpeed({target: {name: 'add10'}})} > \n     <AddIcon color='primary'/> </IconButton>\n     &nbsp;&nbsp;&nbsp;\n     1% <IconButton\n        onClick={() => this.setSpeed({target: {name: 'sub1'}})} > \n     <RemoveIcon color='primary'/> </IconButton>\n     <IconButton\n        onClick={() => this.setSpeed({target: {name: 'add1'}})} > \n     <AddIcon color='primary'/> </IconButton>\n\n     <div className='text-divider'>Pitch ({this.state.playPitch.toFixed(1)}) (-12 -- +12)</div>\n     #/b <IconButton\n        onClick={() => this.setPitch({target: {name: 'sub1'}})} > \n     <RemoveIcon color='primary'/> </IconButton>\n     <IconButton\n        onClick={() => this.setPitch({target: {name: 'add1'}})} > \n     <AddIcon color='primary'/> </IconButton>\n     &nbsp;&nbsp;&nbsp;\n     10 cents <IconButton\n        onClick={() => this.setPitch({target: {name: 'sub10c'}})} > \n     <RemoveIcon color='primary'/> </IconButton>\n     <IconButton\n        onClick={() => this.setPitch({target: {name: 'add10c'}})} > \n     <AddIcon color='primary'/> </IconButton>\n\n     <div className='slider' key='master'>\n       <div className='text-divider'>Master Gain ({this.state.masterGain})</div>\n       <center>\n       0 <input type='range' id='master' name='gainSlider' \n          min='0' max='150' value={this.state.masterGain} \n           onChange={this.handleGainSlider} /> 150\n       </center>\n     </div>\n     <div className='text-divider'>Channel Gain</div>\n     {sliders}\n     <hr />\n     Version: {version} &nbsp;&nbsp;\n     <a href=\"https://goto920.github.io/demos/simple-mixer\"\n     target='_blank' rel='noreferrer'>Guide/update</a><br />\n     Speed/pitch control by &nbsp; \n     <a href=\"https://github.com/cutterbl/SoundTouchJS\"\n     target='_blank' rel='noreferrer'>soundtouch-js</a><br />\n     </div>\n    );\n  }\n\n  loadFiles(event){\n\n    if (event.target.name !== 'loadFiles') return;\n    if (event.target.files.length.length === 0) return;\n    const files = event.target.files; \n\n    if (this.audioCtx !== null) this.audioCtx.close();\n\n    this.audioCtx = new AudioContext();\n    this.setState({gains: [], isPlaying: false});\n    this.inputAudio = []; // clear\n    const gains = [];\n\n    for (let i=0; i < files.length; i++){\n      const reader = new FileReader();\n\n      reader.onload = function (e){\n       this.audioCtx.decodeAudioData(reader.result,\n         function (audioBuffer) {\n           this.inputAudio.push({\n              name: files[i].name,\n              data: audioBuffer,\n              source: null,\n              gainNode: null,\n            });\n\n           gains.push(100);\n           if (i => files.length -1){\n\n\n             this.setState({\n               startButtonStr: 'Play',\n               timeA: 0,\n               playingAt: 0,\n               timeB: this.inputAudio[0].data.duration, // test timeB: 10,\n               gains: gains,\n             });\n           } // end if\n\n         }.bind(this),\n         function (error) { console.log (\"decode error: \" + error.err) }\n       )\n      }.bind(this)\n\n      reader.onerror = function (e){ console.log(\"File read \", reader.error);}\n      reader.readAsArrayBuffer(files[i]);\n    } // end for\n\n  } // end loadFiles()\n\n  playAB(delay, timeA, timeB, exportFile=false){\n\n    console.log('playAB', \n    delay, timeA, timeB, 'export: ', exportFile);\n\n    if (this.state.isPlaying) return;\n\n    if (this.audioCtx.state === 'suspended' ) this.audioCtx.resume();\n    this.setState({isPlaying : true});\n\n    const shifter = new MyPitchShifter(this.audioCtx, 4096);\n    shifter.tempo = this.state.playSpeed;\n    shifter.pitch = Math.pow(2.0,this.state.playPitch/12.0);\n\n    this.shifter = shifter;\n\n    const saver \n       = new SaverNode(this.audioCtx,this.inputAudio[0].data.sampleRate);\n\n    if (exportFile) saver.record = true;\n\n    const masterGainNode = this.audioCtx.createGain();\n      masterGainNode.gain.value = this.state.masterGain/100.0;\n    this.masterGainNode = masterGainNode;\n\n    for (let i=0; i < this.inputAudio.length; i++){\n      const source = this.audioCtx.createBufferSource();\n      source.buffer = this.inputAudio[i].data;\n        this.inputAudio[i].source = source;\n      const gainNode = this.audioCtx.createGain();\n        gainNode.gain.value = this.state.gains[i]/100.0;\n        this.inputAudio[i].gainNode = gainNode;\n      source.connect(gainNode);\n      gainNode.connect(shifter.node);\n    }\n  \n    shifter.node.connect(saver.node); \n    shifter.node.connect(masterGainNode);\n\n    masterGainNode.connect(this.audioCtx.destination);\n    saver.node.connect(this.audioCtx.destination); // for Chrome\n\n    shifter.totalInputFrames \n       = (timeB - timeA)*this.inputAudio[0].data.sampleRate;\n    this.startedAt = this.audioCtx.currentTime + delay;\n    for (let i=0; i < this.inputAudio.length; i++){\n      this.inputAudio[i].source.start(this.startedAt, timeA, timeB - timeA);\n    }\n    this.setState({playingAt: timeA});\n\n    let count = 0;\n    saver.node.onaudioprocess = function(e){\n      // console.log('saver onaudioprocess');\n      saver.process(e.inputBuffer,e.outputBuffer);\n      if (count++ % 10 === 0)\n        this.setState({\n          playingAt: timeA + this.state.playSpeed*saver.getProcessedTime()\n        });\n    }.bind(this);\n\n\n    // this.inputAudio[0].source.onended = \n    shifter.onEnd = function () { // callback from MyPitchShifter\n\n      console.log('MyPitchShifter.onEnd');\n\n      for (let i=0; i < this.inputAudio.length; i++)\n        this.inputAudio[i].gainNode.disconnect(shifter.node);\n\n      shifter.node.disconnect(masterGainNode); \n      shifter.node.disconnect(saver.node); \n      saver.node.disconnect(this.audioCtx.destination);\n\n      if (exportFile) saver.exportFile('mix_' + Date.now() + '.wav');\n      this.shifter = null;\n\n      this.setState({\n         playingAt: this.state.timeA,\n         isPlaying: false\n      }); \n\n      if (this.state.loop) this.playAB(2, timeA, timeB);\n        else this.setState({ startButtonStr: 'Play' }); \n\n    }.bind(this);\n\n  } // END playAB\n\n  handleTimeSlider(event){\n    if(event.target.name !== 'timeSlider') return;\n    this.setState({playingAt: parseFloat(event.target.value)});\n  }\n\n  handlePlay(event){\n\n    console.log('Name', event.target.name, this.state.startButtonStr);\n\n    if (event.target.name === 'startPause') {\n\n      switch(this.state.startButtonStr){\n\n        case 'Pause':\n          console.log('Pause');\n          if(this.audioCtx) this.audioCtx.suspend();\n          this.setState ({\n            startButtonStr: 'Resume',\n            isPlaying: false \n          });\n        break;\n\n        case 'Resume': \n          console.log('Resume');\n          this.startedAt = this.audioCtx.currentTime;\n          if (this.audioCtx.state === 'suspended') this.audioCtx.resume();\n          this.setState ({\n            startButtonStr: 'Pause', \n            isPlaying: true\n          });\n        break;\n\n        case 'Play':\n          console.log('Play');\n          if (this.inputAudio.length === 0) break;\n          this.playAB (0, this.state.timeA, this.state.timeB);\n          this.setState ({startButtonStr: 'Pause'})\n        break;\n\n        default:\n          console.log('default', this.state.startButtonStr);\n      }\n\n      return;\n    }\n\n    if (event.target.name === 'stop') {\n      if (this.inputAudio.length === 0) return;\n\n      for (let i=0; i < this.inputAudio.length; i++)\n        if (this.inputAudio[i].source) this.inputAudio[i].source.stop();\n\n      this.setState ({loop: false, startButtonStr: 'Play', playingAt: \n         this.state.timeA})\n      return;\n    }    \n\n    if (event.target.name === 'export'){\n      if (this.inputAudio.length === 0) return;\n        this.playAB (0, this.state.timeA, this.state.timeB, true);\n      return;\n    }\n\n  } // end handlePlay()\n\n  handleGainSlider(event){\n    if (event.target.name !== 'gainSlider') return;\n    // console.log ('slider id= ', event.target.id);\n\n    if (event.target.id === 'master'){\n      this.setState({masterGain: parseFloat(event.target.value)});\n      if (this.masterGainNode)\n        this.masterGainNode.gain.value = parseFloat(event.target.value/100.0);\n      return;\n    }\n\n    const index = parseInt(event.target.id);\n\n    const gains = this.state.gains;\n    gains[index] = parseInt(event.target.value);\n    this.setState({gains: gains});\n    if (this.inputAudio[index].gainNode !== null)\n      this.inputAudio[index].gainNode.gain.value \n           = parseFloat(event.target.value/100.0); \n\n  } // End handleGainSlider()\n\n  setSpeed(e){\n    let speed = this.state.playSpeed;\n    switch(e.target.name){\n      case 'sub10': speed -=0.1; break;\n      case 'add10': speed +=0.1; break;\n      case 'sub1': speed -=0.01; break;\n      case 'add1': speed +=0.01; break;\n      default:\n    }\n    if (speed < 0.5) speed = 0.5;\n    else if (speed > 1.0) speed = 1.0;\n\n    if (this.shifter) {\n      this.shifter.tempo = speed;\n      // console.log(\"Tempo set: \", this.shifter.tempo);\n    }\n\n    this.setState({playSpeed: speed});\n  }\n\n  setPitch(e){\n    let pitch = this.state.playPitch;\n    switch(e.target.name){\n      case 'sub1': pitch -=1; break;\n      case 'add1': pitch +=1; break;\n      case 'sub10c': pitch -=0.1; break;\n      case 'add10c': pitch +=0.1; break;\n      default:\n    }\n\n    if (pitch < -12) pitch = -12.0;\n    else if (pitch > 12) pitch = 12.0\n\n    if (this.shifter){\n      this.shifter.pitch = Math.pow(2.0,pitch/12.0);\n      // console.log(\"Rate set: \", this.shifter.rate); \n    }\n\n    this.setState({playPitch: pitch});\n  }\n\n}; // end class\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\n/*\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n*/\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\n// serviceWorkerRegistration.unregister();\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}