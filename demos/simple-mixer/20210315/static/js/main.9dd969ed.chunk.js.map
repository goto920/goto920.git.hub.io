{"version":3,"sources":["jslibs/MyFilter.js","jslibs/MyPitchShifter.js","jslibs/MyPitchShifterWorkletNode.js","jslibs/PlayButton.js","jslibs/SpeedPitchControls.js","jslibs/TrackGainSlider.js","jslibs/TrackGainSliderList.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["noop","MyFilter","pipe","callback","sourceSound","historyBufferSize","_sourcePosition","outputBufferPosition","_position","source","i","length","this","push","outSamples","numFramesReq","numFramesExtracted","set","slice","splice","numFrames","samples","Float32Array","extractSource","inputBuffer","putSamples","SimpleFilter","MyPitchShifter","context","numOfInputFrames","bufferSize","record","bypass","console","log","recordedSamples","lastPlayingAt","_soundtouch","SoundTouch","_filter","_onEnd","_onUpdate","_updateInterval","_node","createScriptProcessor","onaudioprocess","bind","_totalInputFrames","_recordedBuffer","_nVirtualOutputFrames","_playingAt","inSamples","sampleRate","nInputFrames","nframes","tempo","pitch","rate","createProcessedBuffer","func","val","disconnect","outputBuffer","createBuffer","left","getChannelData","right","e","passThrough","stop","nOutputFrames","process","playingAt","leftIn","rightIn","putSource","framesExtracted","extract","nc","numberOfChannels","channel","input","filename","blob","Blob","toWav","type","saveAs","MyPitchShifterWorkletNode","workletName","options","recording","processorOptions","port","onmessage","messageProcessor","value","postMessage","command","args","data","createRecordedBuffer","status","AudioWorkletNode","PlayButton","props","state","nextAction","m","messages","handler","prevProps","setState","icon","Tooltip","title","alert","IconButton","onClick","target","name","color","playButton","style","Component","SpeedPitchControls","playSpeed","playPitch","setSpeed","setPitch","className","speedTitle1","toFixed","speedTitle2","pitchTitle","TrackGainSlider","gain","id","trackName","undefined","min","max","onChange","TrackGainSliderList","inputAudio","gains","version","packageJSON","subversion","defaultLang","en","window","navigator","language","ja","userAgent","match","tmp","isOfflineAudioContext","OfflineAudioContext","AudioContext","audioWorklet","addModule","close","isAudioWorklet","App","audioCtx","mixedSource","masterGainNode","isPlaying","timeA","timeB","loop","loopDelay","playButtonNextAction","masterGain","useAudioWorklet","micOn","shifter","loadFiles","handlePlay","handleGainSlider","handleTimeSlider","playAB","switchLanguage","switchLang","worklet","fileReader","multiple","accept","clearFiles","clearButton","timeTitle","timeSliderPosition","duration","timeSlider","setA","setB","resetAB","playerTitle","stopButton","loopButton","exportButton","aria-label","playMixButton","bypassButton","masterGainTitle","trackGainTitle","href","url","rel","guide","credit","event","files","loadModule","reader","FileReader","onload","decodeAudioData","result","audioBuffer","gainNode","error","err","onerror","readAsArrayBuffer","parseFloat","offline","suspend","resume","index","parseInt","speed","Math","pow","delay","exporter","channels","updateInterval","then","createBufferSource","buffer","addZeros","createGain","connect","node","destination","start","currentTime","startRendering","onended","onUpdate","oncomplete","renderedBuffer","onEnd","recordedBuffer","exportToFile","Date","now","a","constructor","output","ch","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onSuccess","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","URL","origin","addEventListener","fetch","headers","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.9dd969ed.chunk.js","sourcesContent":["/*\n   Written by goto at kmgoto.jp (Mar. 2021)\n   Copyright of my code is not claimed.\n\n   Based on soundtouchjs/src/PitchShifter.js, SimpleFilter.js\n\n   Modified for use as intermediate ScriptProcessorNode.\n   Note: Output does not work for OfflineAudioContext.\n\n   1) PitchShifter ---> MyPitchShifter (minimum code)\n                     includes ScriptProcessorNode\n\n   2) MyFilter extends SimpleFilter\n\n   Pitch modification and slow down/speed up work.\n   Slow down only for real-time playback.\n   fast playback is impossible by nature.\n\n */\n\nimport { SimpleFilter } from 'soundtouchjs'; \n\nconst noop = function () {return;}\n\nexport default class MyFilter extends SimpleFilter {\n  constructor(pipe, callback = noop){\n    super(null, pipe, callback); // sourceSound, callback are not used\n    this.callback = callback;\n    this.sourceSound = [];\n    this.historyBufferSize = 22050;\n    this._sourcePosition = 0;\n    this.outputBufferPosition = 0;\n    this._position = 0;\n  }\n\n/* new method to put samples from e.inputBuffer in onaudioprocess */\n  putSource(source){ \n    //console.log('putSource');\n    for (let i = 0; i < source.length; i++) \n       this.sourceSound.push(source[i]);\n  } // LR interleaved\n\n/* new method replaces getWebAudioNode.extract() */\n  extractSource(outSamples, numFramesReq, frameOffset = 0){\n    // console.log('extractSource');\n   \n    let numFramesExtracted = 0;\n    if (this.sourceSound.length < numFramesReq*2) {\n      numFramesExtracted = 0;\n    } else { \n      outSamples.set(this.sourceSound.slice(0,numFramesReq*2));\n      this.sourceSound.splice(0,numFramesReq*2);\n      numFramesExtracted = numFramesReq;\n    }\n    return numFramesExtracted;\n  }\n\n/* Override */\n  fillInputBuffer(numFrames = 0){// samples are LRLR \n    const samples = new Float32Array(numFrames * 2);\n    const numFramesExtracted = this.extractSource(samples,numFrames);\n    if (numFramesExtracted > 0)\n      this.inputBuffer.putSamples(samples,0,numFramesExtracted);\n  } \n\n/* inherited (called when input is end. Not used)\n  onEnd() { this.callback(); }\n*/\n\n\n};\n","/*\n   Written by goto at kmgoto.jp (Mar. 2021)\n   Copyright of my code is not claimed.\n\n   Based on soundtouchjs/src/PitchShifter.js, SimpleFilter.js\n\n   Modified for use as intermediate ScriptProcessorNode.\n   Note: Output does not work for OfflineAudioContext.\n\n   1) PitchShifter ---> MyPitchShifter (minimum code)\n                     includes ScriptProcessorNode\n\n   2) MyFilter extends SimpleFilter\n\n   Pitch modification and slow down/speed up work.\n   Slow down only for real-time playback.\n   fast playback is impossible by nature.\n\n */\n\nimport * as SoundTouch from 'soundtouchjs';\nimport MyFilter from './MyFilter';\nimport {saveAs} from 'file-saver';\nimport * as toWav from 'audiobuffer-to-wav';\n\nconst noop = function() {return;}\n\nexport default class MyPitchShifter {\n  constructor(context, numOfInputFrames, bufferSize, \n      record = false, bypass = false){\n    console.log('new MyPitchShifter instance');\n    this.context = context;\n    this.bufferSize = bufferSize;\n    this.record = record;\n    this.bypass = bypass;\n    this.recordedSamples = [[],[]];\n    this.lastPlayingAt = 0;\n\n    this._soundtouch = new SoundTouch.SoundTouch();\n    this._filter = new MyFilter(this._soundtouch, noop); \n    this._onEnd = noop;\n    this._onUpdate = noop;\n    this._updateInterval = 0.5;\n\n    this._node = context.createScriptProcessor(bufferSize,2,2);\n    this._node.onaudioprocess = this.onaudioprocess.bind(this);\n    this._totalInputFrames = numOfInputFrames;\n    this._recordedBuffer = null;\n    this._nVirtualOutputFrames = 0;\n    this._playingAt = 0;\n\n    this.outSamples = new Float32Array(bufferSize*2);\n    this.inSamples  = new Float32Array(bufferSize*2);\n    this.sampleRate = context.sampleRate; \n    this.nInputFrames = 0;\n\n   // this.process = this.process.bind(this);\n\n  }\n\n  set totalInputFrames(nframes){ this._totalInputFrames = nframes;}\n  get totalInputFrames(){ return this._totalInputFrames;}\n\n  get totalVirtualOutputFrames(){ return this._nVirtualOutputFrames;}\n\n  get playingAt(){\n    return this._playingAt;\n  }\n\n  get node(){ return this._node; }\n  set tempo(tempo){ this._soundtouch.tempo = tempo; }\n  get tempo(){ return this._soundtouch.tempo; }\n  set pitch(pitch){ this._soundtouch.pitch = pitch; }\n  get rate(){ return this._soundtouch.rate; }\n\n  get recordedBuffer(){ \n    if (this._recordedBuffer === null) this.createProcessedBuffer();\n    return this._recordedBuffer; \n  }\n\n  set onEnd(func){ this._onEnd = func; }\n  set onUpdate(func){ this._onUpdate = func; }\n  set updateInterval(val){ this._updateInterval = val;}\n  get updateInterval(){ return this._updateInterval;}\n\n  stop(){ \n    if (this._node.onaudioprocess) {\n      console.log('shifter stop');\n      this._node.onaudioprocess = null; \n      this._node.disconnect();\n      if (this._recordedBuffer === null) this.createProcessedBuffer();\n      this._onEnd(this._recordedBuffer); \n    }\n  }\n\n  createProcessedBuffer(){\n\n    if (!this.record) return;\n\n    const outputBuffer = this.context.createBuffer(\n      this.recordedSamples.length, // channels\n      this.recordedSamples[0].length, // sample length\n      this.sampleRate\n    );\n\n    const left = outputBuffer.getChannelData(0);\n    const right = outputBuffer.getChannelData(1);\n    left.set(this.recordedSamples[0]);\n    right.set(this.recordedSamples[1]);\n    // Typedarray.set(array[, offset])\n\n    this._recordedBuffer = outputBuffer;\n\n  } // end createProcessedBuffer()\n\n  onaudioprocess(e){\n    // console.log('onaudioprocess()');\n\n    if (this.bypass) { // pass through for test\n      if (this._nVirtualOutputFrames <= this._totalInputFrames){\n        this.passThrough(e.inputBuffer,e.outputBuffer); // through for test\n        this._nVirtualOutputFrames += e.outputBuffer.length;\n      } else this.stop();\n    } else {\n      if (this._nVirtualOutputFrames <= this._totalInputFrames){\n        const nOutputFrames = this.process(e.inputBuffer,e.outputBuffer);\n        this._nVirtualOutputFrames += nOutputFrames*this._soundtouch.tempo;\n      } else this.stop();\n    }\n\n   this._playingAt = this._nVirtualOutputFrames/this.sampleRate;\n\n   if (this.playingAt - this.lastPlayingAt >= this._updateInterval) {\n      this._onUpdate(this._playingAt);\n      this.lastPlayingAt = this._playingAt;\n   }\n\n   this.nInputFrames += e.inputBuffer.length; \n\n    return true;\n  }\n\n  process(inputBuffer,outputBuffer) { // using soundtouchjs \n    // console.log('MyPitchShifter process');\n    // input part\n    const leftIn = inputBuffer.getChannelData(0);\n    const rightIn = inputBuffer.getChannelData(1);\n    const inSamples = this.inSamples; // LR Interleave\n    const left = outputBuffer.getChannelData(0);\n    const right = outputBuffer.getChannelData(1);\n\n    for (let i = 0; i < inputBuffer.length; i++) {\n        inSamples[2*i] = leftIn[i]; \n        inSamples[2*i + 1] = rightIn[i]; \n    }\n    this._filter.putSource(inSamples);\n\n   // Output  node.onaudioprocess in function getWebAudioNode\n   // context, filter, sourcePositionCallback\n    const outSamples = this.outSamples;\n    const framesExtracted = this._filter.extract(outSamples, this.bufferSize);\n\n    for (let i=0; i < framesExtracted; i++) {\n      left[i]  = outSamples[i * 2]; \n      right[i] = outSamples[i * 2 + 1];\n      if (this.record) {\n        this.recordedSamples[0].push(left[i]);\n        this.recordedSamples[1].push(right[i]);\n      }\n    } \n\n    return framesExtracted;\n\n  } // End process\n\n // just copy inputBuffer to outputBuffer for test \n  passThrough(inputBuffer, outputBuffer){ \n    const nc = outputBuffer.numberOfChannels;\n    for (let channel=0; channel < nc; channel++){\n      const input = inputBuffer.getChannelData(channel);\n      const output = outputBuffer.getChannelData(channel);\n      output.set(inputBuffer.getChannelData(channel)); \n\n      if (this.record) \n        for (let i = 0; i < outputBuffer.length; i++) \n          this.recordedSamples[channel].push(input[i]);\n    }\n\n  } // End pathThrough()\n\n  exportToFile (filename){\n    if (!this.record) return;\n\n    console.log ('exportToFile: ', filename,\n      'length: ', this.recordedSamples[0].length);\n\n    if (this._recordedBuffer === null) this.createProcessedBuffer();\n\n    const blob = new Blob([toWav(this._recordedBuffer)], \n       {type: 'audio/vnd.wav'});\n    saveAs(blob, filename);\n\n    return;\n  } // end exportToFile()\n\n};\n","import {saveAs} from 'file-saver';\nimport * as toWav from 'audiobuffer-to-wav';\n\nconst noop = function() {return;}\n// const sleep = msec => new Promise(resolve => setTimeout(resolve, msec));\n\nclass MyPitchShifterWorkletNode extends AudioWorkletNode {\n  constructor(context,workletName, options){\n    super(context, workletName, options);\n\n    // this.context = context; // already in super class\n    this.recording = options.processorOptions.recording;\n    this.sampleRate = options.processorOptions.sampleRate;\n    this.port.onmessage = this.messageProcessor.bind(this);\n    this._onUpdate = noop;\n    this._onEnd = noop;\n    this.recordedSamples = null;\n    this._recordedBuffer = null;\n\n  } // End constructor()\n\nget node(){ return this;} // for compatibility\n\n  set onEnd (func) { this._onEnd = func; }\n  set onUpdate (func) { this._onUpdate = func;}\n\n  set onUpdateInterval (value) { \n    this.port.postMessage({command: 'onUpdateInterval', args: [value]});}\n  set tempo(value){\n    this.port.postMessage({command: 'setTempo', args: [value]}); }\n  set pitch(value){\n    this.port.postMessage({command: 'setPitch', args: [value]}); }\n  get tempo(){\n    this.port.postMessage({command: 'getTempo', args: []}); \n    return this.tempo;\n  }\n  get pitch(){\n    this.port.postMessage({command: 'getPitch', args: []}); \n    return this.pitch;\n  }\n\n  get recordedBuffer(){\n    return this._recordedBuffer;\n  }\n\n  stop(){\n    console.log('MySoundTouchnode.stop()');\n    if (this.recording){\n      console.log('Node --> worklet getRecordedSamples');\n      this.port.postMessage({command: 'getRecordedSamples', args: []});\n    }\n    this.disconnect();\n    this._onEnd(this._recordedBuffer);\n  }\n\n  messageProcessor(e){\n    // console.log('Node Recvd', e.data);\n    if(e.data.command){\n      const {command,args} = e.data;\n      switch(command) {\n        case 'End':\n          console.log ('Node: got recordedSamples from worklet');\n          this.recordedSamples = args[0]; \n          if (this.recording) this.createRecordedBuffer();\n          this.stop();\n        break;\n        case 'update' : \n          this._onUpdate(args[0]); // this.playingAt = args[0];\n        break;\n        default:\n      }\n      return;\n    }\n\n    if (e.data.status){\n      const value = e.data.args[1];\n      switch(e.data.args[0]){\n        case 'getTempo': this.tempo = value; break;\n        case 'getPitch': this.pitch = value; break;\n        default:\n      }\n      return;\n    }\n  } // End messgeProcessor()\n\n  exportToFile (filename){\n    if (!this.recording) return;\n\n    const blob = new Blob([toWav(this._recordedBuffer)], \n       {type: 'audio/vnd.wav'});\n    saveAs(blob, filename);\n\n    return;\n  } // end exportToFile()\n\n  createRecordedBuffer() {\n    console.log ('output from worklet', \n      this.recordedSamples[0].length);\n\n    if (this.recordedSamples[0].length === 0) return null;\n\n\n    this._recordedBuffer = this.context.createBuffer(\n      this.recordedSamples.length, // channels\n      this.recordedSamples[0].length, // sample length\n      this.sampleRate\n    );\n\n    const left = this._recordedBuffer.getChannelData(0);\n    const right = this._recordedBuffer.getChannelData(1);\n    left.set(this.recordedSamples[0]);\n    right.set(this.recordedSamples[1]);\n\n    console.log('createRecordedBuffer done');\n    return this._recordedBuffer;\n\n  } // End createRecordedBuffer\n\n};\n\nexport default MyPitchShifterWorkletNode;\n","import { Component } from 'react';\n\n// material-ui Icons, Tooltip\nimport { IconButton, Tooltip } from '@material-ui/core';\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport PauseCircleOutlineOutlinedIcon\n        from '@material-ui/icons/PauseCircleOutlineOutlined';\n\nexport default class PlayButton extends Component {\n  constructor(props){\n    super();\n    this.state = {\n      nextAction: props.nextAction,\n      m : props.messages,\n    };\n    this.handler = props.handler;\n  }\n\ncomponentDidUpdate(prevProps) {\n  if (prevProps.nextAction !== this.props.nextAction) {\n    this.setState({nextAction: this.props.nextAction}); \n  }\n  if (prevProps.messages !== this.props.messages) {\n    this.setState({m: this.props.messages}); \n  }\n}\n\n// PlayButton \n  render(){\n    const {nextAction,m} = this.state;\n\n    let icon = null;\n    switch(nextAction){\n         case 'load files first!':\n           icon = \n             <Tooltip title={m.alert}>\n             <span><IconButton\n             onClick={() => this.handler({target: {name: 'startPause'}})} >\n             <PlayCircleOutlineIcon color='disabled'/>\n             </IconButton></span></Tooltip>;\n         break;\n         case 'Play': \n           icon = <Tooltip title={m.playButton}><IconButton  \n             onClick={() => this.handler({target: {name: 'startPause'}})} >\n             <PlayCircleOutlineIcon color='primary' />\n             </IconButton></Tooltip>;\n         break;\n         case 'Resume':\n           icon = <IconButton  \n             onClick={() => this.handler({target: {name: 'startPause'}})} >\n             <PlayCircleOutlineIcon style={{color: '#00aa00' }} />\n             </IconButton>;\n         break;\n         case 'Pause': \n           icon = <IconButton  \n             onClick={() => this.handler({target: {name: 'startPause'}})} >\n             <PauseCircleOutlineOutlinedIcon color='primary' />\n             </IconButton>;\n         break;\n         default:\n           icon = 'undefined';\n       }\n       return(<span>{icon}</span>);\n\n     } // end render\n\n};\n","import { Component } from 'react';\n\n// material-ui Icons\nimport { IconButton } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\n\nexport default class SpeedPitchControls extends Component {\n  constructor(props){\n    super();\n\n    this.state = {\n      playSpeed: props.playSpeed,\n      playPitch: props.playPitch,\n      m : props.messages,\n    };\n\n    this.setSpeed = props.setSpeed;\n    this.setPitch = props.setPitch;\n  }\n\ncomponentDidUpdate(prevProps) {\n  if (prevProps.playSpeed !== this.props.playSpeed) {\n    this.setState({playSpeed: this.props.playSpeed}); \n  }\n\n  if (prevProps.playPitch !== this.props.playPitch) {\n    this.setState({playPitch : this.props.playPitch}); \n  }\n\n  if (prevProps.messages !== this.props.messages) {\n    this.setState({m: this.props.messages}); \n  }\n}\n\n  render(){\n    const {m} = this.state;\n\n    return(<span>\n    <span>\n     <div className='text-divider'>{m.speedTitle1} \n       (<font color= 'green'>{(100*this.state.playSpeed).toFixed(0)}%)</font>\n       &nbsp; {m.speedTitle2}\n    </div>\n\n      <center>\n     &plusmn; 10% <IconButton \n         onClick={() => this.setSpeed({target: {name: 'sub10'}})} > \n     <RemoveIcon color='primary'/> </IconButton>\n     <IconButton\n         onClick={() => this.setSpeed({target: {name: 'add10'}})} > \n     <AddIcon color='primary'/> </IconButton>\n     &nbsp;&nbsp;&nbsp;\n     &plusmn; 1% <IconButton\n        onClick={() => this.setSpeed({target: {name: 'sub1'}})} > \n     <RemoveIcon color='primary'/> </IconButton>\n     <IconButton\n        onClick={() => this.setSpeed({target: {name: 'add1'}})} > \n     <AddIcon color='primary'/> </IconButton>\n</center>\n\n     <div className='text-divider'>{m.pitchTitle}&nbsp; \n (<font color='green'>{this.state.playPitch.toFixed(1)}</font>) (-12 -- +12)</div>\n<center>\n     b/# <IconButton\n        onClick={() => this.setPitch({target: {name: 'sub1'}})} > \n     <RemoveIcon color='primary'/> </IconButton>\n     <IconButton\n        onClick={() => this.setPitch({target: {name: 'add1'}})} > \n     <AddIcon color='primary'/> </IconButton>\n     &nbsp;&nbsp;&nbsp;\n     &plusmn; 10 cents <IconButton\n        onClick={() => this.setPitch({target: {name: 'sub10c'}})} > \n     <RemoveIcon color='primary'/> </IconButton>\n     <IconButton\n        onClick={() => this.setPitch({target: {name: 'add10c'}})} > \n     <AddIcon color='primary'/> </IconButton>\n      </center></span>\n\n      </span>); \n\n\n  } // end render\n\n};\n","import { Component} from 'react';\nimport '../App.css';\n\nexport default class TrackGainSlider extends Component {\n  constructor(props){\n   super();\n   this.state = {\n     gain: props.gain,\n   }\n   this.id = props.id;\n   this.trackName = props.trackName;\n   this.handler = props.handler;\n  } \n\n componentDidUpdate(prevProps) {\n   if (prevProps.gain !== this.props.gain) {\n     this.setState({gain: this.props.gain});\n   }\n }\n\n  render(){\n   if (this.state.gain === undefined || !this.trackName === undefined) return null;\n\n   return (<div className='slider'>\n    {this.trackName} ({this.state.gain})<br />\n     0 <input type='range' id={this.id} name='gainSlider'\n        min='0' max='100' value={this.state.gain}\n        onChange={this.handler} /> 100\n   </div>);\n  } // end render\n\n}; // End class TrackGainSlider\n","import { Component } from 'react';\nimport TrackGainSlider from './TrackGainSlider';\n\nexport default class TrackGainSliderList extends Component {\n  constructor(props){\n    super();\n    this.inputAudio = props.inputAudio;\n    this.handler = props.handler;\n    this.state = {\n     gains: props.gains,\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.inputAudio !== this.props.inputAudio){\n      this.setState({inputAudio: this.props.inputAudio});\n    }\n\n    if (prevProps.gains !== this.props.gains) {\n      this.setState({gains: this.props.gains});\n    }\n  }\n\n  render(){\n    if (this.inputAudio.length > 9) return null;\n    // max 8 tracks + record\n\n    // ugly but to avoid dynamic rendering\n    return (<div><center>\n     {this.inputAudio[0] ? <TrackGainSlider id={0} \n        trackName={this.inputAudio[0].name} \n        gain={this.state.gains[0]} handler={this.handler} /> : null}\n     {this.inputAudio[1] ? <TrackGainSlider id={1} \n        trackName={this.inputAudio[1].name} \n        gain={this.state.gains[1]} handler={this.handler} /> : null}\n     {this.inputAudio[2] ? <TrackGainSlider id={2} \n        trackName={this.inputAudio[2].name} \n        gain={this.state.gains[2]} handler={this.handler} /> : null}\n     {this.inputAudio[3] ? <TrackGainSlider id={3} \n        trackName={this.inputAudio[3].name} \n        gain={this.state.gains[3]} handler={this.handler} /> : null}\n     {this.inputAudio[4] ? <TrackGainSlider id={4} \n        trackName={this.inputAudio[4].name} \n        gain={this.state.gains[4]} handler={this.handler} /> : null}\n     {this.inputAudio[5] ? <TrackGainSlider id={5} \n        trackName={this.inputAudio[5].name} \n        gain={this.state.gains[5]} handler={this.handler} /> : null}\n     {this.inputAudio[6] ? <TrackGainSlider id={6} \n        trackName={this.inputAudio[6].name} \n        gain={this.state.gains[6]} handler={this.handler} /> : null}\n     {this.inputAudio[7] ? <TrackGainSlider id={7} \n        trackName={this.inputAudio[7].name} \n        gain={this.state.gains[7]} handler={this.handler} /> : null}\n     {this.inputAudio[8] ? <TrackGainSlider id={8} \n        trackName={this.inputAudio[8].name} \n        gain={this.state.gains[8]} handler={this.handler} /> : null}\n     </center></div>);\n\n  } // end render\n\n}; // End class TrackGainSliders\n","/*\n   Written by goto at kmgoto.jp (Mar. 2021)\n   Copyright of my code is not claimed.\n\n   Based on soundtouchjs/src/PitchShifter.js, SimpleFilter.js\n\n   Modified for use as intermediate ScriptProcessorNode.\n   Note: Output does not work for OfflineAudioContext.\n\n   1) PitchShifter ---> MyPitchShifter (minimum code)\n                     includes ScriptProcessorNode\n\n   2) MyFilter extends SimpleFilter\n\n   Pitch modification and slow down/speed up work.\n   Slow down only for real-time playback.\n   Fast real-time playback is impossible by nature.\n\n */\n\nimport { Component }  from 'react';\nimport './App.css';\nimport MyPitchShifter from './jslibs/MyPitchShifter'; // soundtouchJS\nimport MyPitchShifterWorkletNode from './jslibs/MyPitchShifterWorkletNode';\n// UI Components\nimport PlayButton from './jslibs/PlayButton';\nimport SpeedPitchControls from './jslibs/SpeedPitchControls';\nimport TrackGainSliderList from './jslibs/TrackGainSliderList';\n\nimport packageJSON from '../package.json';\nimport messages from './messages.json'; // English/Japanese messages\n\n// material-ui Icons, Tooltip\nimport { IconButton, Tooltip } from '@material-ui/core';\nimport StopOutlinedIcon from '@material-ui/icons/StopOutlined';\nimport LoopOutlinedIcon from '@material-ui/icons/LoopOutlined';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport PlayCircleFilledWhiteIcon \n   from '@material-ui/icons/PlayCircleFilledWhite';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\nimport MoodIcon from '@material-ui/icons/Mood';\nimport MicIcon from '@material-ui/icons/Mic';\n// import { AudioContext, OfflineAudioContext }  from 'standardized-audio-context';\n\n// get subversion string \nconst version = packageJSON.subversion;\n\n// switch languages\nlet defaultLang = 'en';\nlet m = messages.en;\nconsole.log(window.navigator.language);\nif (window.navigator.language.slice(0,2) === 'ja') {\n  defaultLang = 'ja'; \n  m = messages.ja;\n}\n\nlet iOS = false;\nif(  navigator.userAgent.match(/iPhone/i) \n  || navigator.userAgent.match(/iPod/i)\n  || navigator.userAgent.match(/iPad/i)){\n  iOS = true;\n}\n\n// AudioWorklet check with OfflineAudioContext (from Google Labs example)\nlet tmp = false;\n\nif (OfflineAudioContext) tmp = true; else tmp = false;\nconst isOfflineAudioContext = tmp;\n\n//let context = new OfflineAudioContext(1, 1, 44100);\n\nlet context = new AudioContext();\nif (context.audioWorklet && \n    typeof context.audioWorklet.addModule === 'function'){\n    tmp = true;\n} else tmp = false; \ncontext.close();\nconst isAudioWorklet = tmp;\n\nif (isAudioWorklet) console.log('Audio Worklet is available');\n  else console.log('Audio Worklet is NOT available');\n\nif (isOfflineAudioContext) console.log('OfflineAudioContext is available');\n  else console.log('OfflineAudioContext is NOT available');\n\nclass App extends Component {\n\n  constructor (props) {\n    super();\n    this.audioCtx = null;\n    this.inputAudio = [];\n    this.mixedSource = null;\n    this.masterGainNode = null;\n \n    this.state = {\n      language: defaultLang,\n      isPlaying: false,\n      timeA: 0,\n      playingAt: 0,\n      timeB: 0, \n      loop: false,\n      loopDelay: 2,\n      playButtonNextAction: 'load files first!',\n      gains: [],\n      masterGain: 75,\n      playSpeed: 1.0,\n      playPitch: 0.0,\n      bypass: false,\n      useAudioWorklet: isAudioWorklet,\n      micOn: false,\n    };\n\n    this.shifter = null;\n\n    this.loadFiles = this.loadFiles.bind(this);\n    this.handlePlay = this.handlePlay.bind(this);\n    this.handleGainSlider = this.handleGainSlider.bind(this);\n    this.handleTimeSlider = this.handleTimeSlider.bind(this);\n    this.playAB = this.playAB.bind(this);\n    this.setSpeed = this.setSpeed.bind(this);\n    this.setPitch = this.setPitch.bind(this);\n    this.switchLanguage = this.switchLanguage.bind(this);\n  }   \n\n  componentWillUnmount () { // before closing app\n    if (this.audioCtx !== null) this.audioCtx.close();\n  }\n\n\n  render(){\n\n    return (\n     <div className=\"App\">\n     {m.title}\n     <br />\n     <center>\n     (language) &ensp;\n     <span className='tiny-button'>\n     <Tooltip title={m.switchLang}>\n      <button onClick = {this.switchLanguage}>\n      {this.state.language === 'ja' ? 'EN' : 'JP' }</button>\n     </Tooltip>\n     </span>\n     &ensp;(AudioWorklet)\n     <Tooltip title={m.worklet}>\n     <IconButton name='toggleWorklet'\n     onClick = {\n       () => {\n        if (isAudioWorklet)\n        this.setState({useAudioWorklet: !this.state.useAudioWorklet});}\n     } >\n     <MoodIcon color={this.state.useAudioWorklet? 'primary':'disabled'} />\n     </IconButton>\n     </Tooltip>\n     </center>\n     <hr />\n     <span className=\"selectFile\">\n     <Tooltip title={m.fileReader}>\n     <input type=\"file\" name=\"loadFiles\" multiple\n        accept=\"audio/*\" onChange={this.loadFiles} />\n     </Tooltip>\n     &emsp;<span className='tiny-button'>\n     <Tooltip title={m.clearFiles}>\n     <button name='clearFile' onClick = {() => {\n       this.setState({gains: [], \n       playButtonNextAction: 'load files first!'});\n       this.inputAudio = []; }} \n     >{m.clearButton}</button></Tooltip></span>\n     <br />\n     </span><br/>\n     <div className='text-divider'>{m.timeTitle}&nbsp;\n      ({m.timeSliderPosition}:&nbsp; \n       <font color='green'>{this.state.playingAt.toFixed(2)}</font>)\n     </div>\n     <center>\n     A: {this.state.timeA.toFixed(2)} -- B: {this.state.timeB.toFixed(2)}\n     &emsp; song length: {this.inputAudio[0] ? \n          this.inputAudio[0].data.duration.toFixed(2) : 0.00}\n     <br />\n     <div className='slider'>\n     <Tooltip title={m.timeSlider}>\n     <input type='range' name='timeSlider'\n       min='0' max= {this.inputAudio[0] ? \n              this.inputAudio[0].data.duration : 0}\n       value={this.state.playingAt}\n       onChange={this.handleTimeSlider}\n     />\n     </Tooltip>\n     </div>\n     <span className='tiny-button'>\n     <Tooltip title={m.setA}>\n     <button name='setA' \n        onClick={()=> this.setState({timeA: this.state.playingAt})}>\n        set A\n     </button>\n     </Tooltip>\n      &emsp;\n     <Tooltip title={m.setB}>\n     <button name='setB' \n        onClick={()=> this.setState({timeB: this.state.playingAt})}>\n        set B\n     </button>\n     </Tooltip>\n      &emsp;\n     <Tooltip title={m.resetAB}>\n     <button name='reset' \n        onClick={()=> this.setState({timeA: 0, timeB: this.inputAudio[0].data.duration})}>reset\n     </button>\n     </Tooltip>\n     </span>\n     </center>\n\n     <div className='text-divider'>{m.playerTitle}</div>\n     <center>\n    <Tooltip title={m.record}>\n    <IconButton \n     onClick={()=> this.setState({micOn: !this.state.micOn})} >\n    <MicIcon color={this.state.micOn ? 'secondary' : 'primary'} />\n    </IconButton>\n    </Tooltip>\n    <PlayButton \n      nextAction={this.state.playButtonNextAction}\n      handler={this.handlePlay}\n      messages={m}\n   />\n     <Tooltip title={m.stopButton}>\n     <IconButton  \n       onClick={() => this.handlePlay({target: {name: 'stop'}})} >\n       <StopOutlinedIcon \n     color={this.inputAudio.length ? 'primary' : 'disabled'} />\n     </IconButton>\n     </Tooltip>\n     <Tooltip title={m.loopButton}>\n     <IconButton  \n       onClick={() => {this.setState({loop: !this.state.loop});}} >\n       <LoopOutlinedIcon \n       color={this.state.loop ? 'secondary' : 'primary'} />\n     </IconButton>\n     </Tooltip>\n\n     <Tooltip title={m.exportButton} aria-label='exportFile'>\n     <IconButton  \n       onClick={() => this.handlePlay({target: {name: 'exportFile'}})} >\n       <GetAppIcon \n       color={!this.inputAudio.length || this.state.isPlaying ? 'disabled' : 'primary'} />\n     </IconButton>\n     </Tooltip>\n\n     <Tooltip title={m.playMixButton} aria-label='playMix'>\n     <IconButton  \n       onClick={() => this.handlePlay({target: {name: 'playMix'}})} >\n       <PlayCircleFilledWhiteIcon\n       color={!this.inputAudio.length || this.state.isPlaying ? 'disabled' : 'primary'} />\n     </IconButton>\n     </Tooltip>\n     <Tooltip title={m.bypassButton}>\n     <IconButton\n       onClick={() => this.setState({bypass: !this.state.bypass})}>\n       <NotInterestedIcon\n       color={this.state.bypass ? 'disabled' : 'primary'} />\n    </IconButton>\n     </Tooltip>\n\n     </center>\n\n    {this.state.bypass ?  '' : \n    <SpeedPitchControls \n      playSpeed={this.state.playSpeed}\n      playPitch={this.state.playPitch}\n      setSpeed={this.setSpeed}\n      setPitch={this.setPitch}\n      messages={m}\n    />\n    }\n\n     <div className='slider' key='master'>\n       <div className='text-divider'>{m.masterGainTitle}&nbsp;\n       ({this.state.masterGain})</div>\n       <center>\n       0 <input type='range' id='master' name='gainSlider' \n          min='0' max='150' value={this.state.masterGain} \n           onChange={this.handleGainSlider} /> 150\n       </center>\n     </div>\n     <div className='text-divider'>{m.trackGainTitle}</div>\n     <TrackGainSliderList\n        inputAudio={this.inputAudio} \n        gains={this.state.gains}\n        handler={this.handleGainSlider}\n     />\n     <hr />\n     {m.version}: {version} &nbsp;&nbsp;\n     <a href={m.url}\n     target='_blank' rel='noreferrer'>{m.guide}</a><br />\n     {m.credit}&nbsp; \n     <a href=\"https://github.com/cutterbl/SoundTouchJS\"\n     target='_blank' rel='noreferrer'>SoundTouchJs</a><br />\n     <hr />\n     </div>\n    );\n  }\n\n  loadFiles(event){\n\n    if (event.target.name !== 'loadFiles') return;\n    if (event.target.files.length === 0) return;\n    const files = event.target.files; \n\n    console.log('loadFiles');\n    if (this.audioCtx === null) {\n      console.log('loadFiles audioCtx creation, addModule()');\n      this.audioCtx = new AudioContext();\n      this.loadModule(this.audioCtx,'worklet/bundle.js');\n    }\n\n    for (let i=0; i < files.length; i++){\n      const reader = new FileReader();\n\n      reader.onload = function (e){\n       this.audioCtx.decodeAudioData(reader.result,\n         function (audioBuffer) {\n           if (audioBuffer.numberOfChannels !== 2) {\n             alert ('Sorry, only stereo files are supported');\n             return;\n           }\n           this.inputAudio.push({\n              name: files[i].name,\n              data: audioBuffer,\n              source: null,\n              gainNode: null,\n              gain: 100,\n           });\n      \n           const gains = this.state.gains; gains.push(100);\n\n           this.setState({\n             playButtonNextAction: 'Play',\n               timeA: 0,\n               playingAt: 0,\n               timeB: this.inputAudio[0].data.duration, \n               gains: gains,\n           });\n\n     // this.inputAudio.sort((a,b) => a.name - b.name); // mmm.. does not work\n\n         }.bind(this),\n\n         function (error) { console.log (\"decode error: \" + error.err) }\n       )\n\n      }.bind(this)\n\n      reader.onerror = function (e){ console.log(\"File read \", reader.error);}\n      reader.readAsArrayBuffer(files[i]);\n\n    } // end for\n\n  } // end loadFiles()\n\n  handleTimeSlider(event){\n\n    if(event.target.name !== 'timeSlider') return;\n\n    if (!this.state.isPlaying)\n      this.setState({playingAt: parseFloat(event.target.value)});\n  }\n\n  handlePlay(event){\n\n    console.log('handlePlay name/button', \n       event.target.name, this.state.playButtonNextAction);\n\n    if (this.inputAudio.length === 0) alert(m.alert);\n\n    if (event.target.name === 'startPause') {\n\n      switch(this.state.playButtonNextAction){\n\n        case 'Pause':\n          console.log('Pause');\n          if(this.audioCtx) this.audioCtx.suspend();\n          this.setState ({\n            playButtonNextAction: 'Resume',\n            isPlaying: false \n          });\n        break;\n\n        case 'Resume': \n          console.log('Resume');\n          if (this.audioCtx.state === 'suspended') this.audioCtx.resume();\n          this.setState ({\n            playButtonNextAction: 'Pause', \n            isPlaying: true\n          });\n        break;\n\n        case 'Play':\n          console.log('Play');\n          if (this.inputAudio.length === 0) break;\n           this.playAB (0, this.state.timeA, this.state.timeB);\n\n          this.setState ({playButtonNextAction: 'Pause'})\n        break;\n\n        default:\n          console.log('default', this.state.playButtonNextAction);\n      }\n\n      return;\n    }\n\n    if (event.target.name === 'stop') {\n      if (this.shifter) this.shifter.stop();\n      if (this.mixedSource) this.mixedSource.stop();\n\n      this.setState ({loop: false, playButtonNextAction: 'Play', playingAt: \n         this.state.timeA})\n      return;\n    }    \n\n    if (event.target.name === 'exportFile' \n       || event.target.name === 'playMix'){\n      if (this.inputAudio.length === 0 || this.state.isPlaying) return;\n\n      const recording = true;\n      let offline = isOfflineAudioContext;\n      // if (iOS) { offline = false; }\n      this.playAB (0, this.state.timeA, this.state.timeB, \n          recording, offline, event.target.name);\n\n      return;\n    }\n\n  } // end handlePlay()\n\n  handleGainSlider(event){\n    if (event.target.name !== 'gainSlider') return;\n//       console.log ('slider id= ', event.target.id);\n// \n    if (event.target.id === 'master'){\n      this.setState({masterGain: parseFloat(event.target.value)});\n      if (this.masterGainNode)\n        this.masterGainNode.gain.value = parseFloat(event.target.value/100.0);\n      return;\n    }\n\n    const index = parseInt(event.target.id);\n\n    const gains = this.state.gains;\n    gains[index] = parseInt(event.target.value);\n    this.setState({gains: gains});\n    if (this.inputAudio[index].gainNode !== null)\n      this.inputAudio[index].gainNode.gain.value \n           = parseFloat(event.target.value/100.0); \n\n  } // End handleGainSlider()\n\n  setSpeed(e){\n    let speed = this.state.playSpeed;\n    switch(e.target.name){\n      case 'sub10': speed -=0.1; break;\n      case 'add10': speed +=0.1; break;\n      case 'sub1': speed -=0.01; break;\n      case 'add1': speed +=0.01; break;\n      default:\n    }\n    if (speed < 0.5) speed = 0.5;\n    else if (speed > 2.0) speed = 2.0;\n\n    if (this.shifter) this.shifter.tempo = speed;\n\n    this.setState({playSpeed: speed});\n  } // End set speed\n\n  setPitch(e){\n    let pitch = this.state.playPitch;\n    switch(e.target.name){\n      case 'sub1': pitch -=1; break;\n      case 'add1': pitch +=1; break;\n      case 'sub10c': pitch -=0.1; break;\n      case 'add10c': pitch +=0.1; break;\n      default:\n    }\n\n    if (pitch < -12) pitch = -12.0;\n    else if (pitch > 12) pitch = 12.0\n\n    if (this.shifter) this.shifter.pitch = Math.pow(2.0,pitch/12.0);\n\n    this.setState({playPitch: pitch});\n\n  } // End setPitch\n\n  switchLanguage(e) {\n\n    if (this.state.language === 'ja') {\n      m = messages.en; \n      this.setState({language: 'en'});\n    } else {\n      m = messages.ja; \n      this.setState({language: 'ja'});\n    }\n  } // End switchLanguage()\n\n  playAB(delay, timeA, timeB, recording = false, \n       offline = false, exporter='none'){\n\n    console.log('playAB', \n       'delay, timeA, timeB, recording, offline, exporter = ', \n       delay, timeA, timeB, recording, offline, exporter);\n\n    if (this.state.isPlaying) return;\n    if (this.audioCtx.state === 'suspended' ) this.audioCtx.resume();\n\n    const sampleRate = this.inputAudio[0].data.sampleRate;\n    const channels = this.inputAudio[0].data.numberOfChannels;\n    const nInputFrames = (timeB - timeA)*sampleRate;\n    const nOutputFrames = Math.max(nInputFrames, \n                      nInputFrames/this.state.playSpeed);\n\n    let context = null;\n    if (offline){\n      context = new OfflineAudioContext (\n        channels,\n        nOutputFrames + 5.0*sampleRate, // add extra 5 second\n        sampleRate \n      );\n      console.log('OfflineAudioContext');\n      // this.loadModule(context, 'worklet/bundle.js');\n    } else context = this.audioCtx;\n\n    this.setState({isPlaying : true});\n\n    let updateInterval = 1.0;\n    if (offline) updateInterval = 10.0;\n\n    const options = {\n      processorOptions: {\n        bypass: this.state.bypass,\n        recording: recording,\n        nInputFrames: nInputFrames, \n        updateInterval: updateInterval, \n        sampleRate: sampleRate\n      },\n    };\n\n    let shifter = null;\n    if (offline || !this.state.useAudioWorklet) {\n      shifter = new MyPitchShifter( context, nInputFrames, \n        4096, recording, this.state.bypass); // ScriptProcessorNode\n      shifter.updateInterval = updateInterval;\n    } else { // load the same worklet for OfflineAudioContext\n      try {\n        this.loadModule(context, 'worklet/bundle.js').then(result => {\n          shifter = new MyPitchShifterWorkletNode(context,\n         'my-soundtouch-processor',  // registered in the worklet file\n          options); // options passed to the AudioWorkletProcessor\n        });\n        console.log('AudioWorklet functional');\n      } catch (err) { \n        console.log(err);\n        shifter = null;\n        shifter = new MyPitchShifter( context, nInputFrames, \n          4096, recording, this.state.bypass); // ScriptProcessorNode\n        shifter.updateInterval = updateInterval;\n        console.log('Worklet failed. Fallback to ScriptProcessorNode');\n        // Creation of shifter does not work for Online (reason unknown)\n      }\n    } // end if useAudioWorklet \n\n    if (!offline) this.shifter = shifter;\n\n    shifter.tempo = this.state.playSpeed;\n    shifter.pitch = Math.pow(2.0,this.state.playPitch/12.0);\n\n    for (let i=0; i < this.inputAudio.length; i++){\n\n      const source = context.createBufferSource();\n      if (offline) source.buffer = this.inputAudio[i].data;\n       else source.buffer = this.addZeros(context,this.inputAudio[i].data);\n\n        this.inputAudio[i].source = source;\n      const gainNode = context.createGain();\n        gainNode.gain.value = this.state.gains[i]/100.0;\n        this.inputAudio[i].gainNode = gainNode;\n      source.connect(gainNode);\n      gainNode.connect(shifter.node);\n    }\n\n  if (!offline) {\n    const masterGainNode = context.createGain();\n    masterGainNode.gain.value = this.state.masterGain/100.0;\n    this.masterGainNode = masterGainNode;\n    shifter.node.connect(masterGainNode);\n    masterGainNode.connect(context.destination);\n  } else shifter.node.connect(context.destination);\n\n    for (let i=0; i < this.inputAudio.length; i++)\n      this.inputAudio[i].source.start(context.currentTime + delay, timeA);\n\n    if (offline) {\n      console.log('startRendering');\n      context.startRendering();\n    }\n\n    this.inputAudio[0].source.onended = function(e) {\n      console.log('source 0 onended');\n      if (this.state.playingAt < timeB) {\n        shifter.stop(); \n        this.setState({isPlaying: false, playButtonNextAction: 'Play'});\n      }\n    }.bind(this);\n\n    shifter.onUpdate = function(val) { \n      this.setState({playingAt: timeA + val});\n    }.bind(this);\n\n    if (offline) {\n      context.oncomplete = function(e) {\n        console.log( \n         'Offline render complete (data is useless though) length = ',\n          e.renderedBuffer.length);\n      }\n    }\n\n    shifter.onEnd = function(recordedBuffer) { \n       // recordedBuffer made in shifter from worklet's message data\n      console.log('shifter onEnd');\n\n      for (let i=0; i < this.inputAudio.length; i++)\n        this.inputAudio[i].gainNode.disconnect();\n      this.setState({isPlaying: false});\n\n      if (exporter === 'exportFile' ) {\n\n        console.log('exportFile');\n        shifter.exportToFile('mix_' + Date.now() + '.wav');\n        this.setState({isPlaying: false}); // audioBuffer is in the shifter\n\n      } else if (exporter === 'playMix'){\n\n        console.log('playMix');\n        const context = this.audioCtx;\n        this.setState({isPlaying: true, playButtonNextAction: 'Pause'});\n        const source = context.createBufferSource();\n          this.mixedSource = source;\n          source.buffer = recordedBuffer;\n         const masterGainNode = context.createGain();\n           this.masterGainNode = masterGainNode;\n           masterGainNode.gain.value = this.state.masterGain/100;\n         source.connect(this.masterGainNode);\n         masterGainNode.connect(context.destination);\n         source.start();\n\n         source.onended = function(e) {\n           this.mixedSource = null;\n           this.setState({isPlaying: false});\n         }.bind(this);\n\n      }\n\n   }.bind(this);\n\n  } // END playAB\n\n  async loadModule (context,filename){\n    if (!context) return false;\n\n    let name = context.constructor.name;\n    console.log(name, 'addModule()');\n\n    try {\n      await context.audioWorklet.addModule(filename);\n      console.log(name, 'AudioWorklet loaded');\n      return true;\n    } catch(e) {\n      console.log(e, name, 'AudioWorklet load failed');\n      return false;\n    }\n\n  }\n\n  addZeros(context,input){ // return zero padded double length AudioBuffer\n    console.log('addZeros');\n    const output = context.createBuffer(\n      input.numberOfChannels, \n      input.length*2 + 5*input.sampleRate, \n      input.sampleRate\n    ); // additional 5 sec\n\n    for (let ch = 0; ch < output.numberOfChannels; ch++){\n      const inSamples = input.getChannelData(ch);\n      const outSamples = output.getChannelData(ch);\n      outSamples.set(inSamples);\n    }\n\n    return output;\n  } // End addZeros()\n\n}; // end class\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\n/*\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n*/\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\n// serviceWorkerRegistration.unregister();\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}