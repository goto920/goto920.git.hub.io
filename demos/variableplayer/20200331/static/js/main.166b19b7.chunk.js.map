{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["audioCtx","gainNode","version","packageJSON","homepage","subversion","slice","jaText","messages","ja","usText","us","m","window","AudioContext","webkitAudioContext","shifter","iOS","navigator","userAgent","match","App","props","params","filename","audioBuffer","isPlaying","loop","loopInterval","exportDataL","exportDataR","exportBuffer","save","state","playingAt","playingAtSlider","timeA","timeB","playSpeed","playPitch","playPitchSemi","playPitchCents","playVolume","startButtonStr","loadFile","loopButtonStr","loopAB","saveButtonStr","exportWav","setState","bind","handleWindowClose","handleSpeedSlider","handlePitchSlider","handleTimeSlider","handleVolumeSlider","handlePlay","handleSaveB","fakeDownload","handleLoop","playAB","handleLang","event","disconnect","off","close","createGain","addEventListener","this","removeEventListener","startBStyle","loopBStyle","saveBStyle","duration","pause","color","stopLoop","abortExport","hrBlue","border","className","title","name","onClick","input","type","accept","onChange","speed","min","max","value","pitch","parseFloat","toFixed","style","time","timeNote","step","Math","round","setA","setB","resetAB","volume","volumeNote","rewind","interval","defaultValue","saveNote","href","target","rel","guide","files","length","totalTime","playOnce","file","reader","FileReader","onload","e","decodeAudioData","result","error","console","log","err","readAsArrayBuffer","tempo","pitchSemi","pow","vol","gain","buffer","createBuffer","source","createBufferSource","connect","destination","start","outFileName","split","parseInt","blob","Blob","toWav","saveAs","saverNode","channels","numberOfChannels","PitchShifter","createJavaScriptNode","createScriptProcessor","sampleRate","Float32Array","index","onaudioprocess","inputBuffer","outputBuffer","channel","inputData","getChannelData","outputData","sample","on","detail","setTime","timePlayed","percentagePlayed","tmp","resume","from","to","offset","partialAudioBuffer","left","right","subarray","oldm","Component","Boolean","location","hostname","ReactDOM","render","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"oNAiBIA,EACAC,E,iIATEC,GAAWC,EAAYC,SAAWD,EAAYE,YAAYC,OAAO,IAEjEC,EAASC,EAASC,GAClBC,EAASF,EAASG,GACpBC,EAAIF,EAERG,OAAOC,aAAeD,OAAOC,cAAgBD,OAAOE,mBAKpD,IAAIC,EAAU,KAEVC,GAAM,GACLC,UAAUC,UAAUC,MAAM,YAC1BF,UAAUC,UAAUC,MAAM,UAC1BF,UAAUC,UAAUC,MAAM,YAC7BH,GAAM,G,IAqqBOI,E,YAhqBb,WAAaC,GAAO,IAAD,8BACjB,4CAAMA,KAEDC,OAAS,CACZC,SAAU,KACVC,YAAa,KACbC,WAAW,EACXC,MAAM,EACNC,aAAc,EACdC,YAAa,KACbC,YAAa,KACbC,aAAc,KACdC,MAAM,GAGR,EAAKC,MAAQ,CACXxB,IAAI,EACJyB,UAAW,EACXC,gBAAiB,EACjBC,MAAO,EACPC,MAAO,EACPC,UAAW,IACXC,UAAW,EACXC,cAAe,EACfC,eAAgB,EAChBC,WAAY,GACZC,eAAgB/B,EAAEgC,SAClBC,cAAejC,EAAEkC,OACjBC,cAAenC,EAAEoC,WAGnB,EAAKC,SAAW,EAAKA,SAASC,KAAd,gBAChB,EAAKC,kBAAoB,EAAKA,kBAAkBD,KAAvB,gBACzB,EAAKN,SAAW,EAAKA,SAASM,KAAd,gBAChB,EAAKE,kBAAoB,EAAKA,kBAAkBF,KAAvB,gBACzB,EAAKG,kBAAoB,EAAKA,kBAAkBH,KAAvB,gBACzB,EAAKI,iBAAmB,EAAKA,iBAAiBJ,KAAtB,gBACxB,EAAKK,mBAAqB,EAAKA,mBAAmBL,KAAxB,gBAC1B,EAAKM,WAAa,EAAKA,WAAWN,KAAhB,gBAClB,EAAKO,YAAc,EAAKA,YAAYP,KAAjB,gBACnB,EAAKQ,aAAe,EAAKA,aAAaR,KAAlB,gBACpB,EAAKS,WAAa,EAAKA,WAAWT,KAAhB,gBAClB,EAAKU,OAAS,EAAKA,OAAOV,KAAZ,gBACd,EAAKW,WAAa,EAAKA,WAAWX,KAAhB,gBA3CD,E,+EA+CDY,GACZ9C,IAAWA,EAAQ+C,aAAc/C,EAAQgD,MAAOhD,EAAU,MAC9DhB,EAASiE,U,0CAITjE,EAAW,IAAIa,OAAOC,aACtBb,EAAWD,EAASkE,aACpBrD,OAAOsD,iBAAiB,gBAAiBC,KAAKjB,qB,6CAI9CtC,OAAOwD,oBAAoB,gBAAiBD,KAAKjB,qB,+BAGzC,IAcJmB,EAMAC,EAMAC,EAzBG5B,EAG0BwB,KAH1BxB,SACAQ,EAE0BgB,KAF1BhB,kBAAmBC,EAEOe,KAFPf,kBAAmBE,EAEZa,KAFYb,mBACtCD,EAC0Bc,KAD1Bd,iBAAkBE,EACQY,KADRZ,WAAYC,EACJW,KADIX,YAC9BE,EAA0BS,KAA1BT,WAAYE,EAAcO,KAAdP,WAJZ,EAQEO,KAAKnC,MAHPxB,EALA,EAKAA,GAAGyB,EALH,EAKGA,UAAWC,EALd,EAKcA,gBAAiBC,EAL/B,EAK+BA,MAAOC,EALtC,EAKsCA,MACtCC,EANA,EAMAA,UAAWC,EANX,EAMWA,UAAWC,EANtB,EAMsBA,cAAeC,EANrC,EAMqCA,eACrCC,EAPA,EAOAA,WAAYC,EAPZ,EAOYA,eAAgBE,EAP5B,EAO4BA,cAAeE,EAP3C,EAO2CA,cAG9C0B,EAAW,EACXL,KAAK7C,OAAOE,cACbgD,EAAWL,KAAK7C,OAAOE,YAAYgD,UAIpCH,EADE3B,IAAmB/B,EAAE8D,MACT,CAACC,MAAO,SAER,GAIdJ,EADE1B,IAAkBjC,EAAEgE,SACT,CAACD,MAAO,SAER,GAIbH,EADEzB,IAAkBnC,EAAEiE,YACT,CAACF,MAAO,SAER,GAEf,IAAIG,EAAS,CAACC,OAAQ,aAAcJ,MAAO,QAE3C,OACE,yBAAKK,UAAU,OACdpE,EAAEqE,MADH,YAEA,0BAAMD,UAAU,gBACf,4BAAQE,KAAK,WAAWC,QAAStB,GAChCpD,EAAK,SAAW,uBAElB,6BANA,MAOIG,EAAEwE,MAPN,KAOc,6BACZ,0BAAMJ,UAAU,cAChB,2BAAOK,KAAK,OAAOH,KAAK,WACxBI,OAAO,UAAUC,SAAU3C,IAAY,8BAEzC,6BAEChC,EAAE4E,MAdH,KAcYlD,EAdZ,IAcuB,6BACrB,0BAAM0C,UAAU,UACf,sCACG,2BAAOK,KAAK,QAAQH,KAAK,cAAcO,IAAI,KAAKC,IAAI,MACvDC,MAASrD,EAAWiD,SAAUnC,IAF9B,QAKH,6BACCxC,EAAEgF,MAtBH,KAsBYC,WAAWtD,GAAWuD,QAAQ,GAtB1C,IAsB8C,6BAC5C,0BAAMd,UAAU,UACf,sCACG,2BAAOK,KAAK,QAAQH,KAAK,kBAAkBO,IAAI,MAAMC,IAAI,KAC5DC,MAASnD,EAAe+C,SAAUlC,IAFlC,KAEyD,6BACzD,wBAAI0C,MAAOjB,IAHX,OAII,2BAAOO,KAAK,QAAQH,KAAK,mBAAmBO,IAAI,OAAOC,IAAI,MAC/DC,MAASlD,EAAgB8C,SAAUlC,IALnC,MAK2D,+BAI9D,6BACGzC,EAAEoF,KAlCL,KAkCa9D,EAAU4D,QAAQ,GAlC/B,SAkC2ClF,EAAEqF,SAAS,6BACpD,0BAAMjB,UAAU,UAChB,oCACC,2BAAOK,KAAK,QAAQH,KAAK,aAC1BO,IAAI,IAAIC,IAAKjB,EACbkB,MAASxD,EAAiB+D,KAAK,IAC/BX,SAAUjC,IACT6C,KAAKC,MAAM3B,GAAU,8BAEtB,4BAAQS,KAAK,OAAOC,QAASxB,GAAc/C,EAAEyF,MAR7C,KASGjE,EAAM0D,QAAQ,GATjB,YAUA,4BAAQZ,KAAK,OAAOC,QAASxB,GAAc/C,EAAE0F,MAV7C,KAWGjE,EAAMyD,QAAQ,GAXjB,YAYA,4BAAQZ,KAAK,QAAQC,QAASxB,GAC7B/C,EAAE2F,UAGH,6BACD3F,EAAE4F,OApDH,KAoDa9D,EApDb,aAoDuC9B,EAAE6F,WAAW,6BAClD,0BAAMzB,UAAU,UACf,oCACC,2BAAOK,KAAK,QAAQH,KAAK,eAAeO,IAAI,IAAIC,IAAI,MACrDC,MAASjD,EAAY6C,SAAUhC,IAF/B,MAEwD,+BAG3D,6BAEA,qCACM,4BAAQ2B,KAAK,aACVC,QAAS3B,EAAYuC,MAAOzB,GAClC3B,GAHH,YAKE,4BAAQuC,KAAK,SAASC,QAASxB,GAC9B/C,EAAE8F,QACH,wBAAIX,MAAOjB,IAPb,OAQM,4BAAQI,KAAK,SACXC,QAASxB,EAAYoC,MAAOxB,GACjC1B,GAVH,YAWGjC,EAAE+F,SAXL,IAWe,0BAAM3B,UAAU,YAC7B,4BAAQE,KAAK,eACV0B,aAAcxC,KAAK7C,OAAOK,aAAc2D,SAAU5B,GACnD,4BAAQgC,MAAM,KAAd,MACA,4BAAQA,MAAM,KAAd,MACA,4BAAQA,MAAM,KAAd,MACA,4BAAQA,MAAM,KAAd,MACA,4BAAQA,MAAM,KAAd,MACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,MAAd,QAGF,6BAzBF,MA0BK,4BAAQT,KAAK,OACZC,QAAS1B,EAAasC,MAAOvB,GAChCzB,GA5BH,SA6BoBnC,EAAEiG,UAEtB,6BACGjG,EAAEV,QA7FL,KA6FgBA,EA7FhB,SA8FE,uBAAG4G,KAAMlG,EAAER,SACV2G,OAAO,SAASC,IAAI,uBAAuBpG,EAAEqG,OAC9C,6BAhGF,YAiGW,uBAAGH,KAAK,2CAChBC,OAAO,SAASC,IAAI,uBADZ,4B,+BAULlD,GAET,GAA0B,aAAtBA,EAAMiD,OAAO7B,MACiB,IAA9BpB,EAAMiD,OAAOG,MAAMC,SACnB/C,KAAK7C,OAAOG,UAAhB,CAEA0C,KAAKnB,SAAS,CAACmE,UAAW,IAC1BhD,KAAKnB,SAAS,CAACN,eAAgB/B,EAAEyG,WACjC,IAAIC,EAAOxD,EAAMiD,OAAOG,MAAM,GAC9B9C,KAAK7C,OAAOC,SAAW8F,EAAKpC,KAE5B,IAAIqC,EAAS,IAAIC,WAEjBD,EAAOE,OAAS,SAAUC,GAEvB1H,EAAS2H,gBAAgBJ,EAAOK,OAC9B,SAASnG,GACP2C,KAAK7C,OAAOE,YAAcA,EAC1B2C,KAAKnB,SAAS,CAACN,eAAgB/B,EAAEyG,SAC9BnF,UAAW,EAAGC,gBAAiB,IAClCiC,KAAKnB,SAAS,CAACb,MAAO,IACtBgC,KAAKnB,SAAS,CAACZ,MAAOZ,EAAYgD,YAClCvB,KAAKkB,OACP,SAAUyD,GAASC,QAAQC,IAAK,qBAAuBF,EAAMG,SAEhE9E,KAAKkB,MAEPmD,EAAOU,kBAAkBX,M,wCAKRxD,GAEW,gBAAtBA,EAAMiD,OAAO7B,OAGblE,IAASA,EAAQkH,MAAQpE,EAAMiD,OAAOpB,MAAM,KAChDvB,KAAKnB,SAAS,CAACX,UAAWwB,EAAMiD,OAAOpB,W,wCAGxB7B,GAIf,IAAIqE,EAEsB,oBAAtBrE,EAAMiD,OAAO7B,MACfiD,EAAYtC,WAAW/B,EAAMiD,OAAOpB,OAC9BE,WAAWzB,KAAKnC,MAAMQ,gBAAgB,IAC5C2B,KAAKnB,SAAS,CAACT,cAAesB,EAAMiD,OAAOpB,SAEX,qBAAtB7B,EAAMiD,OAAO7B,OAEvBiD,EAAYtC,WAAWzB,KAAKnC,MAAMO,eAC5BqD,WAAW/B,EAAMiD,OAAOpB,OAAO,IACrCvB,KAAKnB,SAAS,CAACR,eAAgBqB,EAAMiD,OAAOpB,SAG1C3E,IAAUA,EAAQ4E,MAAQO,KAAKiC,IAAI,EAAKD,EAAU,KAEtD/D,KAAKnB,SAAS,CAACV,UAAW4F,M,uCAIZrE,GAKd,GAA0B,eAAtBA,EAAMiD,OAAO7B,MAEbd,KAAKnC,MAAMU,iBAAmB/B,EAAEyG,SAAU,CAC3C,IAAI1B,EAAQ7B,EAAMiD,OAAOpB,MACzBvB,KAAKnB,SAAS,CAACf,UAAW2D,WAAWF,KACrCvB,KAAKnB,SAAS,CAACd,gBAAiBwD,O,yCAInB7B,GAChB,GAA0B,iBAAtBA,EAAMiD,OAAO7B,KAAjB,CAGA,IAAImD,EAAyB,EAAnBvE,EAAMiD,OAAOpB,MACvB1F,EAASqI,KAAK3C,MAAQ0C,EAAI,IAC1BjE,KAAKnB,SAAS,CAACP,WAAY2F,O,iCAGnBvE,GAAQ,IACTrC,EAAe2C,KAAK7C,OAApBE,YAGT,GAAIR,EAAI,CACN,IAAIsH,EAASvI,EAASwI,aAAa,EAAE,EAAE,OACnCC,EAASzI,EAAS0I,qBACtBD,EAAOF,OAASA,EAChBE,EAAOE,QAAS3I,EAAS4I,aACzBH,EAAOI,QAKT,GAA0B,eAAtB/E,EAAMiD,OAAO7B,KAAuB,CAEtC,IAAI9C,EAAOC,EAGX,GAAI+B,KAAKnC,MAAMU,iBAAmB/B,EAAE8D,MAAM,CACxC,IAAKN,KAAK7C,OAAOG,UAAW,OAC5B,GAAgB,OAAZV,EAAkB,OAOtB,OALAA,EAAQ+C,aAAc/C,EAAQgD,MAAOhD,EAAU,KAC/CoD,KAAK7C,OAAOG,WAAY,EACxB0C,KAAKnB,SAAS,CAACd,gBAAiBiC,KAAKnC,MAAMC,iBAC3CkC,KAAKnB,SAAS,CAACN,eAAgB/B,EAAEyG,WAMnC,GAA0B,eAAtBvD,EAAMiD,OAAO7B,MACZd,KAAKnC,MAAMU,iBAAmB/B,EAAEyG,SAAU,CAC7C,GAAIjD,KAAK7C,OAAOG,UAAW,OAE3BU,EAAQgC,KAAKnC,MAAMC,UACnBG,EAAQZ,EAAYgD,SAMtBL,KAAKR,OAAOxB,EAAOC,M,mCAOTZ,GAGX,IACIqH,EADU1E,KAAK7C,OAAOC,SAASuH,MAAM,KAE9B,GACN,KAAOC,SAAS5E,KAAKnC,MAAMK,WAC3B,KAAO0G,SAA8B,IAArB5E,KAAKnC,MAAMM,WAC3B,OACD0G,EAAO,IAAIC,KAAK,CAACC,EAAM1H,IAAe,CAAC4D,KAAM,kBACjD+D,iBAAOH,EAAKH,K,kCAKFhF,GAAQ,IAAD,OAEjB,GAA0B,SAAtBA,EAAMiD,OAAO7B,KAAjB,CAFiB,IAIVzD,EAAe2C,KAAK7C,OAApBE,YAIP,GAAI2C,KAAKnC,MAAMc,gBAAkBnC,EAAEiE,YAKjC,OAJA7D,EAAQ+C,aAAc/C,EAAQgD,MAAOhD,EAAU,KAC/CoD,KAAK7C,OAAOG,WAAY,OACxB0C,KAAKnB,SAAS,CAACF,cAAenC,EAAEoC,YAKlC,GAAIoB,KAAKnC,MAAMc,gBAAkBnC,EAAEoC,YAI/BoB,KAAK7C,OAAOG,WACXD,EAAL,CAICzB,EAASiE,QACTjE,EAAW,IAAIa,OAAOC,aACtBb,EAAWD,EAASkE,aACpB,IAAIqE,EAASvI,EAASwI,aAAa,EAAE,EAAE,OACnCC,EAASzI,EAAS0I,qBACtBD,EAAOF,OAASA,EAChBE,EAAOE,QAAS3I,EAAS4I,aACzBH,EAAOI,QAOR,IAAIQ,EAAY,KAEZC,EAAW7H,EAAY8H,iBAQ3B,GANIvI,IAAWA,EAAQ+C,aAAc/C,EAAQgD,MAAOhD,EAAS,OAE7DA,EAAU,IAAIwI,IAAaxJ,EAAUyB,EALpB,OAMTyG,MAAQ9D,KAAKnC,MAAMK,UAAU,IACrCtB,EAAQ4E,MAAQO,KAAKiC,IAAI,EAAIhE,KAAKnC,MAAMM,UAAU,IAE9CvC,EAASyJ,qBACXJ,EAAYrJ,EAASyJ,qBAVN,KAUsCH,EAASA,OACzD,KAAItJ,EAAS0J,sBAIlB,YADA5B,QAAQC,IAAK,iCAFbsB,EAAYrJ,EAAS0J,sBAZN,KAYuCJ,EAASA,GAOjElF,KAAK7C,OAAOQ,aAAe/B,EAASwI,aAClCc,EACAN,SAASvH,EAAY0F,QAAQ,IAAI/C,KAAKnC,MAAMK,YAC5Cb,EAAYkI,YACdvF,KAAK7C,OAAOM,YAAc,IAAI+H,aAAaxF,KAAK7C,OAAOQ,aAAaoF,QACpE/C,KAAK7C,OAAOO,YAAc,IAAI8H,aAAaxF,KAAK7C,OAAOQ,aAAaoF,QAEpE/C,KAAK7C,OAAOS,MAAO,EAGnB,IAAI6H,EAAQ,EACZR,EAAUS,eAAiB,SAAShG,GAIlC,IAHA,IAAIiG,EAAcjG,EAAMiG,YACpBC,EAAelG,EAAMkG,aAEhBC,EAAU,EAAGA,EAAUF,EAAYR,iBAAkBU,IAI5D,IAHC,IAAIC,EAAYH,EAAYI,eAAeF,GACvCG,EAAaJ,EAAaG,eAAeF,GAErCI,EAAS,EAAGA,EAASN,EAAY5C,OAAQkD,IAChDD,EAAWC,GAAUH,EAAUG,GACf,IAAZJ,EACD7F,KAAK7C,OAAOM,YAAYgI,EAAQQ,GAAUH,EAAUG,GAEpDjG,KAAK7C,OAAOO,YAAY+H,EAAQQ,GAAUH,EAAUG,GAI3DR,GAASE,EAAY5C,QAErBjE,KAAKkB,MAEPnE,EAASqI,KAAK3C,MAAQ,GACtBvB,KAAKb,mBAAmB,CAACwD,OAAQ,CAAC7B,KAAM,eAAgBS,MAAO,MAE/D3E,EAAQsJ,GAAG,QAAQ,SAAAC,GACjB,IAAIC,EAAU3E,WAAW0E,EAAOE,YAIhC,GAHA,EAAKxH,SAAS,CAACf,UAAWsI,IACrBvJ,GAAK,EAAKgC,SAAS,CAACd,gBAAiBqI,IAEtCD,EAAOG,kBAAoB,GAAI,CACjC1J,EAAQ+C,aAAc/C,EAAQgD,MAAOhD,EAAU,KAG9C,IADA,IAAI2J,EAAM,EAAKpJ,OAAOQ,aAAaoI,eAAe,GACzCE,EAAO,EAAGA,EAAS,EAAK9I,OAAOM,YAAYsF,OAAQkD,IAC1DM,EAAIN,GAAU,EAAK9I,OAAOM,YAAYwI,GACxC,GAAI,EAAK9I,OAAOQ,aAAawH,kBAAoB,EAAG,CAClDoB,EAAM,EAAKpJ,OAAOQ,aAAaoI,eAAe,GAC9C,IAAK,IAAIE,EAAO,EAAGA,EAAS,EAAK9I,OAAOO,YAAYqF,OAClDkD,IAAUM,EAAIN,GAAU,EAAK9I,OAAOO,YAAYuI,GAQtD,OALA,EAAK3G,aAAa,EAAKnC,OAAOQ,cAC9B,EAAKR,OAAOG,WAAY,EACxB,EAAKuB,SAAS,CAACF,cAAenC,EAAEoC,iBAChC,EAAKzB,OAAOS,MAAO,OAMtBoC,KAAK7C,OAAOG,WAAY,EACxBV,EAAQ2H,QAAQU,GAChBA,EAAUV,QAAQ1I,GAClBA,EAAS0I,QAAQ3I,EAAS4I,aAC1B5I,EAAS4K,SAETxG,KAAKnB,SAAS,CAACF,cAAenC,EAAEiE,kB,iCAMvBf,GAET,GAA0B,iBAAtBA,EAAMiD,OAAO7B,KAAjB,CAMA,GAA0B,WAAtBpB,EAAMiD,OAAO7B,KAAmB,CAClC,GAAId,KAAK7C,OAAOG,UAAW,OAK3B,OAHA0C,KAAKnB,SAAU,CAACf,UAAW,SAC3BkC,KAAKnB,SAAU,CAACd,gBAAiB,IAKnC,GAA0B,SAAtB2B,EAAMiD,OAAO7B,KAGf,OAFAd,KAAKnB,SAAU,CAACb,MAAOgC,KAAKnC,MAAMC,iBAClCkC,KAAKnB,SAAU,CAACd,gBAAiBiC,KAAKnC,MAAMC,YAI9C,GAA0B,SAAtB4B,EAAMiD,OAAO7B,KAQjB,GAA0B,WAAtBpB,EAAMiD,OAAO7B,KA0BjB,GAA0B,UAAtBpB,EAAMiD,OAAO7B,UAAjB,CACE,GAAgC,OAA5Bd,KAAK7C,OAAOE,YAAsB,OACtC2C,KAAKnB,SAAU,CAACb,MAAO,EACPC,MAAO+B,KAAK7C,OAAOE,YAAYgD,SAC/BtC,gBAAiB,QA9BnC,CACE,IAAKiC,KAAK7C,OAAOE,YAAa,OAE9B,GAAI2C,KAAKnC,MAAMY,gBAAkBjC,EAAEkC,OAAO,CACxC,GAAIsB,KAAK7C,OAAOG,UAAW,OAC3B0C,KAAK7C,OAAOI,MAAO,EACnByC,KAAKR,OAAOQ,KAAKnC,MAAMG,MAAOgC,KAAKnC,MAAMI,OACzC+B,KAAKnB,SAAU,CAACJ,cAAejC,EAAEgE,WACjCR,KAAKnB,SAAU,CAACN,eAAgB/B,EAAEyG,gBAC7B,GAAIjD,KAAKnC,MAAMY,gBAAkBjC,EAAEgE,SAAS,CAEjD,IAAKR,KAAK7C,OAAOG,UAAW,OAEzBV,IACDA,EAAQ+C,aAAc/C,EAAQgD,MAAOhD,EAAU,MAGjDoD,KAAK7C,OAAOG,WAAY,EACxB0C,KAAK7C,OAAOI,MAAO,EACnByC,KAAKnB,SAAU,CAACJ,cAAejC,EAAEkC,eA1B/BsB,KAAKnC,MAAMC,WAAckC,KAAKnC,MAAMG,MACtCgC,KAAKnB,SAAU,CAACZ,MAAOwD,WAAWzB,KAAKnC,MAAMC,aAE7CkC,KAAKnB,SAAU,CAACZ,MAAOwD,WAAWzB,KAAKnC,MAAMG,OAASyD,WAAW,WAxBnEzB,KAAK7C,OAAOK,aAAeoH,SAASlF,EAAMiD,OAAOpB,MAAM,M,6BAiEpDvD,EAAOC,GAAQ,IAAD,OAElB,IAAI+B,KAAK7C,OAAOG,WACgB,OAA5B0C,KAAK7C,OAAOE,YAAhB,CAEIY,GAASD,IACVC,EAAQD,EAAQ,EAChBgC,KAAKnB,SAAS,CAACZ,MAAOA,KAPP,MAUkB+B,KAAK7C,OAAlCE,EAVW,EAUXA,YAAaG,EAVF,EAUEA,aAEdiJ,EAAOzI,EAAMX,EAAYkI,WACzBmB,EAAKzI,EAAMZ,EAAYkI,WACzBoB,EAAS,EACT3G,KAAK7C,OAAOI,OACdoJ,EAASnJ,EAAaH,EAAYkI,YAEpC,IAAIqB,EAAqBhL,EAASwI,aAAa,EAC1CsC,EAAKD,EAAOE,EAAQtJ,EAAYkI,YACjCsB,EAAQxJ,EAAY0I,eAAe,GACnCe,EAAQzJ,EAAY0I,eAAe,GAEvCc,EAAQA,EAAKE,SAASN,EAAMC,GAG5B,IAFA,IAAIH,EAAMK,EAAmBb,eAAe,GAEnCE,EAAO,EAAGA,EAASY,EAAK9D,OAAQkD,IACtCM,EAAIN,EAASU,GAAUE,EAAKZ,GAE/B,GAAI5I,EAAY8H,kBAAoB,EAAG,CACrCoB,EAAMK,EAAmBb,eAAe,GACxCe,EAAQA,EAAMC,SAASN,EAAMC,GAE7B,IAAK,IAAIT,EAAO,EAAGA,EAASa,EAAM/D,OAAQkD,IACxCM,EAAIN,EAASU,GAAUG,EAAMb,GAI7BrJ,IAAWA,EAAQ+C,aAAc/C,EAAQgD,MAAOhD,EAAS,OAC7DA,EAAU,IAAIwI,IAAaxJ,EAAUgL,EAAoB,OACjD9C,MAAQ9D,KAAKnC,MAAMK,UAAU,IACrCtB,EAAQ4E,MAAQO,KAAKiC,IAAI,EAAIhE,KAAKnC,MAAMM,UAAU,IAElDvB,EAAQsJ,GAAG,QAAQ,SAAAC,GAEjB,IAAIC,EAAW3E,WAAWzD,GAASyD,WAAW0E,EAAOE,YAOrD,GANI,EAAKlJ,OAAOI,OAAM6I,GAAW5I,GAEjC,EAAKqB,SAAS,CAACf,UAAWsI,IAE1B,EAAKvH,SAAS,CAACd,gBAAiBqI,IAE5BD,EAAOG,kBAAoB,IAY7B,OAVA1J,EAAQ+C,aAAc/C,EAAQgD,MAAOhD,EAAU,KAC/C,EAAKO,OAAOG,WAAY,EAEpB,EAAKO,MAAMU,iBAAmB/B,EAAE8D,OAClC,EAAKzB,SAAS,CAACN,eAAgB/B,EAAEyG,gBAG/B,EAAK9F,OAAOI,MACd,EAAKiC,OAAO,EAAK3B,MAAMG,MAAO,EAAKH,MAAMI,WAOhDrB,EAAQ2H,QAAQ1I,GAChBA,EAAS0I,QAAQ3I,EAAS4I,aAC1B5I,EAAS4K,SAETxG,KAAK7C,OAAOG,WAAY,EACnB0C,KAAK7C,OAAOI,MACfyC,KAAKnB,SAAS,CAACN,eAAgB/B,EAAE8D,W,iCAK1BgD,GAET,IAAItD,KAAK7C,OAAOG,WAEM,aAAlBgG,EAAEX,OAAO7B,KAAoB,CAC/B,IAAIkG,EAAOxK,EAuBZ,OAtBKwD,KAAKnC,MAAMxB,IACbG,EAAIF,EAAQ0D,KAAKnB,SAAS,CAACxC,IAAI,MAE/BG,EAAIL,EAAQ6D,KAAKnB,SAAS,CAACxC,IAAI,KAE7B2D,KAAKnC,MAAMU,iBAAmByI,EAAKxI,SACrCwB,KAAKnB,SAAS,CAACN,eAAgB/B,EAAEgC,WAC1BwB,KAAKnC,MAAMU,iBAAmByI,EAAK/D,SAC1CjD,KAAKnB,SAAS,CAACN,eAAgB/B,EAAEyG,WAC1BjD,KAAKnC,MAAMU,iBAAmByI,EAAK1G,OAC1CN,KAAKnB,SAAS,CAACN,eAAgB/B,EAAE8D,QAE/BN,KAAKnC,MAAMY,gBAAkBuI,EAAKtI,OACpCsB,KAAKnB,SAAS,CAACJ,cAAejC,EAAEkC,SACzBsB,KAAKnC,MAAMY,gBAAkBuI,EAAKxG,UACzCR,KAAKnB,SAAS,CAACJ,cAAejC,EAAEgE,gBAE9BR,KAAKnC,MAAMc,gBAAkBqI,EAAKpI,UACpCoB,KAAKnB,SAAS,CAACF,cAAenC,EAAEoC,YACzBoB,KAAKnC,MAAMc,gBAAkBqI,EAAKvG,aACzCT,KAAKnB,SAAS,CAACF,cAAenC,EAAEiE,oB,GAzpBtBwG,aCjBEC,QACW,cAA7BzK,OAAO0K,SAASC,UAEe,UAA7B3K,OAAO0K,SAASC,UAEhB3K,OAAO0K,SAASC,SAASpK,MACvB,2DCZNqK,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmB1K,WACrBA,UAAU2K,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.166b19b7.chunk.js","sourcesContent":["import React, { Component } from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport {PitchShifter} from 'soundtouchjs'\nimport packageJSON from '../package.json'\nimport {saveAs} from 'file-saver';\nimport * as toWav from 'audiobuffer-to-wav';\nimport messages from './language.json';\n\nconst version = (packageJSON.homepage + packageJSON.subversion).slice(-11)\n// var homepage = 'https://goto920.github.io/demos/variableplayer/'\nconst jaText = messages.ja;\nconst usText = messages.us;\nvar m = usText;\n\nwindow.AudioContext = window.AudioContext || window.webkitAudioContext\n\nvar audioCtx;\nvar gainNode;\n// =  audioCtx.createGain()\nvar shifter = null // null\n\nvar iOS = false;\nif(  navigator.userAgent.match(/iPhone/i) \n  || navigator.userAgent.match(/iPod/i)\n  || navigator.userAgent.match(/iPad/i)){\n  iOS = true;\n}\n\nclass App extends Component {\n\n  constructor (props){\n    super(props)\n\n    this.params = {\n      filename: null,\n      audioBuffer: null,\n      isPlaying: false,\n      loop: false,\n      loopInterval: 2.0,\n      exportDataL: null,\n      exportDataR: null,\n      exportBuffer: null,\n      save: false\n    }\n\n    this.state = {\n      ja: false,\n      playingAt: 0,\n      playingAtSlider: 0,\n      timeA: 0,\n      timeB: 0,\n      playSpeed: 100, // in percent\n      playPitch: 0, // in semi-tone unit (real value)\n      playPitchSemi: 0, // in semi-tone (integer part)\n      playPitchCents: 0, // percent for one semitone\n      playVolume: 80, // in percent\n      startButtonStr: m.loadFile, \n      loopButtonStr: m.loopAB,\n      saveButtonStr: m.exportWav\n    }\n\n    this.setState = this.setState.bind(this)\n    this.handleWindowClose = this.handleWindowClose.bind(this)\n    this.loadFile = this.loadFile.bind(this)\n    this.handleSpeedSlider = this.handleSpeedSlider.bind(this)\n    this.handlePitchSlider = this.handlePitchSlider.bind(this)\n    this.handleTimeSlider = this.handleTimeSlider.bind(this)\n    this.handleVolumeSlider = this.handleVolumeSlider.bind(this)\n    this.handlePlay = this.handlePlay.bind(this);\n    this.handleSaveB = this.handleSaveB.bind(this);\n    this.fakeDownload = this.fakeDownload.bind(this);\n    this.handleLoop = this.handleLoop.bind(this);\n    this.playAB = this.playAB.bind(this);\n    this.handleLang = this.handleLang.bind(this);\n    \n  } // end constructor\n\n  handleWindowClose(event) { \n    if (shifter) { shifter.disconnect(); shifter.off(); shifter = null; }\n    audioCtx.close();\n  }\n\n  componentDidMount () { // after render()\n    audioCtx = new window.AudioContext()\n    gainNode = audioCtx.createGain()\n    window.addEventListener('beforeClosing', this.handleWindowClose)\n  }\n\n  componentWillUnmount () { // before closing app\n    window.removeEventListener('beforeClosing', this.handleWindowClose)\n  }\n\n  render() {\n    const {loadFile, \n           handleSpeedSlider, handlePitchSlider, handleVolumeSlider, \n           handleTimeSlider, handlePlay, handleSaveB, \n           handleLoop, handleLang} = this;\n    const {ja,playingAt, playingAtSlider, timeA, timeB,\n           playSpeed, playPitch, playPitchSemi, playPitchCents,\n           playVolume, startButtonStr, loopButtonStr, saveButtonStr} \n           = this.state\n\n    let duration = 0;\n    if (this.params.audioBuffer)\n       duration = this.params.audioBuffer.duration\n\n    let startBStyle; \n    if (startButtonStr === m.pause)\n      startBStyle = {color: 'green'};\n    else  \n      startBStyle = {};\n\n    let loopBStyle; \n    if (loopButtonStr === m.stopLoop)\n      loopBStyle = {color: 'green'};\n    else  \n      loopBStyle = {};\n\n    let saveBStyle; \n    if (saveButtonStr === m.abortExport)\n      saveBStyle = {color: 'green'};\n    else  \n      saveBStyle = {};\n\n    let hrBlue = {border: '1px dotted', color: 'blue'};\n\n    return (\n      <div className=\"App\">\n      {m.title} &nbsp;&nbsp;\n      <span className='small-button'>\n       <button name='language' onClick={handleLang}>\n       {ja ? 'En(US)' : '日本語'}</button> \n      </span>\n      <hr />\n      1) {m.input}: <br />\n        <span className='selectFile'>\n        <input type='file' name='loadFile' \n        accept='audio/*' onChange={loadFile} /><br />\n        </span>\n      <hr />\n\n      {m.speed}: {playSpeed} <br />\n        <span className='slider'> \n         <center>\n         025<input type='range' name='speedSlider' min='25' max='200'\n         value = {playSpeed} onChange={handleSpeedSlider} />200 \n         </center>\n        </span>\n      <hr />\n      {m.pitch}: {parseFloat(playPitch).toFixed(2)} <br />\n        <span className='slider'> \n         <center>\n         -12<input type='range' name='pitchSliderSemi' min='-12' max='12'\n         value = {playPitchSemi} onChange={handlePitchSlider} />12<br />\n         <hr style={hrBlue}/>\n         -100<input type='range' name='pitchSliderCents' min='-100' max='100'\n         value = {playPitchCents} onChange={handlePitchSlider} />100<br />\n         </center>\n\n        </span>\n      <hr />\n        {m.time}: {playingAt.toFixed(2)} &nbsp; {m.timeNote}<br />\n        <span className='slider'> \n        <center>\n        0<input type='range' name='timeSlider'\n        min='0' max={duration}\n        value = {playingAtSlider} step='1'\n        onChange={handleTimeSlider} />\n        {Math.round(duration)}<br />\n        </center>\n        <button name='setA' onClick={handleLoop} >{m.setA}</button>\n        : {timeA.toFixed(2)} &nbsp;&nbsp;\n        <button name='setB' onClick={handleLoop} >{m.setB}</button>\n        : {timeB.toFixed(2)} &nbsp;&nbsp;\n        <button name='reset' onClick={handleLoop}> \n        {m.resetAB}\n        </button>\n        </span>\n        <hr />\n      {m.volume}: {playVolume} &nbsp;&nbsp; {m.volumeNote}<br />\n        <span className='slider'> \n         <center>\n         0<input type='range' name='volumeSlider' min='0' max='150'\n         value = {playVolume} onChange={handleVolumeSlider} />150<br />\n         </center>\n        </span>\n      <hr />\n\n      <span>\n        2A) <button name='startPause' \n               onClick={handlePlay} style={startBStyle}> \n        {startButtonStr}\n        </button> &nbsp;&nbsp;\n        <button name='Rewind' onClick={handleLoop}>\n        {m.rewind}</button>\n        <hr style={hrBlue}/>\n        2B) <button name='LoopAB' \n              onClick={handleLoop} style={loopBStyle}>\n        {loopButtonStr}</button> &nbsp;&nbsp;\n        {m.interval} <span className='selector'>\n        <select name='loopInterval'\n           defaultValue={this.params.loopInterval} onChange={handleLoop}>\n          <option value='0'>00</option>\n          <option value='1'>01</option>\n          <option value='2'>02</option>\n          <option value='4'>04</option>\n          <option value='5'>05</option>\n          <option value='10'>10</option>\n          <option value='20'>20</option>\n          <option value='30'>30</option>\n          <option value='60'>60</option>\n        </select>\n        </span>\n        <hr />\n        3) <button name='save' \n            onClick={handleSaveB} style={saveBStyle}> \n        {saveButtonStr}\n        </button> &nbsp; {m.saveNote}\n      </span>\n      <hr />\n        {m.version}: {version}, &nbsp;\n        <a href={m.homepage} \n         target=\"_blank\" rel=\"noopener noreferrer\">{m.guide}</a>\n        <br />\n        Based on <a href=\"https://github.com/cutterbl/SoundTouchJS\"\n         target=\"_blank\" rel=\"noopener noreferrer\">\n        cutterbl/SoundTouchJS</a>\n      </div>\n    ) // end return\n\n  } // end render()\n\n///////////////////////////////////////////////////\n\n  loadFile (event) {\n\n   if (event.target.name !== 'loadFile') return;\n   if (event.target.files.length === 0) return;\n   if (this.params.isPlaying) return;\n\n   this.setState({totalTime: 0})\n   this.setState({startButtonStr: m.playOnce})\n   let file = event.target.files[0]\n   this.params.filename = file.name;\n\n   let reader = new FileReader()\n\n   reader.onload = function (e) {\n\n      audioCtx.decodeAudioData(reader.result, \n        function(audioBuffer) {\n          this.params.audioBuffer = audioBuffer\n          this.setState({startButtonStr: m.playOnce, \n             playingAt: 0, playingAtSlider: 0})\n          this.setState({timeA: 0})\n          this.setState({timeB: audioBuffer.duration})\n        }.bind(this),\n        function (error) { console.log (\"Filereader error: \" + error.err) })\n\n   }.bind(this)\n\n   reader.readAsArrayBuffer(file)\n\n } // end loadFile()\n\n// UI handlers\n  handleSpeedSlider(event) { \n     // console.log('handleSpeedSlider');\n     if (event.target.name !== 'speedSlider') return;\n     // if (iOS && this.params.isPlaying) return;\n\n     if (shifter) shifter.tempo = event.target.value/100.0\n     this.setState({playSpeed: event.target.value})\n  }\n\n  handlePitchSlider(event) { \n     // console.log('handlePitchSlider');\n     // if (iOS && this.params.isPlaying) return;\n\n     let pitchSemi;\n\n     if (event.target.name === 'pitchSliderSemi' ){\n       pitchSemi = parseFloat(event.target.value) \n           + parseFloat(this.state.playPitchCents)/100.0;\n       this.setState({playPitchSemi: event.target.value})\n\n     } else  if (event.target.name === 'pitchSliderCents' ){\n\n       pitchSemi = parseFloat(this.state.playPitchSemi)\n           + parseFloat(event.target.value)/100.0\n       this.setState({playPitchCents: event.target.value})\n     }\n\n     if (shifter) {shifter.pitch = Math.pow(2.0, pitchSemi/12.0);}\n\n     this.setState({playPitch: pitchSemi});\n\n  }\n\n  handleTimeSlider(event) { \n\n     // console.log('handleTimeSlider');\n     // if (iOS && this.params.isPlaying) return;\n\n     if (event.target.name !== 'timeSlider') return\n\n     if (this.state.startButtonStr === m.playOnce) {\n        let value = event.target.value;\n        this.setState({playingAt: parseFloat(value)});\n        this.setState({playingAtSlider: value});\n     }\n  }\n\n  handleVolumeSlider(event) { \n     if (event.target.name !== 'volumeSlider') return\n     // if (iOS && this.params.isPlaying) return;\n\n     let vol = event.target.value*1.0\n     gainNode.gain.value = vol/100.0\n     this.setState({playVolume: vol})\n  }\n\n  handlePlay(event) { \n     const {audioBuffer} = this.params;\n\n// Unlock iOS \n   if (iOS){\n     let buffer = audioCtx.createBuffer(1,1,44100); \n     let source = audioCtx.createBufferSource();\n     source.buffer = buffer;\n     source.connect (audioCtx.destination);\n     source.start();\n   }\n// End unlock\n\n// startPause or LoopAB\n   if (event.target.name === 'startPause') { \n\n     let timeA, timeB; \n\n// Pause\n     if (this.state.startButtonStr === m.pause){\n       if (!this.params.isPlaying) return;\n       if (shifter === null) return\n\n       shifter.disconnect(); shifter.off(); shifter = null;\n       this.params.isPlaying = false;\n       this.setState({playingAtSlider: this.state.playingAt});\n       this.setState({startButtonStr: m.playOnce})\n\n       return;\n     } // end pause \n\n// Normal Play (set time)\n     if (event.target.name === 'startPause' \n       && this.state.startButtonStr === m.playOnce) {\n       if (this.params.isPlaying) return;\n\n       timeA = this.state.playingAt;\n       timeB = audioBuffer.duration;\n       // console.log('Play','timeA, timeB', timeA, timeB);\n     }\n\n\n// Play Data\n     this.playAB(timeA, timeB); // timeA, timeB\n\n   } // END  if (event.target.name)\n\n    return;\n  } // end handlePlay()\n\n  fakeDownload(audioBuffer){\n    // console.log('fakeDownload');\n\n    const words = this.params.filename.split('.');\n    let outFileName = \n         words[0]\n       + '&s' + parseInt(this.state.playSpeed)\n       + '&p' + parseInt(this.state.playPitch*100)\n       + '.wav';\n    let blob = new Blob([toWav(audioBuffer)], {type: 'audio/vnd.wav'});\n    saveAs(blob,outFileName);\n\n    // console.log('fakeDownLoad end', outFileName);\n  }\n\n  handleSaveB(event) { \n    // console.log ('handleSaveB');\n    if (event.target.name !== 'save') return;\n\n    const {audioBuffer} = this.params;\n\n\n\n    if (this.state.saveButtonStr === m.abortExport) {\n      shifter.disconnect(); shifter.off(); shifter = null;\n      this.params.isPlaying = false;\n      this.setState({saveButtonStr: m.exportWav});\n      // console.log ('handleSaveB: AbortExport');\n      return;\n    }\n\n    if (this.state.saveButtonStr !== m.exportWav) return;\n\n    // console.log ('handleSaveB: ExportWav', 'playing', this.params.isPlaying);\n\n    if (this.params.isPlaying) return;\n    if (!audioBuffer) return;\n\n// Unlock iOS \n//   if (iOS){\n     audioCtx.close();\n     audioCtx = new window.AudioContext();\n     gainNode = audioCtx.createGain();\n     let buffer = audioCtx.createBuffer(1,1,44100); \n     let source = audioCtx.createBufferSource();\n     source.buffer = buffer;\n     source.connect (audioCtx.destination);\n     source.start();\n//   }\n// End unlock\n\n// https://www.gmass.co/blog/record-audio-mobile-web-page-ios-android/\n// https://developer.mozilla.org/en-US/docs/Web/API/ScriptProcessorNode/onaudioprocess\n\n    let saverNode = null;\n    let bufferSize = 4096;\n    let channels = audioBuffer.numberOfChannels;\n\n    if (shifter) { shifter.disconnect(); shifter.off(); shifter= null;}\n\n    shifter = new PitchShifter(audioCtx, audioBuffer, bufferSize);\n    shifter.tempo = this.state.playSpeed/100.0;\n    shifter.pitch = Math.pow(2.0,this.state.playPitch/12.0);\n\n    if (audioCtx.createJavaScriptNode) {\n      saverNode = audioCtx.createJavaScriptNode(bufferSize,channels,channels);\n    } else if (audioCtx.createScriptProcessor) {\n      saverNode = audioCtx.createScriptProcessor(bufferSize,channels,channels);\n    } else {\n      console.log ('createScript is not supported');\n      return;\n    }\n\n/* Storage */\n    this.params.exportBuffer = audioCtx.createBuffer( \n      channels, \n      parseInt(audioBuffer.length*(100/this.state.playSpeed)), \n      audioBuffer.sampleRate);\n    this.params.exportDataL = new Float32Array(this.params.exportBuffer.length);\n    this.params.exportDataR = new Float32Array(this.params.exportBuffer.length);\n\n    this.params.save = true;\n\n/* Script Processor */\n    let index = 0;\n    saverNode.onaudioprocess = function(event){\n      let inputBuffer = event.inputBuffer;\n      let outputBuffer = event.outputBuffer;\n\n      for (let channel = 0; channel < inputBuffer.numberOfChannels; channel++){\n         let inputData = inputBuffer.getChannelData(channel);\n         let outputData = outputBuffer.getChannelData(channel);\n\n        for (let sample = 0; sample < inputBuffer.length; sample++) {\n          outputData[sample] = inputData[sample];\n          if (channel === 0) \n             this.params.exportDataL[index + sample] = inputData[sample];\n          else \n             this.params.exportDataR[index + sample] = inputData[sample];\n        }\n      }\n\n      index += inputBuffer.length;\n\n    }.bind(this);\n\n    gainNode.gain.value = 0.2;\n    this.handleVolumeSlider({target: {name: 'volumeSlider', value: 20}});\n\n    shifter.on('play', detail => {\n      let setTime = parseFloat(detail.timePlayed);\n      this.setState({playingAt: setTime}); \n      if (!iOS) this.setState({playingAtSlider: setTime}); \n\n      if (detail.percentagePlayed >= 90) {\n        shifter.disconnect(); shifter.off(); shifter = null;\n\n         let tmp = this.params.exportBuffer.getChannelData(0);\n         for (let sample=0; sample < this.params.exportDataL.length; sample++) \n           tmp[sample] = this.params.exportDataL[sample];\n         if (this.params.exportBuffer.numberOfChannels >= 2) {\n           tmp = this.params.exportBuffer.getChannelData(1);\n           for (let sample=0; sample < this.params.exportDataR.length; \n             sample++) tmp[sample] = this.params.exportDataR[sample];\n         }\n\n       this.fakeDownload(this.params.exportBuffer);\n       this.params.isPlaying = false;\n       this.setState({saveButtonStr: m.exportWav});\n       this.params.save = false;\n\n       return;\n     } // end 100%\n  }); // end shifter.on()\n\n    this.params.isPlaying = true;\n    shifter.connect(saverNode);\n    saverNode.connect(gainNode);\n    gainNode.connect(audioCtx.destination);\n    audioCtx.resume();\n\n    this.setState({saveButtonStr: m.abortExport});\n    // console.log ('handleSaveB: ExportWav END');\n\n    return;\n  } // end handleSaveB\n\n  handleLoop(event) {\n\n    if (event.target.name === 'loopInterval') {\n      this.params.loopInterval = parseInt(event.target.value,10);\n      return;\n    }\n\n\n    if (event.target.name === 'Rewind') {\n      if (this.params.isPlaying) return;\n\n      this.setState ({playingAt: 0});\n      this.setState ({playingAtSlider: 0});\n\n      return;\n    }\n\n    if (event.target.name === 'setA') {\n      this.setState ({timeA: this.state.playingAt});\n      this.setState ({playingAtSlider: this.state.playingAt});\n      return;\n    }\n\n    if (event.target.name === 'setB'){\n      if (this.state.playingAt >=  this.state.timeA)\n        this.setState ({timeB: parseFloat(this.state.playingAt)});\n      else\n        this.setState ({timeB: parseFloat(this.state.timeA) + parseFloat(10)});\n      return;\n    }\n\n    if (event.target.name === 'LoopAB'){\n      if (!this.params.audioBuffer) return;\n\n      if (this.state.loopButtonStr === m.loopAB){ \n        if (this.params.isPlaying) return;\n        this.params.loop = true;\n        this.playAB(this.state.timeA, this.state.timeB);\n        this.setState ({loopButtonStr: m.stopLoop});\n        this.setState ({startButtonStr: m.playOnce});\n      } else if (this.state.loopButtonStr === m.stopLoop){ \n\n        if (!this.params.isPlaying) return;\n\n        if(shifter){\n          shifter.disconnect(); shifter.off(); shifter = null;\n        }\n\n        this.params.isPlaying = false;\n        this.params.loop = false;\n        this.setState ({loopButtonStr: m.loopAB});\n      }\n\n      return;\n    }\n\n// reset AB\n    if (event.target.name === 'reset') {\n      if (this.params.audioBuffer === null) return;\n      this.setState ({timeA: 0,\n                      timeB: this.params.audioBuffer.duration,\n                      playingAtSlider: 0});\n\n    return;\n   } // end reset\n  } // END handleLoop\n\n\n  playAB(timeA, timeB) {\n\n     if (this.params.isPlaying) return;\n     if (this.params.audioBuffer === null) return;\n\n     if (timeB <= timeA){\n        timeB = timeA + 5; // min 5 sec\n        this.setState({timeB: timeB});\n     }\n\n     const {audioBuffer, loopInterval} = this.params;\n\n     const from = timeA*audioBuffer.sampleRate;\n     const to = timeB*audioBuffer.sampleRate;\n     let offset = 0;\n     if (this.params.loop) \n       offset = loopInterval*audioBuffer.sampleRate;\n\n     let partialAudioBuffer = audioCtx.createBuffer(2,\n          to - from + offset, audioBuffer.sampleRate);\n     let left  = audioBuffer.getChannelData(0);\n     let right = audioBuffer.getChannelData(1);\n\n     left  = left.subarray(from, to);\n     let tmp = partialAudioBuffer.getChannelData(0);\n\n     for (let sample=0; sample < left.length; sample++) \n        tmp[sample + offset] = left[sample];\n\n     if (audioBuffer.numberOfChannels >= 2) {\n       tmp = partialAudioBuffer.getChannelData(1);\n       right = right.subarray(from, to);\n\n       for (let sample=0; sample < right.length; sample++) \n         tmp[sample + offset] = right[sample];\n     }\n\n// create PitchShifter and Play\n     if (shifter) { shifter.disconnect(); shifter.off(); shifter= null;}\n     shifter = new PitchShifter(audioCtx, partialAudioBuffer, 4096)\n     shifter.tempo = this.state.playSpeed/100.0\n     shifter.pitch = Math.pow(2.0,this.state.playPitch/12.0)\n\n     shifter.on('play', detail => {\n\n       let setTime =  parseFloat(timeA) + parseFloat(detail.timePlayed);\n       if (this.params.loop) setTime -= loopInterval;\n\n       this.setState({playingAt: setTime});\n       // if (!iOS) \n       this.setState({playingAtSlider: setTime}); \n\n       if (detail.percentagePlayed >= 100) {\n\n         shifter.disconnect(); shifter.off(); shifter = null;\n         this.params.isPlaying = false;\n\n         if (this.state.startButtonStr === m.pause) {\n           this.setState({startButtonStr: m.playOnce}); \n         }\n\n         if (this.params.loop)\n           this.playAB(this.state.timeA, this.state.timeB);\n\n         return;\n       }\n\n     }); // end shifter.on\n \n    shifter.connect(gainNode);\n    gainNode.connect(audioCtx.destination); // start play\n    audioCtx.resume();\n\n    this.params.isPlaying = true; \n    if (!this.params.loop)\n      this.setState({startButtonStr: m.pause});\n\n    return;\n  } // END playAB()\n\n  handleLang(e){\n\n    if (this.params.isPlaying) return; // cannot change during playback\n\n    if (e.target.name === 'language'){\n      let oldm = m;\n      if (this.state.ja) { \n        m = usText; this.setState({ja: false}); \n      } else { \n        m = jaText; this.setState({ja: true}); }\n\n      if (this.state.startButtonStr === oldm.loadFile)\n        this.setState({startButtonStr: m.loadFile});\n      else if (this.state.startButtonStr === oldm.playOnce)\n        this.setState({startButtonStr: m.playOnce});\n      else if (this.state.startButtonStr === oldm.pause)\n        this.setState({startButtonStr: m.pause});\n\n      if (this.state.loopButtonStr === oldm.loopAB)\n        this.setState({loopButtonStr: m.loopAB});\n      else if (this.state.loopButtonStr === oldm.stopLoop)\n        this.setState({loopButtonStr: m.stopLoop});\n\n      if (this.state.saveButtonStr === oldm.exportWav)\n        this.setState({saveButtonStr: m.exportWav});\n      else if (this.state.saveButtonStr === oldm.abortExport)\n        this.setState({saveButtonStr: m.abortExport});\n\n     return;\n   } // end if\n\n  }\n \n} // end class\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}