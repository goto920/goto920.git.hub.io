{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["m","audioCtx","gainNode","version","packageJSON","homepage","subversion","slice","jaText","messages","ja","usText","us","window","navigator","language","AudioContext","webkitAudioContext","shifter","App","Component","constructor","props","super","this","params","filename","audioBuffer","isPlaying","loop","loopInterval","exportDataL","exportDataR","exportBuffer","save","state","playingAt","playingAtSlider","timeA","timeB","playSpeed","playPitch","playPitchSemi","playPitchCents","playVolume","startButtonStr","loadFile","loopButtonStr","loopAB","saveButtonStr","exportWav","setState","bind","handleWindowClose","handleSpeedSlider","handlePitchSlider","handleTimeSlider","handleVolumeSlider","handlePlay","handleSaveB","fakeDownload","handleLoop","playAB","handleLang","event","disconnect","off","close","componentDidMount","audioWorklet","console","log","createGain","addEventListener","componentWillUnmount","removeEventListener","render","startBStyle","loopBStyle","saveBStyle","duration","pause","color","stopLoop","abortExport","hrBlue","border","className","title","name","onClick","input","type","accept","onChange","speed","reset","min","max","value","pitch","parseFloat","toFixed","style","time","timeNote","step","Math","round","setA","setB","resetAB","volume","volumeNote","rewind","interval","defaultValue","href","target","rel","guide","files","length","totalTime","playOnce","file","reader","FileReader","onload","e","decodeAudioData","result","saudioBuffer","error","err","resetAudio","readAsArrayBuffer","tempo","pitchSemi","pow","vol","gain","resume","outFileName","split","parseInt","blob","Blob","toWav","saveAs","saverNode","channels","numberOfChannels","PitchShifter","createScriptProcessor","createBuffer","sampleRate","base","AudioBuffer","prototype","copyToChannel","onaudioprocess","inputBuffer","outputBuffer","channel","inputData","getChannelData","outputData","exportData","sample","on","detail","currentPos","timePlayed","formattedTimePlayed","formattedDuration","connect","destination","from","to","offset","partialAudioBuffer","left","right","subarray","tmp","oldm","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","document","getElementById","URL","process","origin","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.cce8709c.chunk.js","sourcesContent":["import React, { Component } from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport {PitchShifter} from 'soundtouchjs'\nimport packageJSON from '../package.json'\nimport {saveAs} from 'file-saver';\nimport * as toWav from 'audiobuffer-to-wav';\nimport messages from './language.json';\n\nconst version = (packageJSON.homepage + packageJSON.subversion).slice(-11)\n// var homepage = 'https://goto920.github.io/demos/variableplayer/'\nconst jaText = messages.ja;\nconst usText = messages.us;\nvar m;\nif (window.navigator.language.slice(0,2) === 'ja') m = jaText\nelse m = usText\n\nwindow.AudioContext = window.AudioContext || window.webkitAudioContext\n\nvar audioCtx;\nvar gainNode;\n// =  audioCtx.createGain()\nvar shifter = null // null\n\n/*\nvar iOS = false;\nif(  navigator.userAgent.match(/iPhone/i) \n  || navigator.userAgent.match(/iPod/i)\n  || navigator.userAgent.match(/iPad/i)){\n  iOS = true;\n}\n*/\n\nclass App extends Component {\n\n  constructor (props){\n    super(props)\n\n    this.params = {\n      filename: null,\n      audioBuffer: null,\n      isPlaying: false,\n      loop: false,\n      loopInterval: 2.0,\n      exportDataL: null,\n      exportDataR: null,\n      exportBuffer: null,\n      save: false\n    }\n\n    this.state = {\n      ja: (m === jaText),\n      playingAt: 0,\n      playingAtSlider: 0,\n      timeA: 0,\n      timeB: 0,\n      playSpeed: 100, // in percent\n      playPitch: 0, // in semi-tone unit (real value)\n      playPitchSemi: 0, // in semi-tone (integer part)\n      playPitchCents: 0, // percent for one semitone\n      playVolume: 75, // in percent\n      startButtonStr: m.loadFile, \n      loopButtonStr: m.loopAB,\n      saveButtonStr: m.exportWav\n    }\n\n    this.setState = this.setState.bind(this)\n    this.handleWindowClose = this.handleWindowClose.bind(this)\n    this.loadFile = this.loadFile.bind(this)\n    this.handleSpeedSlider = this.handleSpeedSlider.bind(this)\n    this.handlePitchSlider = this.handlePitchSlider.bind(this)\n    this.handleTimeSlider = this.handleTimeSlider.bind(this)\n    this.handleVolumeSlider = this.handleVolumeSlider.bind(this)\n    this.handlePlay = this.handlePlay.bind(this);\n    this.handleSaveB = this.handleSaveB.bind(this);\n    this.fakeDownload = this.fakeDownload.bind(this);\n    this.handleLoop = this.handleLoop.bind(this);\n    this.playAB = this.playAB.bind(this);\n    this.handleLang = this.handleLang.bind(this);\n    \n  } // end constructor\n\n  handleWindowClose(event) { \n    if (shifter) { shifter.disconnect(); shifter.off(); shifter = null; }\n    audioCtx.close();\n  }\n\n  componentDidMount () { // after render()\n    audioCtx = new window.AudioContext()\n    if (audioCtx.audioWorklet) \n       console.log ('audioWorklet exists!')\n    else console.log ('audioWorklet not found')\n    gainNode = audioCtx.createGain()\n    window.addEventListener('beforeClosing', this.handleWindowClose)\n  }\n\n  componentWillUnmount () { // before closing app\n    window.removeEventListener('beforeClosing', this.handleWindowClose)\n  }\n\n  render() {\n    const {loadFile, \n           handleSpeedSlider, handlePitchSlider, handleVolumeSlider, \n           handleTimeSlider, handlePlay, handleSaveB, \n           handleLoop, handleLang} = this;\n    const {ja,playingAt, playingAtSlider, timeA, timeB,\n           playSpeed, playPitch, playPitchSemi, playPitchCents,\n           playVolume, startButtonStr, loopButtonStr, saveButtonStr} \n           = this.state\n\n    let duration = 0;\n    if (this.params.audioBuffer)\n       duration = this.params.audioBuffer.duration\n\n    let startBStyle; \n    if (startButtonStr === m.pause)\n      startBStyle = {color: 'green'};\n    else  \n      startBStyle = {};\n\n    let loopBStyle; \n    if (loopButtonStr === m.stopLoop)\n      loopBStyle = {color: 'green'};\n    else  \n      loopBStyle = {};\n\n    let saveBStyle; \n    if (saveButtonStr === m.abortExport)\n      saveBStyle = {color: 'green'};\n    else  \n      saveBStyle = {};\n\n    let hrBlue = {border: '1px dotted', color: 'blue'};\n\n    return (\n      <div className=\"App\">\n      {m.title} &nbsp;&nbsp;\n      <span className='small-button'>\n       <button name='language' onClick={handleLang}>\n       {ja ? 'En(US)' : '日本語'}</button> \n      </span>\n      <hr />\n      1) {m.input}: <br />\n        <span className=\"selectFile\">\n        <input type=\"file\" name=\"loadFile\"\n        accept=\"audio/*\" onChange={loadFile} /><br />\n        </span>\n      <hr />\n\n      {m.speed}: {playSpeed} &nbsp;&nbsp;\n        <button name='reset' onClick={handleSpeedSlider} >{m.reset}</button>\n        <br />\n        <span className='slider'> \n         <center>\n         025<input type='range' name='speedSlider' min='25' max='200'\n         value = {playSpeed} onChange={handleSpeedSlider} />200 \n         </center>\n        </span>\n      <hr />\n      {m.pitch}: {parseFloat(playPitch).toFixed(2)} &nbsp;&nbsp;\n       <button name='reset' onClick={handlePitchSlider} >{m.reset}</button>\n       <br />\n        <span className='slider'> \n         <center>\n         -12<input type='range' name='pitchSliderSemi' min='-12' max='12'\n         value = {playPitchSemi} onChange={handlePitchSlider} />12<br />\n         <hr style={hrBlue}/>\n         -100<input type='range' name='pitchSliderCents' min='-100' max='100'\n         value = {playPitchCents} onChange={handlePitchSlider} />100<br />\n         </center>\n\n        </span>\n      <hr />\n        {m.time}: {playingAt.toFixed(2)} &nbsp; {m.timeNote}<br />\n        <span className='slider'> \n        <center>\n        0<input type='range' name='timeSlider'\n        min='0' max={duration}\n        value = {playingAtSlider} step='1'\n        onChange={handleTimeSlider} />\n        {Math.round(duration)}<br />\n        </center>\n        <button name='setA' onClick={handleLoop} >{m.setA}</button>\n        : {timeA.toFixed(2)} &nbsp;&nbsp;\n        <button name='setB' onClick={handleLoop} >{m.setB}</button>\n        : {timeB.toFixed(2)} &nbsp;&nbsp;\n        <button name='resetAB' onClick={handleLoop}> \n        {m.resetAB}\n        </button>\n        </span>\n        <hr />\n      {m.volume}: {playVolume} &nbsp;&nbsp; {m.volumeNote}<br />\n        <span className='slider'> \n         <center>\n         0<input type='range' name='volumeSlider' min='0' max='150'\n         value = {playVolume} onChange={handleVolumeSlider} />150<br />\n         </center>\n        </span>\n      <hr />\n\n      <span>\n        2A) <button name='startPause' \n               onClick={handlePlay} style={startBStyle}> \n        {startButtonStr}\n        </button> &nbsp;&nbsp;\n        <button name='Rewind' onClick={handleLoop}>\n        {m.rewind}</button>\n        <hr style={hrBlue}/>\n        2B) <button name='LoopAB' \n              onClick={handleLoop} style={loopBStyle}>\n        {loopButtonStr}</button> &nbsp;&nbsp;\n        {m.interval} <span className='selector'>\n        <select name='loopInterval'\n           defaultValue={this.params.loopInterval} onChange={handleLoop}>\n          <option value='0'>00</option>\n          <option value='1'>01</option>\n          <option value='2'>02</option>\n          <option value='4'>04</option>\n          <option value='5'>05</option>\n          <option value='10'>10</option>\n          <option value='20'>20</option>\n          <option value='30'>30</option>\n          <option value='60'>60</option>\n        </select>\n        </span>\n        <hr />\n        3) <button name='save' \n            onClick={handleSaveB} style={saveBStyle}> \n        {saveButtonStr}\n        </button> \n    {/*     &nbsp;|&nbsp; \n       <button name='resetContext' onClick={handlePlay}> \n        {m.resetAudio}</button> */}\n      </span>\n      <hr />\n        {m.version}: {version}, &nbsp;\n        <a href={m.homepage} \n         target=\"_blank\" rel=\"noopener noreferrer\">{m.guide}</a>\n        <br />\n        Based on <a href=\"https://github.com/cutterbl/SoundTouchJS\"\n         target=\"_blank\" rel=\"noopener noreferrer\">\n        cutterbl/SoundTouchJS</a>\n      </div>\n    ) // end return\n\n  } // end render()\n\n///////////////////////////////////////////////////\n\n  loadFile (event) {\n\n   if (event.target.name !== 'loadFile') return;\n   if (event.target.files.length === 0) return;\n   if (this.params.isPlaying) return;\n\n   this.setState({totalTime: 0})\n   this.setState({startButtonStr: m.playOnce})\n   let file = event.target.files[0]\n   this.params.filename = file.name;\n\n   let reader = new FileReader()\n\n   reader.onload = function (e) {\n\n     audioCtx.decodeAudioData(reader.result, \n        function(audioBuffer) {\n          this.params.saudioBuffer = null\n          this.params.audioBuffer = audioBuffer\n          this.setState({startButtonStr: m.playOnce, \n             playingAt: 0, playingAtSlider: 0})\n          this.setState({timeA: 0})\n          this.setState({timeB: audioBuffer.duration})\n        }.bind(this),\n        function (error) { console.log (\"Filereader error: \" + error.err) })\n     this.handlePlay({target: {name: m.resetAudio}});     \n\n   }.bind(this)\n\n   reader.readAsArrayBuffer(file)\n\n } // end loadFile()\n\n// UI handlers\n  handleSpeedSlider(event) { \n     // console.log('handleSpeedSlider');\n\n     if (event.target.name === 'speedSlider') {\n       if (shifter) shifter.tempo = event.target.value/100.0\n       this.setState({playSpeed: event.target.value})\n       return;\n     }\n\n     if (event.target.name === 'reset') {\n       if (shifter) shifter.tempo = 1;\n       this.setState({playSpeed: 100})\n       return;\n     }\n\n  }\n\n  handlePitchSlider(event) { \n     // console.log('handlePitchSlider');\n     // if (iOS && this.params.isPlaying) return;\n\n     let pitchSemi = 0;\n\n     if (event.target.name === 'pitchSliderSemi' ){\n       pitchSemi = parseFloat(event.target.value) \n           + parseFloat(this.state.playPitchCents)/100.0;\n       this.setState({playPitchSemi: event.target.value})\n     } else if (event.target.name === 'pitchSliderCents' ){\n       pitchSemi = parseFloat(this.state.playPitchSemi)\n           + parseFloat(event.target.value)/100.0\n       this.setState({playPitchCents: event.target.value})\n     } else if (event.target.name === 'reset') {\n       this.setState({playPitchSemi: 0, playPitchCents: 0});\n       pitchSemi = 0;\n     }\n\n     if (shifter) {shifter.pitch = Math.pow(2.0, pitchSemi/12.0);}\n     this.setState({playPitch: pitchSemi});\n\n     return;\n  }\n\n  handleTimeSlider(event) { \n\n     // console.log('handleTimeSlider');\n     // if (iOS && this.params.isPlaying) return;\n\n     if (event.target.name !== 'timeSlider') return\n\n     if (this.state.startButtonStr === m.playOnce) {\n        let value = event.target.value;\n        this.setState({playingAt: parseFloat(value)});\n        this.setState({playingAtSlider: value});\n     }\n  }\n\n  handleVolumeSlider(event) { \n     if (event.target.name !== 'volumeSlider') return\n     // if (iOS && this.params.isPlaying) return;\n\n     let vol = event.target.value*1.0\n     gainNode.gain.value = vol/100.0\n     this.setState({playVolume: vol})\n  }\n\n  handlePlay(event) { \n     const {audioBuffer} = this.params;\n\n// startPause or LoopAB\n   if (event.target.name === 'startPause') { \n     if (audioCtx.state === 'suspended') audioCtx.resume()\n\n     let timeA, timeB; \n\n// Pause\n     if (this.state.startButtonStr === m.pause){\n       if (!this.params.isPlaying) return;\n       if (shifter === null) return\n\n       shifter.disconnect(); shifter.off(); shifter = null;\n       this.params.isPlaying = false;\n       this.setState({playingAtSlider: this.state.playingAt});\n       this.setState({startButtonStr: m.playOnce})\n\n       return;\n     } // end pause \n\n// PlayOnce\n\n     if (event.target.name === 'startPause' \n       && this.state.startButtonStr === m.playOnce) {\n       if (this.params.isPlaying) return;\n\n       timeA = this.state.playingAt;\n       timeB = audioBuffer.duration;\n\n       this.playAB(timeA, timeB); // timeA, timeB\n       return;\n     }\n\n   } // END  if (event.target.name)\n\n    return;\n  } // end handlePlay()\n\n  fakeDownload(audioBuffer){\n\n    const words = this.params.filename.split('.');\n    let outFileName = \n         words[0]\n       + '&s' + parseInt(this.state.playSpeed)\n       + '&p' + parseInt(this.state.playPitch*100)\n       + '.wav';\n    let blob = new Blob([toWav(audioBuffer)], {type: 'audio/vnd.wav'});\n    saveAs(blob,outFileName);\n    audioBuffer = null;\n  }\n\n  handleSaveB(event) { \n    // console.log ('handleSaveB');\n\n    if (event.target.name !== 'save') return;\n\n    if (this.state.startButtonStr !== m.playOnce\n      || this.state.loopButtonStr !== m.loopAB) return;\n\n    const {audioBuffer} = this.params;\n\n    if (this.state.saveButtonStr === m.abortExport) {\n      if(shifter) { shifter.disconnect(); shifter.off(); shifter = null; }\n\n/*\n      if(iOS) {\n// Reset AudioContext\n        audioCtx.close();\n        audioCtx = new window.AudioContext();\n        gainNode = audioCtx.createGain();\n// Unlock iOS \n        let buffer = audioCtx.createBuffer(1,1,44100); \n        let source = audioCtx.createBufferSource();\n        source.buffer = buffer;\n        source.connect (audioCtx.destination);\n        source.start();\n      }\n// End unlock\n*/\n\n      this.params.isPlaying = false;\n      this.setState({saveButtonStr: m.exportWav});\n      // console.log ('handleSaveB: AbortExport');\n\n      return;\n    }\n\n// Save\n    if (this.state.saveButtonStr === m.exportWav) {\n\n      if (this.params.isPlaying) return;\n      if (!audioBuffer) return;\n\n\n// https://www.gmass.co/blog/record-audio-mobile-web-page-ios-android/\n// https://developer.mozilla.org/en-US/docs/Web/API/ScriptProcessorNode/onaudioprocess\n\n      let saverNode = null;\n      let channels = audioBuffer.numberOfChannels;\n\n      if (shifter) {shifter.disconnect(); shifter.off(); shifter= null;}\n\n      let bufferSize = 16384; // 1024?\n      shifter = new PitchShifter(audioCtx, audioBuffer, bufferSize);\n      shifter.tempo = this.state.playSpeed/100.0;\n      shifter.pitch = Math.pow(2.0,this.state.playPitch/12.0);\n\n      saverNode = audioCtx.createScriptProcessor(bufferSize, \n      channels,channels);\n/*\n      if (audioCtx.createScriptProcessor) {\n        saverNode = audioCtx.createScriptProcessor(bufferSize, \n          channels,channels);\n        console.log ('createScriptProcessor');\n      } else if (audioCtx.createJavaScriptNode) {\n        saverNode = audioCtx.createJavaScriptNode(bufferSize,channels,channels);\n        console.log ('createJavaScriptNode');\n      } else {\n        console.log ('createScript is not supported');\n        return;\n      }\n*/\n\n/* Storage */\n      this.params.exportBuffer = audioCtx.createBuffer( \n        channels,\n        parseInt(audioBuffer.length*(100/this.state.playSpeed))\n        + bufferSize, \n        audioBuffer.sampleRate);\n\n      this.params.save = true;\n\n/* Script Processor */\n      let base = 0;\n      if (AudioBuffer.prototype.copyToChannel) \n        console.log('copyToChannel OK');\n      else \n        console.log('copyToChannel NG');\n\n      saverNode.onaudioprocess = function(event){\n        let inputBuffer = event.inputBuffer;\n        let outputBuffer = event.outputBuffer;\n        let exportBuffer = this.params.exportBuffer;\n\n        for (let channel = 0; channel < inputBuffer.numberOfChannels; \n             channel++){\n          let inputData  = inputBuffer.getChannelData(channel);\n          let outputData = outputBuffer.getChannelData(channel);\n          let exportData = exportBuffer.getChannelData(channel);\n\n          if (AudioBuffer.prototype.copyToChannel){\n            outputBuffer.copyToChannel(inputData, channel,0);\n            exportBuffer.copyToChannel(inputData, channel, base);\n          } else {\n            for (let sample = 0; sample < inputBuffer.length; sample++) {\n              let value = inputData[sample];\n              outputData[sample] = value;\n              exportData[base + sample] = value;\n            }\n          } // end if copyToChannel\n\n        } // end for channel\n\n        base += inputBuffer.length;\n\n      }.bind(this); // end onaudioprocess\n\n    // gainNode.gain.value = 0.2;\n    // this.handleVolumeSlider({target: {name: 'volumeSlider', value: 20}});\n\n      shifter.on('play', detail => {\n        let currentPos = parseFloat(detail.timePlayed);\n        this.setState({playingAt: currentPos, playingAtSlider: currentPos}); \n\n        if (detail.formattedTimePlayed >= shifter.formattedDuration) {\n          saverNode.disconnect();\n          shifter.off(); shifter.disconnect(); shifter = null;\n          // gainNode.disconnect();\n\n          this.fakeDownload(this.params.exportBuffer);\n\n          this.params.isPlaying = false;\n          this.setState({saveButtonStr: m.exportWav});\n          this.params.save = false;\n          return;\n        } // end 100%\n\n      }); // end shifter.on()\n\n      this.setState({saveButtonStr: m.abortExport});\n      this.params.isPlaying = true;\n      shifter.connect(saverNode);\n      saverNode.connect(gainNode);\n      gainNode.connect(audioCtx.destination);\n      if (audioCtx.state === 'suspended') audioCtx.resume()\n\n      return;\n    } // end if exportWav\n\n  } // end handleSaveB\n\n  handleLoop(event) {\n\n    if (event.target.name === 'loopInterval') {\n      this.params.loopInterval = parseInt(event.target.value,10);\n      return;\n    }\n\n\n    if (event.target.name === 'Rewind') {\n      if (this.params.isPlaying) return;\n\n      this.setState ({playingAt: 0});\n      this.setState ({playingAtSlider: 0});\n\n      return;\n    }\n\n    if (event.target.name === 'setA') {\n      this.setState ({timeA: this.state.playingAt});\n      this.setState ({playingAtSlider: this.state.playingAt});\n      return;\n    }\n\n    if (event.target.name === 'setB'){\n      if (this.state.playingAt >=  this.state.timeA)\n        this.setState ({timeB: parseFloat(this.state.playingAt)});\n      else\n        this.setState ({timeB: parseFloat(this.state.timeA) + parseFloat(10)});\n      return;\n    }\n\n    if (event.target.name === 'LoopAB'){\n      if (!this.params.audioBuffer) return;\n\n      if (this.state.loopButtonStr === m.loopAB){ \n        if (this.params.isPlaying) return;\n        this.params.loop = true;\n        this.playAB(this.state.timeA, this.state.timeB);\n        this.setState ({loopButtonStr: m.stopLoop});\n        this.setState ({startButtonStr: m.playOnce});\n      } else if (this.state.loopButtonStr === m.stopLoop){ \n\n        if (!this.params.isPlaying) return;\n\n        if(shifter){ shifter.disconnect(); shifter.off(); shifter = null; }\n\n        this.params.isPlaying = false;\n        this.params.loop = false;\n        this.setState ({loopButtonStr: m.loopAB});\n      }\n\n      return;\n    }\n\n// reset AB\n    if (event.target.name === 'resetAB') {\n      if (this.params.audioBuffer === null) return;\n      this.setState ({timeA: 0,\n                      timeB: this.params.audioBuffer.duration,\n                      playingAtSlider: 0});\n\n    return;\n   } // end resetAB\n\n/*\n   if (event.target.name === m.resetAudio){\n      if (!iOS) return;\n\n      if(shifter) { shifter.disconnect(); shifter.off(); shifter = null; }\n      audioCtx.close();\n      audioCtx = new window.AudioContext();\n      gainNode = audioCtx.createGain()\n// Unlock iOS \n      let buffer = audioCtx.createBuffer(1,1,44100); \n      let source = audioCtx.createBufferSource();\n      source.buffer = buffer;\n      source.connect (audioCtx.destination);\n      source.start();\n// End unlock\n      return;\n   }\n*/\n\n  } // END handleLoop\n\n\n  playAB(timeA, timeB) {\n\n     if (this.params.isPlaying) return;\n     if (this.params.audioBuffer === null) return;\n\n     if (audioCtx.state === 'suspended') audioCtx.resume()\n\n     if (timeB <= timeA){\n       timeB = timeA + 5; // min 5 sec\n       this.setState({timeB: timeB});\n     }\n\n     const {audioBuffer, loopInterval} = this.params;\n\n     const from = timeA*audioBuffer.sampleRate;\n     const to = timeB*audioBuffer.sampleRate;\n     let offset = 0;\n     if (this.params.loop) \n       offset = loopInterval*audioBuffer.sampleRate;\n\n     let partialAudioBuffer = audioCtx.createBuffer(2,\n          to - from + offset, audioBuffer.sampleRate);\n     let left  = audioBuffer.getChannelData(0);\n     let right = audioBuffer.getChannelData(1);\n\n     left  = left.subarray(from, to);\n     let tmp = partialAudioBuffer.getChannelData(0);\n\n     for (let sample=0; sample < left.length; sample++) \n        tmp[sample + offset] = left[sample];\n\n     if (audioBuffer.numberOfChannels >= 2) {\n       tmp = partialAudioBuffer.getChannelData(1);\n       right = right.subarray(from, to);\n\n       for (let sample=0; sample < right.length; sample++) \n         tmp[sample + offset] = right[sample];\n     }\n\n// create PitchShifter and Play\n     let bufferSize = 16384;\n     if (shifter) { shifter.disconnect(); shifter.off(); shifter= null;}\n     shifter = new PitchShifter(audioCtx, partialAudioBuffer, bufferSize)\n     partialAudioBuffer = null;\n     shifter.tempo = this.state.playSpeed/100.0\n     shifter.pitch = Math.pow(2.0,this.state.playPitch/12.0)\n\n     let duration = shifter.formattedDuration;\n\n     shifter.on('play', detail => {\n\n       let currentPos =  parseFloat(timeA) + parseFloat(detail.timePlayed);\n       if (this.params.loop) currentPos -= loopInterval;\n\n       this.setState({playingAt: currentPos, playingAtSlider: currentPos}); \n\n       if (detail.formattedTimePlayed >= duration) {\n         shifter.disconnect(); shifter.off(); shifter = null;\n         this.params.isPlaying = false;\n\n         if (this.state.startButtonStr === m.pause)\n           this.setState ({playingAt: 0, playingAtSlider: 0,\n             startButtonStr: m.playOnce}); \n\n         if (this.params.loop)\n           this.playAB(this.state.timeA, this.state.timeB);\n         // return;\n       }\n\n     }); // end shifter.on\n \n    shifter.connect(gainNode);\n    gainNode.connect(audioCtx.destination); // start play\n\n    this.params.isPlaying = true; \n    if (!this.params.loop)\n      this.setState({startButtonStr: m.pause});\n\n     return;\n  } // END playAB()\n\n  handleLang(e){\n\n    if (this.params.isPlaying) return; // cannot change during playback\n\n    if (e.target.name === 'language'){\n      let oldm = m;\n      if (this.state.ja) { \n        m = usText; this.setState({ja: false}); \n      } else { \n        m = jaText; this.setState({ja: true}); }\n\n      if (this.state.startButtonStr === oldm.loadFile)\n        this.setState({startButtonStr: m.loadFile});\n      else if (this.state.startButtonStr === oldm.playOnce)\n        this.setState({startButtonStr: m.playOnce});\n      else if (this.state.startButtonStr === oldm.pause)\n        this.setState({startButtonStr: m.pause});\n\n      if (this.state.loopButtonStr === oldm.loopAB)\n        this.setState({loopButtonStr: m.loopAB});\n      else if (this.state.loopButtonStr === oldm.stopLoop)\n        this.setState({loopButtonStr: m.stopLoop});\n\n      if (this.state.saveButtonStr === oldm.exportWav)\n        this.setState({saveButtonStr: m.exportWav});\n      else if (this.state.saveButtonStr === oldm.abortExport)\n        this.setState({saveButtonStr: m.abortExport});\n\n     return;\n   } // end if\n\n  }\n \n} // end class\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\nserviceWorker.register();\n"],"sourceRoot":""}