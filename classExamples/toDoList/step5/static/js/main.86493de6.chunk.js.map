{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","toDoListSaved","JSON","parse","localStorage","getItem","state","toDoList","title","description","deadline","sortBy","filter","edit","handleAddItem","bind","editItem","handleFile","setItem","stringify","this","toDoListDisplay","x","status","sort","a","b","creation","toDoListUI","map","item","index","array","key","Date","toLocaleString","name","value","onClick","className","type","placeholder","required","onChange","e","setState","target","cols","calendarType","accept","newItem","getTime","now","newList","parseInt","findIndex","alert","splice","blob","Blob","saveAs","reader","FileReader","onload","result","readAsText","files","React","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.86493de6.chunk.js","sourcesContent":["import React from 'react'; \nimport './App.css'; \nimport Calendar from 'react-calendar';\nimport {saveAs} from 'file-saver';\nimport 'react-calendar/dist/Calendar.css';\n\nclass App extends React.Component { \n\n  constructor(props){\n    super(); \n\n    const toDoListSaved \n      = JSON.parse(localStorage.getItem('toDoList')) || [];\n\n    this.state = {\n      toDoList : toDoListSaved,\n      title: '',\n      description: '',\n      deadline: null,\n      sortBy: 'c-asc',\n      filter: 'none',\n      edit: 0 // 0 (new) or item creation time\n    };\n\n    this.handleAddItem = this.handleAddItem.bind(this);\n    this.editItem = this.editItem.bind(this);\n    this.handleFile = this.handleFile.bind(this);\n  }\n\n  componentWillUnmount(){\n    localStorage.setItem('toDoList', JSON.stringify(this.state.toDoList));\n  }\n\n  render () { // 描画処理\n\n    let toDoListDisplay = this.state.toDoList;\n    // add filter, sort here \n    switch (this.state.filter) {\n      case 'active':\n        toDoListDisplay = toDoListDisplay.filter(x => x.status === 'active'); \n      break;\n      case 'done':\n        toDoListDisplay = toDoListDisplay.filter(x => x.status === 'done'); \n      break;\n      default:\n    }\n    switch (this.state.sortBy) {\n      case 'c-asc': \n        toDoListDisplay.sort((a,b) => a.creation - b.creation); \n      break;\n      case 'c-desc': \n        toDoListDisplay.sort((a,b) => b.creation - a.creation); \n      break;\n      case 'd-asc': \n        toDoListDisplay.sort((a,b) => a.deadline - b.deadline); \n      break;\n      case 'd-desc': \n        toDoListDisplay.sort((a,b) => b.deadline - a.deadline); \n      break;\n      default:\n    }\n\n    const toDoListUI = toDoListDisplay.map((item,index,array) => \n    (<div key={index}>\n     {index}: Title: {item.title}<br />\n     Status: {item.status} <br />\n     Description: {item.description}<br />\n     Creation: {new Date(item.creation).toLocaleString()}<br />\n     Deadline: {new Date(item.deadline).toLocaleString()}<br />\n     <button name=\"done\" value={item.creation} \n        onClick={this.editItem} >Done</button> &nbsp;\n     <button name=\"edit\" value={item.creation}\n        onClick={this.editItem}>Edit</button>&nbsp;\n     <button name=\"delete\" value={item.creation} \n        onClick={this.editItem} >Delete</button>\n    <hr />\n    </div>\n    )); \n\n    return (\n     <div className=\"App\"> <hr />\n     {this.state.edit ? \n       \"Edit: \" + new Date(this.state.edit).toLocaleString() : \"Add new toDo Item\"}\n     <hr />\n     Title: &nbsp;\n     <input type=\"text\" name=\"title\" placeholder=\"title\" \n       value={this.state.title} required \n       onChange={(e) => this.setState({title: e.target.value})}/><br />\n     Description: <br />\n      <textarea name=\"description\" \n       value={this.state.description}\n       placeholder=\"description\" cols=\"50\"\n       onChange={(e) => this.setState({description: e.target.value})} /><br />\n     <Calendar calendarType='US'\n        value={this.state.deadline} \n        onChange={(value) => this.setState({deadline: value})}/>\n     <button name=\"add\" value={this.state.edit}\n     onClick={this.handleAddItem}>\n     {this.state.edit ? \"Modify\": \"Add\"}</button> &nbsp;\n     <button name=\"cancel\" \n       onClick={(e) => this.setState({title: '', \n               description: '', deadline: null, edit: 0})}>\n     Cancel</button> &nbsp;\n     <hr />\n     Filter <select name=\"filter\" \n        value={this.state.filter} \n            onChange={(e) => this.setState({filter: e.target.value})}>\n     <option value=\"none\">showall</option>\n     <option value=\"active\">active</option>\n     <option value=\"done\">done</option>\n     </select> &nbsp; | &nbsp;\n     Sort by <select name=\"sort\" \n        value={this.state.sortBy} \n          onChange={(e) => this.setState({sortBy: e.target.value})}>\n     <option value=\"c-asc\">creation(asc)</option>\n     <option value=\"c-desc\">creation(desc)</option>\n     <option value=\"d-asc\">deadline(asc)</option>\n     <option value=\"d-desc\">deadline(desc)</option>\n     </select><br />\n     Load: <input type=\"file\" name=\"load\" accept=\"application/json\"\n           onChange={this.handleFile} /><br />\n     Save: <button name=\"save\" onClick={this.handleFile}>Save</button>\n     <hr />\n     {toDoListUI}\n     </div>\n    );\n  }\n\n  handleAddItem(e) {\n\n    if (this.state.title === '') {alert('Title is empty'); return;}\n\n    let deadline;  \n    if (this.state.deadline !== null) \n      deadline = this.state.deadline.getTime();\n    else\n      deadline = Date.now() + 7*24*3600*1000; // default 1 week\n\n    let newItem;\n    let newList = [];\n    if (parseInt(e.target.value) === 0) { // add new\n      newItem = {\n        title: this.state.title,\n        description: this.state.description,\n        creation: Date.now(),\n        deadline: deadline,\n        status: 'active'\n      };\n      newList = [...this.state.toDoList, newItem];\n    } else { // modify\n      newList = this.state.toDoList;\n      const creation = parseInt(e.target.value);\n      const index = newList.findIndex(item => item.creation === creation);\n      if (index >= 0) {\n        const item = newList[index];\n        item.title = this.state.title;\n        item.description = this.state.description;\n        item.deadline = this.state.deadline.getTime();\n      }\n    }\n\n    this.setState({title: \"\", description: \"\", deadline: null, edit: 0});\n    this.setState({toDoList: newList});\n    localStorage.setItem('toDoList', JSON.stringify(newList));\n\n  }\n\n    editItem(e){\n      const creation = parseInt(e.target.value);\n      const newList = this.state.toDoList;\n      const index = newList.findIndex(item => item.creation === creation);\n      if (index < 0) return; // correction\n\n      if (e.target.name === 'delete')  newList.splice(index,1);\n      else if (e.target.name === 'done')  newList[index].status = 'done';\n      else if (e.target.name === 'edit') {\n        const item = newList[index];\n        this.setState({\n          title: item.title, \n          creation: item.creation,\n          description: item.description,\n          deadline: new Date(item.deadline),\n          edit: item.creation})\n      return;\n    }\n\n    this.setState({toDoList: newList});\n    localStorage.setItem('toDoList', JSON.stringify(newList));\n    \n  }\n\n  handleFile(e){\n    if (e.target.name === 'save') {\n      const blob = new Blob(\n        [JSON.stringify(this.state.toDoList)],\n        {type: 'application/json;charset=utf-8'});\n      saveAs(blob, \"toDoList.json\");\n    } \n\n    if (e.target.name === 'load') {\n      const reader = new FileReader();\n/*\n      reader.onload = function(e) {\n        this.setState({toDoList: JSON.parse(reader.result)})\n      }.bind(this)\n*/\n      reader.onload = (e) => { \n        const newList = JSON.parse(reader.result);\n        this.setState({toDoList: newList});\n        localStorage.setItem('toDoList', reader.result);\n      }\n      // onload は読み込みに実行する処理の指定\n      // eは成功、失敗などの情報 (エラー処理は省略)\n\n      reader.readAsText(e.target.files[0]); // 読み込み開始\n    }\n  }\n\n} \n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\nserviceWorker.register();\n"],"sourceRoot":""}